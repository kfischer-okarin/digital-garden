{"pageProps":{"note":{"id":"mrbeopt2rixf1lhx6wo40gm","title":"Patterns","desc":"","updated":1669599396022,"created":1659574527255,"custom":{},"fname":"areas.software-development.patterns","type":"note","vault":{"fsPath":".","name":"digital-garden","selfContained":true},"contentHash":"ef7b4561d3eb84d576cd818c77bbdb1a","links":[],"anchors":{"patterns":{"type":"header","text":"Patterns","value":"patterns","line":7,"column":0,"depth":1},"injection-context-menu-rendering":{"type":"header","text":"Injection: Context menu rendering","value":"injection-context-menu-rendering","line":9,"column":0,"depth":2},"problem":{"type":"header","text":"Problem:","value":"problem","line":11,"column":0,"depth":3},"elements":{"type":"header","text":"Elements","value":"elements","line":17,"column":0,"depth":3},"constraint-based-layout":{"type":"header","text":"Constraint-based layout","value":"constraint-based-layout","line":52,"column":0,"depth":2}},"children":[],"parent":"1qgmr670moitcxxpmnmjxlp","data":{}},"body":"<h1 id=\"patterns\">Patterns<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#patterns\"></a></h1>\n<h2 id=\"injection-context-menu-rendering\">Injection: Context menu rendering<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#injection-context-menu-rendering\"></a></h2>\n<h3 id=\"problem\">Problem:<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#problem\"></a></h3>\n<p>You want to render a context menu deep in your UI but:</p>\n<ul>\n<li>you don't want to pass down all the listeners/handlers all the way down to the actual thing with a context menu</li>\n<li>you don't want the top level component that knows how to <strong>do</strong> the actions know how to <strong>render</strong> the menu (the\nlow level UI component will know that)</li>\n</ul>\n<h3 id=\"elements\">Elements<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#elements\"></a></h3>\n<ul>\n<li><code>MenuItemRenderer</code>: Knows how to render menu items &#x26; related elements</li>\n<li><code>MenuGenerator</code>: Knows what kind of menu items a particular component needs. Receives data of the Component needing an\ncontext menu and a <code>MenuItemRenderer</code> and then renders the actual menu</li>\n<li><code>UIController</code>: Something at the top building a <code>MenuGenerator</code> and providing it to the UI components below it</li>\n<li><code>Component</code>: This is the thing in need of a context menu. It receives the provided <code>MenuGenerator</code> it builds or has\naccess to a <code>MenuItemRenderer</code> and its own data. It calls the <code>MenuGenerator</code> with those.</li>\n</ul>\n<pre class=\"language-rb\"><code class=\"language-rb\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MenuItemRenderer</span>\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">render_item</span></span><span class=\"token punctuation\">(</span>label<span class=\"token punctuation\">,</span> on_click<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># ...</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MenuGenerator</span>\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">render_menu</span></span><span class=\"token punctuation\">(</span>item_data<span class=\"token punctuation\">,</span> render_context<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># if item_data ....</span>\n    render_context<span class=\"token punctuation\">.</span>render_item<span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'Item A'</span></span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span> do_something <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    render_context<span class=\"token punctuation\">.</span>render_item<span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'Item B'</span></span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span> do_something <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token comment\"># Menu renderer is somehow passed down here - Injection?</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ItemWithMenu</span>\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">render</span></span>\n    render_context <span class=\"token operator\">=</span> <span class=\"token class-name\">RenderContextForItem</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span>\n    menu_generator <span class=\"token operator\">=</span> MenuGeneratorContext<span class=\"token punctuation\">.</span>get\n    <span class=\"token variable\">@items</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">each</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>item<span class=\"token operator\">|</span>\n      menu_generator<span class=\"token punctuation\">.</span>render_menu<span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> render_context<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">end</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span>\n</code></pre>\n<h2 id=\"constraint-based-layout\">Constraint-based layout<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#constraint-based-layout\"></a></h2>\n<p>Flutter's layout algorith. See\n<a href=\"https://docs.flutter.dev/development/ui/layout/constraints\">Understanding constraints (Flutter Docs)</a></p>\n<blockquote>\n<p>Constraints go down. Sizes go up. Parent sets position</p>\n</blockquote>\n<ol>\n<li>Parent asks child component how big it wants to be given dimension constraints (min/max width/height)</li>\n<li>Child returns size inside constraints</li>\n<li>Parent places child inside itself</li>\n</ol>\n<pre class=\"language-rb\"><code class=\"language-rb\"><span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">layout_children</span></span>\n  children<span class=\"token punctuation\">.</span><span class=\"token keyword\">each</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>child<span class=\"token operator\">|</span>\n    <span class=\"token comment\"># calc constraints for child</span>\n    child<span class=\"token punctuation\">.</span>update_dimensions<span class=\"token punctuation\">(</span><span class=\"token symbol\">min_w</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">max_w</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">min_h</span><span class=\"token operator\">:</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">max_h</span><span class=\"token operator\">:</span><span class=\"token punctuation\">)</span>\n    child<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token operator\">...</span>\n    child<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token operator\">...</span>\n    child<span class=\"token punctuation\">.</span>layout_children\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span>\n\n</code></pre>","noteIndex":{"id":"w4mxpqpj9ftyo6pw17k3wj6","title":"Home","desc":"","updated":1660372010574,"created":1648806032875,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":".","name":"digital-garden","selfContained":true},"contentHash":"0d5b5a84c07edaf83aeeab9a0b1a2b42","links":[{"type":"wiki","from":{"fname":"root","id":"w4mxpqpj9ftyo6pw17k3wj6","vaultName":"digital-garden"},"value":"contact_me","position":{"start":{"line":10,"column":55,"offset":331},"end":{"line":10,"column":69,"offset":345},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"contact_me"}},{"type":"wiki","from":{"fname":"root","id":"w4mxpqpj9ftyo6pw17k3wj6","vaultName":"digital-garden"},"value":"areas.gamedev","position":{"start":{"line":14,"column":3,"offset":402},"end":{"line":14,"column":20,"offset":419},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"areas.gamedev"}},{"type":"wiki","from":{"fname":"root","id":"w4mxpqpj9ftyo6pw17k3wj6","vaultName":"digital-garden"},"value":"areas.software-development","position":{"start":{"line":15,"column":3,"offset":422},"end":{"line":15,"column":33,"offset":452},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"areas.software-development"}},{"type":"wiki","from":{"fname":"root","id":"w4mxpqpj9ftyo6pw17k3wj6","vaultName":"digital-garden"},"value":"reference.faith-and-work","position":{"start":{"line":17,"column":5,"offset":517},"end":{"line":17,"column":33,"offset":545},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"reference.faith-and-work"}},{"type":"wiki","from":{"fname":"root","id":"w4mxpqpj9ftyo6pw17k3wj6","vaultName":"digital-garden"},"value":"reference.adhd","position":{"start":{"line":19,"column":3,"offset":583},"end":{"line":19,"column":21,"offset":601},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"reference.adhd"}},{"type":"wiki","from":{"fname":"root","id":"w4mxpqpj9ftyo6pw17k3wj6","vaultName":"digital-garden"},"value":"areas.pkm","alias":"Personal Knowledge Management (PKM)","position":{"start":{"line":20,"column":3,"offset":604},"end":{"line":20,"column":52,"offset":653},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"areas.pkm"}}],"anchors":{"welcome-to-my-little-corner-of-the-internet":{"type":"header","text":"Welcome to my little corner of the internet","value":"welcome-to-my-little-corner-of-the-internet","line":7,"column":0,"depth":1},"topics-i-care-about":{"type":"header","text":"Topics I care about","value":"topics-i-care-about","line":19,"column":0,"depth":2},"media-i-enjoy":{"type":"header","text":"Media I enjoy","value":"media-i-enjoy","line":28,"column":0,"depth":2}},"children":["ckpt5dqzm4fv2ysnyyqi5q7","qexkgwym6yebjwrl1pz2wco","contact_me","gk4xjszil72ursnl10ui5ht","tu102fn6psvc3ef33p2jl5p","426vv89cwpwrk3pezm4idax","ceagbmx4k3i5sokhd3n8iyf","43bj5hyl41q0txr2e0rhcaw","sjq1fqcpyomz6hii19blfsh","krioclkr3atix89tw0300y8","5j5jqiz50loi24n5r18y9kd","hn6qnp0te5vs8l76eik6o4c"],"parent":null,"data":{},"body":"# Welcome to my little corner of the internet\n\nHey, everyone!\n\nI'm Kevin and this page is my own shot at a Digital Garden[^1].\n\nThis is a low-barrier[^2] experiment for myself to organize my thoughts and publish content and maybe find like-minded\nindividuals to connect with.\n\nThis space will slowly evolve over time. Feel free to [[contact_me]] if you want to get in touch.\n\n\n## Topics I care about\n- [[areas.gamedev]]\n- [[areas.software-development]]\n- Christian Faith and how it relates to several other areas\n  - [[reference.faith-and-work]]\n  - Faith and Creativity/Art/Media\n- [[reference.adhd]]\n- [[Personal Knowledge Management (PKM)|areas.pkm]]\n\n## Media I enjoy\n- 🇯🇵 Anime/Manga\n  - Steins;Gate\n  - Attack on Titan\n  - Death Note\n- 📺 TV Series\n  - Twelve Monkeys\n  - Dark\n  - Deep Space 9\n- 🎥 Movies\n  - Big Fish\n  - Memento\n- 📖 Books\n  - Das Haus der Geschichten (Thomas Franke)\n  - The Screwtape Letters (C.S. Lewis)\n- 🎮 Video Games\n  - Secret of Mana (SNES)\n  - Outer Wilds\n  - Undertale\n\n\n[^1]: I recommend the explanation on [Joschua's Garden](https://joschuasgarden.com/Digital+garden) and his digital garden in general.\n\n[^2]: I personally thought several times about starting a blog for sharing game development, software engineering tidbits/ramblings but my tendency for perfectionism especially with regard to minor details like names, design, style as well as the perceived pressure of having to regularly output some kind of meaningful content stopped me from actually going through with it until now.\n"},"collectionChildren":null,"customHeadContent":"<link rel=\"alternate\" type=\"application/atom+xml\" href=\"https://kfischer-okarin.github.io/digital-garden/feed.xml\">\n","config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":true,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"enableFullHierarchyNoteTitle":false,"vaults":[{"fsPath":".","name":"digital-garden","selfContained":true}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":false,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800},"preview":{"enableFMTitle":false,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"siteUrl":"https://kfischer-okarin.github.io","assetsPrefix":"/digital-garden","customHeaderPath":"header.html","enableFMTitle":false,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"My Digital Garden","description":"Kevin Fischer's Digital Garden.","author":"Kevin Fischer"},"github":{"enableEditLink":false,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enablePrettyLinks":true,"enableTaskNotes":true,"searchMode":"lookup","siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}