{"keys":[{"path":["title"],"id":"title","weight":1,"src":"title"},{"path":["body"],"id":"body","weight":1,"src":"body"}],"records":[{"i":0,"$":{"0":{"v":"This page has not yet sprouted","n":0.408},"1":{"v":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","n":0.189}}},{"i":1,"$":{"0":{"v":"Home","n":1},"1":{"v":"# Welcome to my little corner of the internet\n\nHey, everyone!\n\nI'm Kevin and this page is my own shot at a Digital Garden[^1].\n\nThis is a low-barrier[^2] experiment for myself to organize my thoughts and publish content and maybe find like-minded\nindividuals to connect with.\n\nThis space will slowly evolve over time. Feel free to [[contact_me]] if you want to get in touch.\n\n\n## Topics I care about\n- [[areas.gamedev]]\n- [[areas.software-development]]\n- Christian Faith and how it relates to several other areas\n  - [[reference.faith-and-work]]\n  - Faith and Creativity/Art/Media\n- [[reference.adhd]]\n- [[Personal Knowledge Management (PKM)|areas.pkm]]\n\n## Media I enjoy\n- 🇯🇵 Anime/Manga\n  - Steins;Gate\n  - Attack on Titan\n  - Death Note\n- 📺 TV Series\n  - Twelve Monkeys\n  - Dark\n  - Deep Space 9\n- 🎥 Movies\n  - Big Fish\n  - Memento\n- 📖 Books\n  - Das Haus der Geschichten (Thomas Franke)\n  - The Screwtape Letters (C.S. Lewis)\n- 🎮 Video Games\n  - Secret of Mana (SNES)\n  - Outer Wilds\n  - Undertale\n\n\n[^1]: I recommend the explanation on [Joschua's Garden](https://joschuasgarden.com/Digital+garden) and his digital garden in general.\n\n[^2]: I personally thought several times about starting a blog for sharing game development, software engineering tidbits/ramblings but my tendency for perfectionism especially with regard to minor details like names, design, style as well as the perceived pressure of having to regularly output some kind of meaningful content stopped me from actually going through with it until now.\n","n":0.068}}},{"i":2,"$":{"0":{"v":"Tags","n":1}}},{"i":3,"$":{"0":{"v":"Dendron","n":1}}},{"i":4,"$":{"0":{"v":"Check on Update","n":0.577}}},{"i":5,"$":{"0":{"v":"To Write","n":0.707}}},{"i":6,"$":{"0":{"v":"Reference","n":1}}},{"i":7,"$":{"0":{"v":"Tools","n":1}}},{"i":8,"$":{"0":{"v":"Joplin","n":1}}},{"i":9,"$":{"0":{"v":"How To","n":0.707}}},{"i":10,"$":{"0":{"v":"Restore a deleted note","n":0.5},"1":{"v":"\n# Restore a deleted note\n\nOpen the Joplin database with SQLite3\n\n```sh\nsqlite3 ~/.config/joplin-desktop/database.sqlite\n```\n\nSelect latest revisions to find your note's item id.\n\n```sql\nsqlite> select item_id, body_diff, created_time from revisions order by created_time;\n```\n\nOpen the command palette in Joplin with `Cmd+Shift+P` and enter\n\n```joplin\nrestoreNoteRevision <item_id>\n```\n","n":0.162}}},{"i":11,"$":{"0":{"v":"Dropbox","n":1}}},{"i":12,"$":{"0":{"v":"How To","n":0.707}}},{"i":13,"$":{"0":{"v":"Upload a File via API","n":0.447},"1":{"v":"# Upload a File via API\n\n## One-Time Preparation: Create a Dropbox App\n- [Create a Dropbox App](https://www.dropbox.com/developers/apps/create) which has at least the permission\n  `file.content.write`\n- Write down the App key (`APP_KEY`) and App secret (`APP_SECRET`)\n\n## One-Time Preparation: Get a OAuth 2.0 Refresh Token\n- Open the url\n  ```\n  https://www.dropbox.com/oauth2/authorize?client_id=<APP_KEY>&token_access_type=offline&response_type=code\n  ```\n  and authorize the App.\n- Write down the authorization code (`AUTHORIZATION_CODE`)\n- Retrieve a refresh token\n  ```sh\n  curl https://api.dropbox.com/oauth2/token \\\n       -d code=<AUTHORIZATION_CODE> \\\n       -d grant_type=authorization_code \\\n       -u <APP_KEY>:<APP_SECRET>\n  ```\n  The response will contain the refresh token at the JSON key `\"refresh_token\"`. Write it down (`REFRESH_TOKEN`)\n\n## Uploading the File\n- Get an up-to-date access token\n  ```sh\n  curl https://api.dropbox.com/oauth2/token \\\n       -d grant_type=refresh_token \\\n       -d refresh_token=<REFRESH_TOKEN> \\\n       -u <APP_KEY>:<APP_SECRET>\n  ```\n  The access token will be returned at the JSON key `\"access_token\"`. Write it down (`ACCESS_TOKEN`).\n- Upload the file\n  ```sh\n  curl -X POST https://content.dropboxapi.com/2/files/upload \\\n       --header \"Authorization: Bearer <ACCESS_TOKEN>\" \\\n       --header \"Dropbox-API-Arg: {\\\"path\\\":\\\"/Path/To/Dropbox/Destination\\\",\\\"mode\\\":\\\"overwrite\\\",\\\"mute\\\":true}\" \\\n       --header \"Content-Type: application/octet-stream\" \\\n       --data-binary @path/to/file/to/upload\n  ```\n  You can reuse the access token as long as it is valid\n","n":0.078}}},{"i":14,"$":{"0":{"v":"Figma","n":1}}},{"i":15,"$":{"0":{"v":"Keyboard Shortcuts","n":0.707},"1":{"v":"# Keyboard Shortcuts\n\n- `Cmd+/`: Command palette\n\n## Navigation\n- `Shift+1`: Zoom to fit all\n- `Shift+2`: Zoom to fit selection\n- `N` / `Shift+N`: Next/Previous Frame\n- `Hold Space`: Hand tool\n\n## Create\n- `F`: Frame\n- `T`: Text Layer\n\n## Layers\n- `[` / `]`: Bring to front/back\n- `Shift+[` / `Shift+]`: Move one layer to the front/back\n- `Cmd+Shift+L`: Lock/Unlock\n","n":0.141}}},{"i":16,"$":{"0":{"v":"Physics","n":1}}},{"i":17,"$":{"0":{"v":"How To","n":0.707}}},{"i":18,"$":{"0":{"v":"Find an equivalent Force Couple System","n":0.408},"1":{"v":"\n# Find an equivalent Force Couple System\n\nhttps://www.rpi.edu/dept/core-eng/WWW/IEA/f15/lectures/Lecture12.pdf\n\n- Add together all forces to get the resulting force\n- Calculate the the moments (torques) around the point of reference (e. g. mass center)\n","n":0.183}}},{"i":19,"$":{"0":{"v":"Math","n":1}}},{"i":20,"$":{"0":{"v":"How To","n":0.707}}},{"i":21,"$":{"0":{"v":"Find Intersection of two Circles","n":0.447},"1":{"v":"\n# Find Intersection of two Circles\n\n![Circle Intersection](assets/images/circle_intersection_1.png)<br/>\n[Geogebra File](assets/misc/circle_intersection_1.ggb)\n\n## Given:\n\n- Points $A$, $B$\n  - Gives us the distance $d$ between them\n- Radiuses:<br/>\n  $\n  r_A = \\vert\\overline{AC}\\vert\\\\\n  r_B = \\vert\\overline{BC}\\vert\n  $\n\n## Steps\n\n### Finding $a$\nThe two inner triangles give us:\n\n1. $a^2 + h^2 = r_A^2$\n2. $b^2 + h^2 = r_B^2$\n\nEqualing by $h^2$:\n\n$r_A^2 - a^2 = r_B^2 - b^2$\n\nSubstituting $b = d - a$:\n\n$r_A^2 - a^2 = r_B^2 - (d - a)^2 \\\\\n\\Rightarrow r_A^2 - a^2 = r_B^2 - d^2 + 2da - a^2 \\\\\n\\Rightarrow r_A^2 = r_B^2 - d^2 + 2da \\\\\n\\Rightarrow a = \\frac{r_A^2 - r_B^2 + d^2}{2d}\n$\n\n### Calculate angle $\\gamma$\n![Circle Intersection](assets/images/circle_intersection_2.png)<br/>\n[Geogebra File](assets/misc/circle_intersection_2.ggb)\n\nCalculate $\\alpha$:\n\n$\n\\alpha = arccos(\\frac{a}{r_A})\n$\n\nCalculate $\\beta$ from the line $\\overline{AB}$:\n\n$\n\\beta = arccos(\\frac{\\vert x_A - x_B \\vert}{d})\n$\n\nThis will give us the angle $\\gamma$ towards the point C:\n\n$\n\\gamma = \\alpha - \\beta\n$\n\n## Calculate C:\n\n$\n\\begin{bmatrix}\nx_C \\\\\ny_C\n\\end{bmatrix} =\n\\begin{bmatrix}\nx_A \\\\\ny_A\n\\end{bmatrix} +\nr_A \\begin{bmatrix}\ncos(\\gamma) \\\\\nsin(\\gamma)\n\\end{bmatrix}\n$\n\n---\n\n## Alternative: Inverse Kinematics (?)\n\n- $\\gamma$ like above: joint angle at A\n- $\\delta$: joint angle at C\n\n$\n\\begin{bmatrix}\nx_C \\\\\ny_C\n\\end{bmatrix} =\n\\begin{bmatrix}\nx_A \\\\\nx_B\n\\end{bmatrix} +\nr_A \\begin{bmatrix}\ncos(\\gamma) \\\\\nsin(\\gamma)\n\\end{bmatrix}\n$\n\n$\n\\begin{bmatrix}\nx_B \\\\\ny_B\n\\end{bmatrix} =\n\\begin{bmatrix}\nx_C \\\\\ny_C\n\\end{bmatrix} +\nr_B \\begin{bmatrix}\ncos(\\delta) \\\\\nsin(\\delta)\n\\end{bmatrix}\n$\n\nFind $\\gamma$ and $\\delta$\n","n":0.077}}},{"i":22,"$":{"0":{"v":"Check If a Sample Fits a Distribution","n":0.378},"1":{"v":"# Check If a Sample Fits a Distribution\n\nUse a [[$$\\chi^2$$ Test|]]\n","n":0.302}}},{"i":23,"$":{"0":{"v":"Writing","n":1}}},{"i":24,"$":{"0":{"v":"Writing Well","n":0.707},"1":{"v":"# Writing well\n\n- Have one very clear purpose/topic\n\n## Steps from Writing, Briefly by Paul Graham\n\nSource: http://paulgraham.com/writing44.html\n\n1. Write a bad version 1 as fast as you can\n2. Rewrite it over and over\n3. Cut out everything unnecessary\n4. Write in a conversational tone\n5. Develop a nose for bad writing, so you can see and fix it in yours;\n6. Imitate writers you like\n7. If you can't get started, tell someone what you plan to write about, then write down what you said\n8. Expect 80% of the ideas in an essay to happen after you start writing it, and 50% of those you start with to be\n   wrong\n9. Be confident enough to cut\n10. Have friends you trust read your stuff and tell you which bits are confusing or drag\n11. Don't (always) make detailed outlines\n12. Mull ideas over for a few days before writing; carry a small notebook or scrap paper with you\n13. Start writing when you think of the first sentence; if a deadline forces you to start before that, just say the most\n    important sentence first\n14. Write about stuff you like\n15. Don't try to sound impressive\n16. Don't hesitate to change the topic on the fly\n17. Use footnotes to contain digressions\n18. Use anaphora to knit sentences together\n19. Read your essays out loud to see (a) where you stumble over awkward phrases and (b) which bits are boring (the\n    paragraphs you dread reading)\n20. Try to tell the reader something new and useful\n21. Work in fairly big quanta of time\n22. When you restart, begin by rereading what you have so far\n23. When you finish, leave yourself something easy to start with\n24. Accumulate notes for topics you plan to cover at the bottom of the file; don't feel obliged to cover any of them;\n25. Write for a reader who won't read the essay as carefully as you do, just as pop songs are designed to sound ok on\n    crappy car radios\n26. If you say anything mistaken, fix it immediately\n27. Ask friends which sentence you'll regret most\n28. Go back and tone down harsh remarks\n29. Publish stuff online, because an audience makes you write more, and thus generate more ideas\n30. Print out drafts instead of just looking at them on the screen\n31. Use simple, germanic words\n32. Learn to distinguish surprises from digressions\n33. Learn to recognize the approach of an ending, and when one appears, grab it.\n\n## Resources\nhttps://github.com/mnielsen/notes-on-writing/blob/master/notes_on_writing.md\n\n![Youtube Icon](assets/youtube-icon.svg){height: 1rem} [Brandon Sanderson on Writing - Video Course](https://www.youtube.com/watch?v=N4ZDBOc2tX8)\n","n":0.05}}},{"i":25,"$":{"0":{"v":"Copywriting Cheatsheet","n":0.707},"1":{"v":"\n# Copywriting Cheatsheet\n\nAdapted from ![Twitter Icon](assets/twitter-icon.svg){height: 1rem}[dickiebush](https://twitter.com/dickiebush) tweets\nand his online guide\n[How To Start Writing Online](https://www.ship30for30.com/post/how-to-start-writing-online-the-ship-30-for-30-ultimate-guide)\n\n## What's the big idea here?\n- What's my product's biggest benefit?\n- What's most exciting about this product?\n- What emotion am I trying to create.\n\n## Principles\n- Define your ideal customer\n- Write directly to them\n- Focus on headline and first sentence\n\n## Flow\n1. Here's your problem\n2. Here's the benefit of solving it\n3. Here's why what you've tried has failed\n4. And by the way here's a product that will help you solve it\n5. (some people add) And here's some people who had that problem and solved it with this product\n\n## Sentence structure\n\n### 1/3/1\n> This first sentence is your opener.\n>\n> This second sentence clarifies your opener. This third sentence reinforces the point you're making with some sort of credibility or amplified description. And this fourth sentence rounds out your argument, guiding the reader toward your conclusion.\n>\n> This fifth sentence is your strong conclusion.\n\nWhat makes this 1/3/1 sequence \"work\" is that the first sentence and the last sentence act as bookends to the bulk of the content in the middle. These single-sentence lines make the reader feel as though they've reached a checkpoint, which acts as a small dopamine hit encouraging them to continue reading.\n\n1/3/1 is an especially great framework for introductions and openers, but the truth is, it can be used anytime, anywhere within your writing. In fact, you could write an entire essay or article (or even book) using the 1/3/1 sequence and readers wouldn't realize you were following a pattern. They would just think to themselves, \"Wow, this thing flows so well! It's so easy to read.\"\n\nHere's an example of the 1/3/1 sequence in action:\n\n> 100 years ago, The Campbells's Soup Company had a breakthrough.\n>\n> For 30 years, the business sold little else besides produce, canned tomatoes, vegetables, jellies, condiments, minced\n> meats, and of course, soups. Business was good, but there was nothing \"radically different\" about these products.\n> Canning had been widely accepted as a method for sealing food since the early 1800s, and even when pasteurization was\n> invented in 1864, fresh foods were difficult products to scale. Soup, for example, while cheap to make (its primary\n> ingredient being water), was still heavy and expensive to ship.\n>\n> Until, in 1895, a chemist within the company named John T. Dorrance came up with a radically different idea.\n\nfrom [Campbell's Soup & How To Design A Category Breakthrough In The Roaring 2020s](https://categorypirates.substack.com/p/campbells-soup-and-how-to-design)\n\n","n":0.05}}},{"i":26,"$":{"0":{"v":"Video Games","n":0.707}}},{"i":27,"$":{"0":{"v":"Stellaris","n":1},"1":{"v":"# Stellaris\n\n## Building Species\n- Roleplaying Style\n  - Make up a kind of species you like to be\n- Min Max Style\n  - Totally focus on one thing with traits and civics (e.g. Engineering research)\n- Random Species\n- Challenge Run\n\n## Exploration\n- about 4-5 Science ships in the beginning\n- Research only anomalies at most 1 level above the scientist\n- If you need to expand quick, Leave anomalies in the beginning and focus on finding your neighbors\n- Capture chokepoint systems\n  - Keeping neutral dangers alive in those systems can be a good defense\n\n## Traditions\n- usually Discovery / Expansion is good in the beginning\n- Expansion is good for grabbing new space - good for more aggressive play\n- Ascension Perks\n  - Technological Ascendancy is a good first one (but it depends on your playstyle)\n- Supremacy and Unyielding (DLC) are good for fighting\n\n## Research\n- Material sciences is a good focus in the beginning\n- Recommended Techs\n  - Powered Exoskeletons -> Robotics\n  - Planetary Unification\n  - Flat research bonuses first\n  - Also getting Population growth is usually good\n  - Destroyer\n  - Starhold\n  - Star Fortress & Battleships will lead to Mega Engineering\n\n## Planet Management\n- Remove blockers to have more population growth\n  - You can remove blockers during colonizing!\n  - Turn on edict using Motes to speed up blocker removal\n- Good first buildings: Gene Clininics, Robot Factory\n- Clerks are not very good in the beginning but can be useful when low on amenities\n- Designations\n  - Urban World is good because it reduces building upkeep (including special resources for advanced buildings)\n  - Mining World not only boosts mining but also Special Resources\n  - Factory/Forge world forces industry districts to only have jobs of their type instead of 1 Artisan and 1\n    Metallurgist\n  - Tech World Designation is quite useless: Researcher upkeep is too little to be worth it, better boost your secondary\n    infrastructure on Research worlds\n- Don't build more than you need/can work\n  - But: New Colonies have high immigration pull (until 10 pops) so it's might be worth to have 5-6 open jobs\n- Districts\n  - City / Industry is unlimited\n  - other districts depend on features\n  - It's good to specialize planets\n- Jobs\n  - Don't produce too many specialist/ruler jobs since pops will promote themselves readily but will only very slowly\n    demote themselves again\n\n## Starbases\n- Build Naval\n- Have Hydroponic Farms where ever possible\n- Over colonies having a Transit Hub is good\n\n## Policies\n- Liberation Wars allows you to wage war to change an enemy ethic\n- Expansionist is not so good actually - Cooperative is better once you have a neighbor and want to be friendly with\n  them\n- Economic policy gives you either an advantage in consumer goods or in alloys\n\n## Factions\n- Promote one easy to please faction with a good presidential candidate\n\n## Trade\n- Trade value is collected from Starports with tradehubs (1 Range per tradehub) - or from same system without anything\n- Trade policy decides what Trade Value is being converted into\n- Trade routes attract pirates which can be kept away with fleets patrolling along the route\n\n## War\n- Build lots of Defense platforms at chokepoints\n- Put your ships at the front line before war\n- Defensive buildings - all of them are good but Disruption field generator\n- Claim systems to get the Conquer War Goal\n- Ways to end a war\n  - War exhaustion reaches 100% - other party can decide the terms of the peace\n  - Achieve all war goals\n  - Surrender\n  - Make a settlement of the current status quo\n- Tactics\n  - Don't move your fleet in node systems where enemies could come from many sides - let a science ship go there first\n    to explore\n- After war there will be definitely 10 years of peace and open borders\n- If you set Ground Army vessels to aggressive stance they will follow your naval vessels and automatically conquer\n  planets if they think they can win\n- If you incorporate new species/planets\n  - Make sure to build precinct houses to decrease crime\n  - Give them only residence rights if their ethics are too different so they cannot have too much political influence\n  - Suppress factions with contrary ethics\n\n## Ship design\n- Corvette: Brawler (main), Screen (support), Gunship (secondary)\n- You need better power first before you can use better shields\n- Usually it's good to have a good mix of armor and shield\n- Try to get power down to 0\n\n## Influence\n- Have close to maximum of your fleet capacity to get maximum power projection influence (basically trading upkeep for\n  higher influence)\n- Have rivalries with unfriendly empires to get more influence!!!\n\n## Elections\n- Your leaders with high levels are tend to be chosen as candidates which will the scientists in many cases...\n\n## Enclaves\n- Artisan troop contracts give influence through events! Festivals give Happiness and Pop Growth for 5 years\n","n":0.036}}},{"i":28,"$":{"0":{"v":"Stardew Valley","n":0.707},"1":{"v":"# Where to find...\n- **Coal**:\n  - Dropped by Dust Sprites (Mines 41-79)\n  - Buy at Blacksmith for 150g/250g\n","n":0.236}}},{"i":29,"$":{"0":{"v":"Dragon Quest Monsters","n":0.577},"1":{"v":"# Dragon Quest Monsters\n\n## Personalities (Japanese)\n\n|Personality|Tactics|\n|-----------|-------|\n|あわてもの\t| いろいろやろうぜ|\n|いっぴきおおかみ\t| いのちをだいじに|\n|いのちしらず\t| いろいろやろうぜ|\n|うっかりもの\t| ガンガンいこうぜ|\n|うぬぼれや\t| いのちをだいじに|\n|おくびょうもの\t| ガンガンいこうぜ|\n|おせっかい\t| いろいろやろうぜ|\n|おひとよし | ガンガンいこうぜ|\n|がんこもの\t| いのちをだいじに|\n|きまぐれ\t| ガンガンいこうぜ|\n|きれもの\t| ガンガンいこうぜ|\n|こうかつ\t| ガンガンいこうぜ|\n|だいたんふてき\t| いろいろやろうぜ|\n|たかびしゃ\t| いのちをだいじに|\n|ちょとつもうしん\t| いろいろやろうぜ|\n|なまけもの | ガンガンいこうぜ|\n|にんじょうか\t| ガンガンいこうぜ|\n|ぬけめがない\t| ガンガンいこうぜ|\n|ねっけつかん\t| ---|\n|のんきもの\t | ガンガンいこうぜ|\n|ひねくれもの\t| いのちをだいじに|\n|ふつう\t| ガンガンいこうぜ|\n|みえっぱり\t| いろいろやろうぜ|\n|ゆうじゅうふだん\t| ガンガンいこうぜ|\n|らくてんか\t| いろいろやろうぜ|\n|れいせいちんちゃく\t| ガンガンいこうぜ|\n|わがまま\t| いろいろやろうぜ|\n\n\n\n\n","n":0.167}}},{"i":30,"$":{"0":{"v":"Tools For","n":0.707}}},{"i":31,"$":{"0":{"v":"Writing Documentation","n":0.707},"1":{"v":"# Writing Documentation\n\n## mdBook\n\n> mdBook is a utility to create modern online books from Markdown files.\n\nhttps://github.com/rust-lang/mdBook\n","n":0.25}}},{"i":32,"$":{"0":{"v":"Visualizing JSON","n":0.707},"1":{"v":"# Visualizing JSON\n\n## JSON Crack\n\nhttps://jsoncrack.com/\n","n":0.447}}},{"i":33,"$":{"0":{"v":"Tuning Machine Learning Model Parameters","n":0.447},"1":{"v":"# Tuning Machine Learning Model Parameters\n\n## Comet\nhttps://www.comet.com/\n\n- Dashboard to see your model parameter tuning results\n- Free for single private users\n","n":0.224}}},{"i":34,"$":{"0":{"v":"Testing APIs","n":0.707},"1":{"v":"\n# Testing APIs\n\n## Pact (Ruby gem)\n\nhttps://pact.io/\nhttps://github.com/pact-foundation/pact-ruby\n\n> Define a pact between service consumers and providers, enabling \"consumer driven contract\" testing.\n\n- Define common specification for API and its consumer\n","n":0.192}}},{"i":35,"$":{"0":{"v":"Scanning Rooms","n":0.707},"1":{"v":"# Scanning Rooms\n\n## polycam\n> 3D CAPTURE, FOR EVERYONE\n\nhttps://poly.cam/\n","n":0.354}}},{"i":36,"$":{"0":{"v":"Password Protecting a Static Website","n":0.447},"1":{"v":"# Password Protecting a Static Website\n\n## Staticrypt\nhttps://github.com/robinmoisson/staticrypt\n","n":0.378}}},{"i":37,"$":{"0":{"v":"Naming Colors","n":0.707},"1":{"v":"\n# Naming Colors\n\nhttps://meodai.github.io/color-names/\n\n18,000 named colors\n","n":0.447}}},{"i":38,"$":{"0":{"v":"Mocking Requests","n":0.707},"1":{"v":"\n# Mocking Requests\n\n## Node.js\n- [MSW](https://mswjs.io/)\n","n":0.447}}},{"i":39,"$":{"0":{"v":"Hosting","n":1},"1":{"v":"\n# Hosting\n\n## Vercel\nhttps://vercel.com/\n\nAll-in-one frontend workflow + deploy + quick accessibility + serverless functions\n\n","n":0.277}}},{"i":40,"$":{"0":{"v":"Generating Game Ideas","n":0.577},"1":{"v":"# Generating Game Ideas\n\n- Genre, Graphic Style, Theme, Number of Players - GIFs as random generators on ![Twitter Icon](assets/twitter-icon.svg){height: 1rem} [Twitter](https://twitter.com/![[Game Development|areas.gamedev]]/status/1646149447221641216)\n","n":0.213}}},{"i":41,"$":{"0":{"v":"Generating Fake Data","n":0.577},"1":{"v":"\n# Generating Fake Data\n\n## Node.js\n- [faker.js](https://fakerjs.dev/)\n","n":0.408}}},{"i":42,"$":{"0":{"v":"Generating Cities","n":0.707},"1":{"v":"# Generating Cities\n\n## Ex Novo\nhttps://sharkbombs.itch.io/ex-novo\n\n> Ex Novo is a playable city-generator that helps you construct, and populate fictional villages, towns, and cities.\nThis physical game can be played solo or with up to 3 friends. Playtime ranges from 1 to 3 hours.\n","n":0.156}}},{"i":43,"$":{"0":{"v":"Finding Font Sizes","n":0.577},"1":{"v":"# Finding Font Sizes\n\n## Type Scale Calculator\n\nhttps://type-scale.com/\n\n- Finds font sizes that work well together\n","n":0.267}}},{"i":44,"$":{"0":{"v":"Finding Font Pairings","n":0.577},"1":{"v":"\n# Finding Font Pairings\n\n## fontpair\n\nhttps://www.fontpair.co/\n","n":0.447}}},{"i":45,"$":{"0":{"v":"Finding Colors","n":0.707},"1":{"v":"\n# Finding Colors\n\n## hue.tools\n\nhttps://hue.tools/\n\n- Mix colors and make gradients\n- Blend two colors\n- Modify Colors\n\n## Finding the nearest Tailwind colour\n\nhttps://find-nearest-tailwind-colour.netlify.app/\n","n":0.229}}},{"i":46,"$":{"0":{"v":"Drawing Online","n":0.707},"1":{"v":"\n# Drawing Online\n\nhttps://excalidraw.com/\n","n":0.577}}},{"i":47,"$":{"0":{"v":"Drawing DnD Maps","n":0.577},"1":{"v":"# Drawing DnD Maps\n\nhttps://www.dungeonscrawl.com/\n","n":0.5}}},{"i":48,"$":{"0":{"v":"Developing a Web App","n":0.5},"1":{"v":"\n# Devleoping a Web App\n\n## Remix\nhttps://remix.run/\n","n":0.408}}},{"i":49,"$":{"0":{"v":"Creating Voiceover Videos","n":0.577},"1":{"v":"# Creating Voiceover Videos\n\n- https://www.narakeet.com/\n  - Give Slides with notes or a mark down file to edit a video with autogenerated voiceover\n","n":0.213}}},{"i":50,"$":{"0":{"v":"Creating Temporary Mail Addresses","n":0.5},"1":{"v":"# Creating Temporary Mail Addresses\n\n## Temp-Mail\nhttps://temp-mail.org/\n","n":0.408}}},{"i":51,"$":{"0":{"v":"Creating Sound Effects","n":0.577},"1":{"v":"# Creating Sound Effects\n\n## ChipTone\n\nhttps://sfbgames.itch.io/chiptone\n\n## Synplant\nhttps://soniccharge.com/synplant\n\n> Syn­plant is a soft­ware syn­thes­izer with a ge­net­ic ap­proach to sound cre­ation. In­stead of cre­at­ing patches the\ncon­ven­tion­al way by turn­ing di­als and knobs, Syn­plant lets you ex­plore a world of or­gan­ic sounds by plant­ing seeds\nthat grow in­to synth patches.\n\n![](https://cdn.soniccharge.com/rc/8c1d617f/static/images/CO-bulb.png)\n","n":0.149}}},{"i":52,"$":{"0":{"v":"Creating Music","n":0.707},"1":{"v":"# Creating Music\n\n## Beepbox\n\n> BeepBox is an online tool for sketching and sharing instrumental music.\n\nhttps://www.beepbox.co/\n\n\n## GarageBand\n\n- Comes with MacOS\n\n\n## Awesome Music Production List on Github\n\nhttps://github.com/ad-si/awesome-music-production\n\n##\n","n":0.2}}},{"i":53,"$":{"0":{"v":"Creating CSS Animations","n":0.577},"1":{"v":"# Creating CSS Animations\n\nhttps://animate.style/\n","n":0.5}}},{"i":54,"$":{"0":{"v":"Creating Color Palettes","n":0.577},"1":{"v":"# Creating Color Palettes\n\n## Poline\n\nhttps://meodai.github.io/poline/\n> \"Poline\" is an enigmatic color palette generator, that harnesses the mystical witchcraft of polar coordinates.\n","n":0.224}}},{"i":55,"$":{"0":{"v":"Creating Color Gradients","n":0.577},"1":{"v":"# Creating Color Gradients\n\n## Vivid Gradient Generator Tool\nhttps://www.learnui.design/tools/gradient-generator.html\n\n- Creates colorful, vivid gradients\n","n":0.289}}},{"i":56,"$":{"0":{"v":"Converting Files","n":0.707},"1":{"v":"# Converting Files\n\n## Tiny WOW\n\nhttps://tinywow.com/\n\n- Convert PDF to image\n- Image formats\n- Cut PDFs etc\n","n":0.267}}},{"i":57,"$":{"0":{"v":"Building Text Editor","n":0.577},"1":{"v":"# Building a Text Editor\n\n## Lexical\nhttps://lexical.dev/\n","n":0.408}}},{"i":58,"$":{"0":{"v":"Building SaaS","n":0.707},"1":{"v":"# Building SaaS\n\n- [Bullet Train](https://bullettrain.co/)\n","n":0.447}}},{"i":59,"$":{"0":{"v":"Automation","n":1},"1":{"v":"\n# Automation\n\n## Hammerspoon\n\nhttp://www.hammerspoon.org/\n\nmacOS automation tool\n- Interact with macos\n- react to events\n","n":0.302}}},{"i":60,"$":{"0":{"v":"Nostalgia","n":1}}},{"i":61,"$":{"0":{"v":"NANACA†CRASH!!","n":1},"1":{"v":"# NANACA†CRASH!!\n\nOld Flash Game where you hit a boy with a bike and have to blast him as far as possible\n\nWorking port is here: https://megami.starcreator.com/nanaca-crash/\n","n":0.2}}},{"i":62,"$":{"0":{"v":"Management","n":1}}},{"i":63,"$":{"0":{"v":"11 Promises from a Manager","n":0.447},"1":{"v":"\n# 11 Promises from a Manager\n\n1. We’ll have a weekly 1:1. I’ll never cancel this meeting, but you can cancel it whenever you like. It’s your time.\n2. Our 1:1 agenda will be in the meeting invite so we remember important topics. But you’re always free to use the time\n   for whatever’s on your mind.\n3. When I schedule a meeting with you, I’ll always say *when I schedule it* what it’s meant to be about. I will not\n   schedule meetings without an agenda.\n4. When I drop into your DM’s, I’ll always say “hi and why.” No suspense, no small talk while you are wondering what I\n   want.\n5. News or announcements that significantly impact you, your work, or your team will come from me directly in a 1:1,\n   not revealed in a big meeting.\n6. You’ll get feedback from me when it’s fresh. There will be no feedback in your performance review that you’re\n   hearing for the first time.\n7. I trust you to manage your own time. You don’t need to clear with me in advance your time AFK or OOO.\n8. Your work gets done your way. My focus is on outcomes, not output. Once we’re clear on where we need to go, how to\n   get there is up to you. If I ever find it necessary to suggest a specific approach, I will supply an example.\n9. A team is strongest when it’s working together, looking after one another, and taking care of each other. Please\n   look to your left and to your right for opportunities to help your colleagues. Please ask for help when you need it.\n   Nobody works alone.\n10. I trust you to skip level and talk to my manager or other senior management about anything you feel is relevant.\n    You don’t need to clear it with me, and I’m not going to get weird about it when you do.\n11. I will attribute credit appropriately to you and your team. I will never exaggerate my own role or minimize your\n    contribution. I’ll be especially certain to nail down attribution when senior management are hearing of our\n    accomplishments.\n\nIf this sounds good to you, please reciprocate by giving me in return what I need most: The truth. Give me your\nfeedback, say when I’m wrong, and tell me your ideas for how we can do better.\n\nIf we trust each other, we can learn and grow together. That’s how I want to work with you.\n\nSource: [Matthew Rechs on Twitter](https://mobile.twitter.com/MrEchs/status/1516024678074171402)\n","n":0.05}}},{"i":64,"$":{"0":{"v":"Machine Learning","n":0.707}}},{"i":65,"$":{"0":{"v":"10 Problems to get started","n":0.447},"1":{"v":"\n# 10 Problems to get started\n\nSource: https://mobile.twitter.com/0xbnomial/status/1523256409529667584\n\n## Titanic: Machine Learning from Disaster\n\nThis is the perfect project to get started with classification algorithms.\n\nIt will teach you some data engineering practices, and you can solve it with a simple decision tree.\n\nhttps://kaggle.com/c/titanic\n\n## House Prices\n\nNow that you understand classification problems, it's time to look into regression.\n\nHere you'll predict the price of a house given its characteristics.\n\nhttps://kaggle.com/c/house-prices-advanced-regression-techniques\n\n\n## Wine Quality\n\nAnother classic problem where you can explore regression and classification algorithms is the Wine Quality challenge.\n\nhttps://kaggle.com/rajyellow46/wine-quality\n\nA great candidate to reaffirm what you've learned so far.\n\n## Mall Customer Segmentation Data\n\nNow it's time to look into Unsupervised Learning techniques, and this dataset is a great start:\n\nhttps://kaggle.com/vjchoudhary7/customer-segmentation-tutorial-in-python\n\nYour goal here is to determine which customers are a good target for your marketing department.\n\n## Digit Recognizer\n\nThis is the \"Hello World\" of Computer Vision, so you want to start here before getting any deep.\n\nhttps://kaggle.com/c/digit-recognizer\n\nYou'll learn how to \"read\" images to determine the specific digit they show.\n\n## Dogs vs. Cats\n\nAfter getting the hang of neural networks, you can upgrade to a more complex Computer Vision problem: the Dogs vs. Cats dataset.\n\nhttps://kaggle.com/c/dogs-vs-cats\n\nYour goal is simple: does the input picture show a dog or a cat?\n\n## Bag of Words Meets Bags of Popcorn\n\nAs soon as you want to get into Natural Language Processing, this is a great problem to pick up:\n\nhttps://kaggle.com/c/word2vec-nlp-tutorial\n\nHere you'll be doing sentiment analysis on IMDB movie reviews.\n\n## The Walmart Challenge\n\nTime series analysis is another big area covered by Machine Learning, and the Walmart dataset will get you started.\n\nhttps://kaggle.com/bletchley/course-material-walmart-challenge\n\nHere you will be predicting Walmart's weekly sales based on past data.\n\n\n## The Movies Dataset\n\nDo you want to build a recommendation system (similar to what Netflix does)? You can start here:\n\nhttps://kaggle.com/rounakbanik/the-movies-dataset\n\nRecommendation systems are very useful and have multiple applications.\n\n## Open Images 2019 - Object Detection\n\nI wanted to end the list with another extremely useful application of Computer Vision: Object Detection.\n\nhttps://kaggle.com/c/open-images-2019-object-detection\n\nHere you have 9 million images to play with.\n\n","n":0.057}}},{"i":66,"$":{"0":{"v":"Licenses","n":1}}},{"i":67,"$":{"0":{"v":"Polyform Perimeter License","n":0.577},"1":{"v":"\n# PolyForm Perimeter License 1.0.0\n\nhttps://polyformproject.org/licenses/perimeter/1.0.0/\n\n- Can use, distribute, modify, create derivatives for free as long as it doesn't compete with this software\n- Must include copyright notice\n- No liability\n","n":0.189}}},{"i":68,"$":{"0":{"v":"Image Editing","n":0.707}}},{"i":69,"$":{"0":{"v":"Blend Modes","n":0.707},"1":{"v":"# Blend Modes\n\nSource: [Blending Modes - By Dan Hollick](https://typefully.com/DanHollick/KrBa0JP) ([Clipped in Joplin](joplin://x-callback-url/openNote?id=f87d74dc64e5487e836667b589c89404))\n\n## Darkening and Lightening\n- Darken / Lighten:\n  - Chooses each RGB component's lowest/highest value to create a new color\n- Multiply / Screen:\n  - Normalize RGB components to 0-1\n  - Multiplies values together - which will produce a darker color.\n  - Screen inverts the resulting color\n- Color Burn / Color Dodge:\n  - Normalize RGB components to 0-1\n  - Invert the bg color\n  - Divide by the fg color\n  - Invert the result\n  - Color Dodge switches fg and bg color\n\n## Contrast Blending\n- Overlay\n  - For each RGB component\n    - If bg is light (> 127.5) then apply\n","n":0.097}}},{"i":70,"$":{"0":{"v":"Health","n":1}}},{"i":71,"$":{"0":{"v":"Posture When Working at PC","n":0.447},"1":{"v":"# Posture When Working at PC\n\n- Screen at eye level\n- Shoulders back and down\n- Knees and elbows at 90 degree\n- Chair should have lumbar (lower spine) support and head rest if possible to support the natural shape of the spine\n  - I use Ergohuman PRO https://www.ergohuman.jp/product/ergohuman_pro.php\n- Get up regularly (every 30-60 minutes) and walk around\n","n":0.135}}},{"i":72,"$":{"0":{"v":"Freelancing","n":1}}},{"i":73,"$":{"0":{"v":"Getting Started on Upwork","n":0.5},"1":{"v":"# Getting Started on Upwork\n\n**Source:** [Tweet from Zlatko Bijelic](https://twitter.com/Zbijelic/status/1565797682412605440)\n\n## Mistakes to avoid on Upwork:\n- Copy/Paste the same message for every job application\n- Not reading the post and missing important info\n- Not responding quickly to messages\n- Not asking to get on a video call\n\n## Plan of action:\n- Create a great profile: picture, intro, make it personal.\n- Create a boilerplate template & adjust it for new clients.\n- Don’t be a robot; you won’t stand out.\n- Focus on one type of job (for me it was PM).\n\n## How to send effective applications on Upwork:\n- Read the full post & make sure you can be valuable to the client.\n- Give them a unique solution for their needs.\n- Have a list of previous work you have done.\n- Request a video call.\n\n## How to land jobs quickly:\n- I set up an advanced search on Upwork.\n- Created an RSS Feed.\n- Added the RSS feed to Slack.\n- I get immediate notifications for relevant work.\n- I would be one of the first people to apply.\n\n## Here is what I did:\n- First 5 months: outreach, outreach, outreach. Get the reps in.\n- I sent out 20-30 applications per day.\n- Once I landed a few clients, reworked my profile & add new skills.\n- Raised my hourly rate every 2-3 new clients.\n- Asked for reviews.\n- Low-hanging fruit:\n  - In the beginning, I didn’t care how small the project was. I wanted to deliver results, get reviews, and keep\n    growing.\n- My strategy was:\n  - Once someone works with me, they get the results they expected, they will be happy, and I will be happy.\n\n## How to communicate effectively on Upwork:\n- If you get invited to a job, respond asap.\n  - You need to request a video call the same day if you get a response.\n- Showcase your expertise by providing a solution in your response.\n- Communicate with confidence.\n- You need to follow up with clients every couple of days.\n\n## What did I charge?\n- I started at $30/hr when I landed my first two clients.\n- After I get two 5-star reviews, I would raise it to $35/hr.\n- After a few more reviews, I was quickly at $75/hr.\n- Then I got up to $250/hr.\n- Now I have a minimum $20k project cost.\n\n","n":0.052}}},{"i":74,"$":{"0":{"v":"Drawing","n":1}}},{"i":75,"$":{"0":{"v":"Tutorials","n":1},"1":{"v":"# Tutorials\n\n- Book: [Drawing on the Right Side of the Brain: The Definitive, 4th Edition](https://www.amazon.co.jp/Drawing-Right-Side-Brain-Definitive/dp/1585429201)\n- [How to Learn to Draw Series by Monika Zagrobelna](https://design.tutsplus.com/tutorials/how-to-learn-to-draw-stage-one-manual-skills--cms-23304)\n  - Warm up, drawing lines etc\n\n    ![](https://cms-assets.tutsplus.com/cdn-cgi/image/width=1200/uploads/users/108/posts/23304/image/how-to-draw-final.png){ height: 300px }\n- Draw a Box: https://drawabox.com/lesson/0/1\n","n":0.162}}},{"i":76,"$":{"0":{"v":"How to Draw Anything (by Xuu)","n":0.408},"1":{"v":"\n# How to Draw Anything (by Xuu)\n\n![How to draw anything](https://pbs.twimg.com/media/FUWgSFVX0AYzr37?format=png&name=small)<br/>\n![Twitter Icon](assets/twitter-icon.svg){height: 1rem} [Source](https://twitter.com/XUU5019/status/1532832247656722434?t=GjEZH_w9FgxKN0bGiaK7iA)\n\n## Step one: Draw the shrimp from your mind\n- Draw a shrimp (or any other animal/thing you don't know 100% how to draw)\n- Don't look at reerences, just draw a realistic shrimp from your mind\n- Put this drawing away, don't look at it or change it until the end of the process\n\n## Step two: Google References\n- Collect as many high quality reference photos from real shrimps as you can\n- Pick photos with different angles\n\n## Step three: Trace references\n- Take mental notes while tracing the references, where are the eyes? Where are the legs?\n- Learn the anatomy of the thing\n- Do this so long until you get bored with it\n\n## Step four: Draw directly from the references\n- Look at the reference and draw it without tracing\n- Never edit old drawings, keep a history of your drawings\n\n## Step five: Draw freely with references\n- Draw the shrimp in different poses, for example draw a shrimp from the top using the side view reference\n- Try also drawing other things than different perspectives like a shrimp doing different activities\n\n## Step six: Draw the shrimp freely from your mind\n- Don't look at any reference and draw the shrimp from your mind\n- Finally compare the shrimp with your very first shrimp picture\n- Congratulations you can draw a shrimp\n\n","n":0.067}}},{"i":77,"$":{"0":{"v":"Childrens Books","n":0.707}}},{"i":78,"$":{"0":{"v":"The Creator in You","n":0.5},"1":{"v":"# The Creator in You\n\nhttps://www.amazon.com/Creator-You-Jordan-Raynor/dp/059319313X\n\n> With engaging rhyme and stunning illustrations, this picture book sparks readers’ imaginations with the big idea that God created human beings to make, model, and work like Him.\n>\n> The Creator in You is a book that children, graduates, and even many adults will treasure for a lifetime. This fresh perspective on the creation account from the Bible’s first book, Genesis, helps readers see that “the sixth day” wasn't the end of creation—it was “just the beginning.”\n>\n> “Before His day off, God had one more to-do. On His sixth day creating, God chose to make you.” God made kids to create like he does—by filling the world with sand castles and s’mores today, and businesses and books tomorrow. Through inspiring illustrations and text, readers of all ages will feel connected to God’s story of creation in a deeply personal way, inspiring them to view their current and future work with purpose, enthusiasm, and joy.\n","n":0.08}}},{"i":79,"$":{"0":{"v":"Checklists","n":1}}},{"i":80,"$":{"0":{"v":"Writing Documentation","n":0.707},"1":{"v":"# Writing Documentation\n- When explaining several bigger topics it's good to first list them up in the introductory text and then follow up\n  with sub-sections using the same name as title\n\n  ```md\n  There are two formats supported:\n  - Text format (`.txt` extension)\n  - Binary format (`.prof` extension)\n\n  ## Text format (`.txt` extension)\n\n  ...\n\n  ## Binary format (`.prof` extension)\n  ```\n","n":0.13}}},{"i":81,"$":{"0":{"v":"UI Design","n":0.707},"1":{"v":"# UI Design\n- Can you just let a description stand alone instead of labeling it?\n- Can you use a name/title as heading?\n- Can you use tag/icon displays for yes/true values?\n- Can you display information visually rather than with text?\n- Does your spacing properly group the content?\n- Can you [spice up](https://www.learnui.design/blog/spice-up-designs.html) your design?\n","n":0.139}}},{"i":82,"$":{"0":{"v":"UI Components","n":0.707},"1":{"v":"# UI Components\n- Check [[reference.dev.react.designing-component-libraries]]\n","n":0.447}}},{"i":83,"$":{"0":{"v":"React","n":1},"1":{"v":"# React\n![[reference.checklists.javascript-review#javascript-review,1]]\n\n- Do you really need `useCallback`, `useMemo`? i.e. is it one of the following:\n  - Is it used to memoize props of a memoized component?\n  - Is it used to memoize JSX sub-hierarchies that are expensive to render again?\n  - Is it used to memoize a very expensive operation (for most \"normal\" JavaScript the answer is \"no\"!)\n- Do you really need `useEffect`?\n  - `useEffect` logic should run **because the component was displayed** and for no other reason, i.e.\n    - sending an analytics request\n    - requesting data for the render (but make sure to add cleanup/ignore logic to make only the last request matter)\n  - When can just remove it and write it directly in the component:\n    - Calculating derived values from state/props\n    - Updating state when a prop changes\n      - Do you really need to do this? Maybe you can just calculate a derived value directly instead?\n  - When you can do something else instead:\n    - Resetting state on id/prop change?\n      - Pass a `key` to the component to the parent - to force re-initialization\n    - Trigger common logic from several event handlers\n      - Extract a common helper method instead and call that both times\n    - Do something once when the App starts\n      - Run it outside of a component instead\n    - Sync with an external store\n      - Use `useSyncExternalStore` in React > 18\n\n![[reference.checklists.ui-components#ui-components,1]]\n","n":0.067}}},{"i":84,"$":{"0":{"v":"JavaScript Review","n":0.707},"1":{"v":"# JavaScript Review\n![[reference.checklists.code-quality#code-quality,1]]\n- Use `Map` instead of `Object` if possible!\n","n":0.316}}},{"i":85,"$":{"0":{"v":"Gamejam Game","n":0.707},"1":{"v":"# Gamejam Game\n- [ ] Find an idea\n  - [[reference.tools-for.generating-game-ideas]]\n- [ ] Find your gameplay loop - finish that ASAP\n- [ ] Give it people to play\n- [ ] Make stuff fun (!) and juicy\n  - Screenshake\n  - Sounds / Animations when doing actions\n  - Make movement / basic interactions fun\n\n- Good to do during downtime / when you're tired of coding\n  - [ ] Make a nice, if possible cover image showing juicy polished gameplay\n  - [ ] Extract the Title and work it into a banner\n  - [ ] Write a flavor text for the game page\n  - [ ] Write the controls section\n  - [ ] Write the credits\n","n":0.094}}},{"i":86,"$":{"0":{"v":"Debugging","n":1},"1":{"v":"# Debugging\n\nSource/Inspiration: ![Twitter Icon](assets/twitter-icon.svg){height: 1rem}[Thread by Wisen Tanasa](https://twitter.com/ceilfors/status/1598633150912962560)\n\n- [ ] Draw out **all** possible interconnected elements of the problem (even if you think you know where the problem is)\n- Until you find the cause:\n  - [ ] Choose the next unexamined element\n    - For example the most unlikely, one in the middle\n  - [ ] Timebox to eliminate the element (25 minutes)\n    - Try to reproduce locally, read logs\n    - Stop after 25 and make notes about the rabbit hole\n  - [ ] Take a break\n  - [ ] Review the state of the diagram\n\n","n":0.103}}},{"i":87,"$":{"0":{"v":"Commit Messages","n":0.707},"1":{"v":"# Commit Messages\n\n![[areas.software-development.good-git-commit-messages#the-summary-line:#*]]\n\n![[areas.software-development.good-git-commit-messages#template:#the-summary-line]]\n","n":0.577}}},{"i":88,"$":{"0":{"v":"Code Quality","n":0.707},"1":{"v":"# Code Quality\n- Single Responsibility\n  - Is the method/class responsible for one thing?\n- Data Structures\n  - Can the data structure represent illegal states? [[Why?|ideas-thoughts-beliefs.software-development.illegal-states-should-be-unrepresentable]]\n","n":0.204}}},{"i":89,"$":{"0":{"v":"Brainstorming Methods","n":0.707}}},{"i":90,"$":{"0":{"v":"Word Chain Refinement","n":0.577},"1":{"v":"\n# Word Chain Refinement\n\n[[Japanese|reference.brainstorming-methods.word-chain-refinement.ja]]\n\n（Seen at the [React App Contest (japanese site)](https://sites.google.com/view/react-sports-2022/))\n\n## Step 1 (5 min)\nDo a word chain (next word starts with the last letter of the previous word)\n- Try to use uncommon words\n\n|No|Word|\n|--|------|\n|1 |      |\n\n## Step2 (20 min)\nIdea creation\n- Write two (if possible three ideas) which come to you mind when you combine the theme and the word\n- It doesn't matter if it doesn't exactly fit the word\n- Quantity over quality\n- Feel free to write crazy, over the top ideas\n- If you think for 20-30 seconds and don't come with any idea you can skip to the next word\n- Completely focus on this task\n\n|No|Theme|Word|Idea|Idea 2|Idea 3 (if possible)|\n|--|-----|----|----|------|--------------------|\n|1 |     |    |    |      |                    |\n\n\n## Wait (5 min)\n- Good job! Take a five minute break.\n\n## Step 3 (10 min)\nIdea selection\n- Chose useable ideas from Step 2\n- Tip: You could look at the list in Step 2 and mark possible candidates with a background color before making your final choice\n- If you had any ideas you came up before participating you can write them here, too\n- Feel free to polish up the ideas\n\n|No|Idea|Explanation|\n|--|----|-----------|\n|1 |    |           |\n\n## Step 4\nPresentation\n- 1 Minute per person\n","n":0.072}}},{"i":91,"$":{"0":{"v":"しりとりでアイデアを作る","n":1},"1":{"v":"\n# しりとりでアイデアを作る\n\n[[english|reference.brainstorming-methods.word-chain-refinement]]\n\n（[Reactアプリコンテスト\n「\\#ウンドウノキッカケ」](https://sites.google.com/view/react-sports-2022/) で見た。）\n\n## Step 1 (5 min)\n自由にしりとりをしてください。\n- なるべくベタなワードは書かない（「りんご」、「ごりら」、「らっぱ」など）\n- 「ん」で終わってもＯＫ！「ん」の1文字前から続ける（「みかん」→「かんずめ」）\n\n|No|しりとり|\n|--|------|\n|1 |      |\n\n## Step2 (20min)\nアイデア創造\n- テーマ×ワードで思いつくアイデアを２つ書く（あれば３つ以上OK）\n- テーマやワードからちょっとズレてるかな？など気にしない\n- とにかく数を出す\n- 突飛なアイデア歓迎\n- 20～30秒考えて思いつかなければパスしてOK\n- 頭をフル回転させてください\n\n|No|テーマ|ワード|アイデア|アイデア2|アイデア3（あれば)|\n|--|-----|-----|------|--------|---------------|\n|1 |     |     |      |        |               |\n\n\n## Wait (5 min)\n- おつかれさまです、5分間休憩してください。\n\n## Step 3 (10 min)\nアイデア選定\n- Step2で作ったアイデアの中から使えそうなものを出す\n- Step2を見直して、良さそうなのは背景色変えるとかするとわかりやすいかも\n- 事前に考えてきたアイデアもここに書く\n- Step2で書いたものをさらにブラッシュアップも可\n\n|No|アイデア|説明|\n|--|------|----|\n|1 |     |     |\n\n## Step 4\n発表\n- 1人1分で発表いただきます。\n","n":0.152}}},{"i":92,"$":{"0":{"v":"Bible","n":1}}},{"i":93,"$":{"0":{"v":"People","n":1}}},{"i":94,"$":{"0":{"v":"Amalekites","n":1},"1":{"v":"\n# Amalekites\n\n- Descendants of Esau's grandson Amalek - thus strongly related to the Israelites\n","n":0.267}}},{"i":95,"$":{"0":{"v":"1 Corinthians","n":0.707}}},{"i":96,"$":{"0":{"v":"1 Corinthians 11","n":0.577},"1":{"v":"# 1  Corinthians 11\n\n[ESV](https://www.biblegateway.com/passage/?search=1+Corinthians+11&version=ESV)\n\n## Background\n- The admonition to cover their head was because Corinthian women wore their hair open when they went to to dinner\n  parties (convivia) where several immoral activities took place: \"Escorts\", idol meat, adultery, drunkenness (All\n  topics mention in 1 Corinthian 6-11). Covering their hair was not a matter sexual modesty - just of modesty in\n  general.\n\n## My Summary\n\n## Central verses for me\n","n":0.123}}},{"i":97,"$":{"0":{"v":"1 Corinthians 7","n":0.577},"1":{"v":"# 1 Corinthians 7\n\n[ESV](https://www.biblegateway.com/passage/?search=1+Corinthians+7&version=ESV)\n\n## Background\n- Paul was undermining Roman mores about human sexuality. Roman women were supposed to marry as early as possible and\n  focus on childbearing and men were practically expected to commit adultery. Paul's teaching is granting liberty to\n  women and placing moral restrictions on men at that time. (Source [[reference.literature-notes.misreading-scripture-with-western-eyes]], Chapter 1)\n\n## My Summary\n\n## Central verses for me\n\n\n","n":0.128}}},{"i":98,"$":{"0":{"v":"Romans","n":1}}},{"i":99,"$":{"0":{"v":"Romans 1","n":0.707},"1":{"v":"# Romans 1\n\n[ESV](https://www.biblegateway.com/passage/?search=Romans+1&version=ESV)\n\n## My Summary\n- Paul introduces himself as an apostle\n  - His message about Jesus, the gospel of God, was predicted by the prophets and approved by the resurrection\n  - He speaks about his burden he feels to bring the gospel to the Gentiles\n- He praises the Romans for their faith and expresses his sadness that he couldn't visit them\n- He starts explaining the gospel:\n  - Right in the beginning he clarifies: The Gospel can save anyone by faith!\n  - Everyone knows about God, it can be clearly perceived from nature\n  - But humans don't worship God but created things instead\n  - So God gave them up to all kinds of sins\n\n\n## Central verses for me\n> For I am not ashamed of the gospel, for it is the power of God for salvation to everyone who believes, to the Jew\n  first and also to the Greek. For in it the righteousness of God is revealed from faith for faith, as it is written,\n  “The righteous shall live by faith.”\n\n[Romans 1:16-17](https://www.biblegateway.com/passage/?search=Romans+1%3A16-17&version=ESV)\n\n> For what can be known about God is plain to them, because God has shown it to them. For his invisible attributes,\n  namely, his eternal power and divine nature, have been clearly perceived, ever since the creation of the world, in\n  the things that have been made. So they are without excuse\n\n[Romans 1:19-20](https://www.biblegateway.com/passage/?search=Romans+1%3A19-20&version=ESV)\n","n":0.067}}},{"i":100,"$":{"0":{"v":"Psalms","n":1},"1":{"v":"# Psalms\n","n":0.707}}},{"i":101,"$":{"0":{"v":"Psalm 12","n":0.707},"1":{"v":"# Psalm 12\n\n[NIV](https://www.biblegateway.com/passage/?search=Psalm+12&version=NIV)\n\n## My Summary\n- Humans are dishonest and often deceive each other while keeping up appearances.\n  - God is the protector of the mistreated\n- God's words are true and valuable like gold\n\n\n## Central verses for me\n> You, Lord, will keep the needy safe<br/>\n> &nbsp; &nbsp; and will protect us forever from the wicked,\n\n[Psalm 9:17-18](https://www.biblegateway.com/passage/?search=Psalm+12%3A7&version=NIV)\n\n","n":0.135}}},{"i":102,"$":{"0":{"v":"Psalm 11","n":0.707},"1":{"v":"# Psalm 11\n\n[ESV](https://www.biblegateway.com/passage/?search=Psalm+11&version=ESV)\n\n## My Summary\n- People who do evil think they can do anything and no one ever stops them\n- But God sees everything and in the end justice will prevail\n\n## Central verses for me\n> For the Lord is righteous;<br/>\n  he loves righteous deeds;<br/>\n  &nbsp; &nbsp; the upright shall behold his face.\n[Psalm 11:7](https://www.biblegateway.com/passage/?search=Psalm+11%3A7&version=ESV)\n","n":0.137}}},{"i":103,"$":{"0":{"v":"Psalm 10","n":0.707},"1":{"v":"# Psalm 10\n\n[ESV](https://www.biblegateway.com/passage/?search=Psalm+10&version=ESV)\n\n## My Summary\nThere are many people who are successful and doing well in their life even though they do evil and don't care about God\nor any consequences of what they do. We feel often frustrated about that and wonder why God is letting that happen?\nBut the truth is that God sees everything and in the end the evil people who don't repent will get their fair\npunishment. God will restore justice.\n\n## Central verses for me\n> For the wicked boasts of the desires of his soul,<br/>\n  &nbsp; &nbsp; and the one greedy for gain curses and renounces the Lord.<br>\n  In the pride of his face the wicked does not seek him;<br/>\n  &nbsp; &nbsp; all his thoughts are, “There is no God.”<br/>\n  His ways prosper at all times;<br/>\n  &nbsp; &nbsp; your judgments are on high, out of his sight;<br/>\n  &nbsp; &nbsp; as for all his foes, he puffs at them.\n\n[Psalm 10:3-5](https://www.biblegateway.com/passage/?search=Psalm+10%3A3-5&version=ESV)\n\n> But you do see, for you note mischief and vexation,<br/>\n  &nbsp; &nbsp; that you may take it into your hands;<br/>\n  to you the helpless commits himself;<br/>\n  &nbsp; &nbsp; you have been the helper of the fatherless.\n\n[Psalm 10:14](https://www.biblegateway.com/passage/?search=Psalm+10%3A14&version=ESV)\n","n":0.073}}},{"i":104,"$":{"0":{"v":"Psalm 9","n":0.707},"1":{"v":"# Psalm 9\n\n[ESV](https://www.biblegateway.com/passage/?search=Psalm+9&version=ESV)\n\n## My Summary\n\nPraise to God because he brings justice.\n\n- Evil people, those who oppose God and oppress others, will be judged by God\n- You can always find shelter and protection with God\n\n## Central verses for me\n> The Lord is a stronghold for the oppressed,<br>\n  &nbsp; &nbsp; a stronghold in times of trouble.<br>\n  And those who know your name put their trust in you,<br>\n  &nbsp; &nbsp; for you, O Lord, have not forsaken those who seek you.\n\n[Psalm 9:9-10](https://www.biblegateway.com/passage/?search=Psalm+9%3A9-10&version=ESV)\n\n> The wicked shall return to Sheol,<br>\n  &nbsp; &nbsp; all the nations that forget God.<br>\n  For the needy shall not always be forgotten,<br>\n  &nbsp; &nbsp; and the hope of the poor shall not perish forever.\n\n[Psalm 9:17-18](https://www.biblegateway.com/passage/?search=Psalm+9%3A17-18&version=ESV)\n","n":0.094}}},{"i":105,"$":{"0":{"v":"Psalm 8","n":0.707},"1":{"v":"# Psalm 8\n\n[ESV](https://www.biblegateway.com/passage/?search=Psalm+8&version=ESV)\n\n## My Summary\n\nA song of praise: God's name is majestic.\n\nWhy?\n1. He is the creator of the universe, to be praised by all people. He made the universe and everything in it and as\neveryone can easily see it's huge und incredibly complex.\n2. He made the human, though incredibly small compared to the whole universe, the highest among his created beings, he\ngave us authority over all the creation and also directly interacts with us. That is a unique privilege.\n","n":0.113}}},{"i":106,"$":{"0":{"v":"Proverbs","n":1}}},{"i":107,"$":{"0":{"v":"Proverbs 3","n":0.707},"1":{"v":"# Proverbs 3\n\n[ESV](https://www.biblegateway.com/passage/?search=Proverbs+3&version=ESV)\n\n## My Summary\n\n- Be faithful and loving to others, help them immediately when you can\n- Lean on God as most fundamental support not on your own wisdom or knowledge\n- Honor God with the firstfruits of your work\n- Pursue (God's) wisdom and you will without fear\n- There's no need to envy people who do evil, God will give them what's due in time\n  - And obviously don't do or plan evil yourself\n\n## Central verses for me\n> Trust in the Lord with all your heart,<br>\n  &nbsp; &nbsp; and do not lean on your own understanding.<br>\n  In all your ways acknowledge him,<br>\n  &nbsp; &nbsp; and he will make straight your paths.\n\n[Proverbs 3:5-6](https://www.biblegateway.com/passage/?search=Proverbs+3%3A5-6&version=ESV)\n","n":0.095}}},{"i":108,"$":{"0":{"v":"Matthew","n":1}}},{"i":109,"$":{"0":{"v":"Matthew 14","n":0.707},"1":{"v":"# Matthew 14\n\n[ESV](https://www.biblegateway.com/passage/?search=Matthew+14&version=ESV)\n\n## My Summary\n- Herod the tetrarch when he hears of Jesus' deeds thinks that he is John the Baptist who has risen from the dead\n- Then the story of how he had John the Baptist killed is told\n  - John had critized him for taking his brother's wife Herodias for himself\n  - On Herod's birthday the daughter of Herodias danced beautifully and Herod promised before everyone present to give\n    her anything she wishes\n  - After discussing with her mother she demands the head of John the Baptist and even though Herod really doesn't want\n    to kill him he gives in to the pressure since he had promised her\n- Jesus crosses the sea to be alone and rest but the crowd follows him\n  - He has compassion with them and feeds 5000 men & their women and children with just 5 breads and 2 fish\n- (Todo second half)\n\n## Central verses for me\n> When he went ashore he saw a great crowd, and he had compassion on them and healed their sick.\n\n[Matthew 14:14](https://www.biblegateway.com/passage/?search=Matthew+14%3A14&version=ESV)\n","n":0.076}}},{"i":110,"$":{"0":{"v":"Matthew 13","n":0.707},"1":{"v":"# Matthew 13\n\n[ESV](https://www.biblegateway.com/passage/?search=Matthew+13&version=ESV)\n\n## My Summary\nJesus tells a lot of parables about the kingdom of God\n\n- The parable of the sower and the 4 types of soil (with explanation later)\n  - The seed is the word of God and the soils are ways how people will take and apply the word in their life\n  - The soils are:\n    - The path where birds eat the seed\n      - The word doesn't even reach the heart of the person. Satan took it away.\n    - Solid rock where the seeed could not have deep roots and the plants die immediately when the sun rises\n      - Someone who receives it happily but falls away when trials or persecution come since they lack faith roots\n    - Thorns that choke the plants\n      - People distracted by worries/cares of the world and riches so they cannot focus on the word aren't effective\n        for the kingdom\n    - Good soil\n      - People who take the word, apply it and bring fruit\n- The parable about another farmer, who planted wheat but an enemy mixed weeds into the same field. His servants ask\n  him whether they should pull out the weeds but the tells them to wait until harvest time otherwise the wheat will\n  also be damaged (with explanation later)\n  - It seems that those particular weeds and wheat look very similar when young (Source? I heard that often said\n    in sermons)\n  - This is a parable about believers and unbelievers as Jesus explains later. Jesus brings the good news to the people\n    but Satan has put his children among them. God might not remove/judge them right away - but in the end that sorting\n    will be done by his angels at judgement day.\n- The parable of the mustard seed\n  - It's a tiny seed but turns into a huge tree\n  - The kingdom also starts small and invisibly but has a huge influence\n- The parable of the leaven\n  - Leaven is small compared to the whole dough but it takes just a little time for it all to become leavened\n  - Similar meaning as the one with the mustard seed\n- Parables about treasures\n  - The parable of the hidden treasure\n    - The man who stumbled across the treasure sold everything to buy the land as fast as he could\n  - The parable of the pearl\n    - The merchant actively looked for the pearl, he also sold everything he had to buy it\n  - Both are often interpreted as teaching that believers should be willing to give up everything to gain eternal life,\n    enter the kingdom\n    - But considering the other parables about \"found\" things (coins, sheep, son) have God as the person seeking the\n      lost, it would make sense that God is the protagonist in this parable too\n    - God giving up everything, i.e. his only Son so humans could be reconciled with him... We are so precious to God.\n      That seems to fit the gospel message more than a kind of holy pressure to sacrifice everything to get inside the\n      kingdom\n- The parable of the fisher's net\n  - Good fish and bad fish are caught, they are sorted in the end\n\nSome other content\n- Matthew mentioned that this use of parables is a fulfillment of\n  [Psalm 78:2](https://www.biblegateway.com/passage/?search=Psalm+78%3A2&version=ESV)\n  ([[Psalm 78|reference.bible.psalms.078]])\n- The disciples ask Jesus why he speaks in parables and he answers that it is to hide the truth from those \"to whom it\n  has not been given to know the secrets of the kingdom\"\n    - He quotes [Isaiah 6:9-10](https://www.biblegateway.com/passage/?search=Isaiah+6%3A9-10&version=ESV)\n      ([[Isaiah 6|reference.bible.isaiah.06]])\n- Jesus says that scribes who enter the kingdom have lots of blessings to give\n  - probably speaking about the deep  knowledge of the Old Testament and the old covenant showing its true value once\n    you see it in light of Jesus\n  - And being able to help other believers with your expertise\n- Finally Jesus is teaching in his hometown Nazareth but is rejected and not taken seriously there\n  - He didn't do a lot of miracles there because of their unbelief\n\n## Open questions / Difficult passages\n- > For to the one who has, more will be given, and he will have an abundance, but from the one who has not, even what\n    he has will be taken away.\n\n  [Matthew 13:12](https://www.biblegateway.com/passage/?search=Matthew+13%3A12&version=ESV)\n\n  and the following verses 13-15 about seeing but not understanding.\n  - God is love (1 John 4:8) and wants all to come to a knowledge of the truth (1 Timothy 2:4), so what is this kind of\n    thing supposed to mean in that context?\n    - Is this a description of \"how the world works\"? How sinful stubbornness affects human hearts and understanding in\n      general?\n    - This could be like the hardening of the Pharaoh's heart? (Which is a difficult topic, too)\n- Does the parable of the weed contain practical wisdom/instruction for churches/communities?\n  - It it mainly an encouragement/description of how God will eventually handle everything and therefore we do not\n    need to judge/exclude/be disappointed too much about unbelievers?\n","n":0.035}}},{"i":111,"$":{"0":{"v":"Matthew 12","n":0.707},"1":{"v":"# Matthew 12\n\n[ESV](https://www.biblegateway.com/passage/?search=Matthew+12&version=ESV)\n\n## My Summary\n\n- The Pharisees critize Jesus and his followers for supposedly working on th Sabbath\n  - Jesus' disciples gather heads of grain since they were hungry\n    - Jesus replies that even David and his followers were allowed to eat bread that was reserved for the priest since\n    it was an emergency\n    - Finally he says, he is the Lord over the Sabbath and thus has the freedom to say what's ok and what's not anyways\n  - Jesus himself heals a man's withered hand in a synagogue\n    - Jesus replies that even the Pharisees would save their sheep if it was in trouble on the Sabbath and this points\n      out their hypocrisy\n- These controversies and Jesus replies moves the Pharisees to plan to kill Jesus\n- Jesus heals many people but tells them to stay quiet - this fulfills a prophecy in [[reference.bible.isaiah.42]]\n- The Pharisees say that Jesus' power to heal and drive out demons comes from Satan himself\n  - Jesus destroys their logic immediately\n    - If Satan was starting to fight himself, his kingdom would be destroyed already - and obviously that's not the case\n      (there are still possessed people and evil is happening in the world)\n    - If he was using Satan's power, which power were the Pharisee's using (and how could they prove it wasn't Satan,\n      too?)\n  - He warns them that resisting the Holy Spirit so much that they not only denying his power but even attribute to\n    Satan will send them down on a path from which they will not be able to return to God\n  - Jesus also tells about how telling out words/behaviour are about our heart\n- Scribes and Pharisees demand miracles as proof\n  - Jesus says that they won't get any more miracles than they are seeing already anyways - except for his upcoming\n    resurrection from the dead (which he hints at with a comparison with Jonah)\n  - If they won't listen now - they wouldn't listen even with more miracles\n  - Jesus calls himself one bigger than Jonah and Solomon - but still they won't listen\n  - Then talks about a driven out spirit (?)\n- Jesus calls all fellow believers his brothers and sisters\n\n## Open questions / Difficult passages\n- Blaspheming the Holy Spirit (v 31-32)\n- Driven out spirit returning to the human from where it was driven out and brings seven other spirits with it (v 43-45)\n  - Is this talking about the empty religiousness of the pharisees that leaves them worse off in the end than if they\n    had been \"just\" not interested in God at all?\n","n":0.048}}},{"i":112,"$":{"0":{"v":"Matthew 11","n":0.707},"1":{"v":"# Matthew 11\n\n[ESV](https://www.biblegateway.com/passage/?search=Matthew+11&version=ESV)\n\n## My Summary\n\n- John the Baptist questions whether Jesus is really the Messiah\n  - Jesus points to his own miraculous deeds as a proof\n- Jesus teaches about John the Baptist\n  - He is \"Elijah\" who is supposed to prepare the way for the Messiah as promised in Malachi 3:23\n- Jesus criticizes cynical public opinions that always finds a fault\n  - John was \"too holy\" so he must have been possessed by a demon\n  - Jesus was \"too lax\" so he was called a glutton and irreliable for hanging out with the wrong crowd\n- Jesus criticizes the cities that have seen so many of his wonders\n  - If Tyre, Sidon, Sodom - the historically most sinful cities a Jew could imagine - had seen those miracles they\n    would have repented\n- God is hiding the truth from those who are wise in their own and in the world's eyes and reveals it to humble persons\n  (those like children)\n- Only God knows the Son, and only the Son and those the Son chooses will know God\n- Jesus invites us to receive real, deep peace and rest for our burdened souls\n  - He invites us to learn from him, who is gentle and humble\n  - He invites us to take his yoke, which is light, because he is carrying it with us\n","n":0.067}}},{"i":113,"$":{"0":{"v":"Genesis","n":1},"1":{"v":"# Genesis\n\n![[reference.bible.genesis.*#my-summary:#*]]\n","n":0.707}}},{"i":114,"$":{"0":{"v":"Genesis 46","n":0.707},"1":{"v":"# Genesis 46\n\n[ESV](https://www.biblegateway.com/passage/?search=Genesis+46&version=ESV)\n\n## My Summary\n- Jacob has a vision of God in which he is told that he doesn't need to be afraid to go to Egypt and that his\n  descendants would eventually come back to this land\n- All members of Jacob's family that end up in Egypt are listed\n- Jacob and his son Joseph finally reunite\n\n## Central verses for me\n> Then he said, “I am God, the God of your father. Do not be afraid to go down to Egypt, for there I will make you into\n  a great nation. I myself will go down with you to Egypt, and I will also bring you up again, and Joseph's hand shall\n  close your eyes.”\n\n[Genesis 45:8](https://www.biblegateway.com/passage/?search=Genesis+46%3A3-4&version=ESV)\n","n":0.093}}},{"i":115,"$":{"0":{"v":"Genesis 45","n":0.707},"1":{"v":"# Genesis 45\n\n[ESV](https://www.biblegateway.com/passage/?search=Genesis+45&version=ESV)\n\n## My Summary\n- Joseph cannot hold it longer and reveals himself to his brothers\n- They are reluctant but he can convince them that he means them no harm and that all of this was God's plan to save\n  many people from the draught`\n- The Pharao wants them to move to Egypt with their father and their whole family\n- Joseph sends them home with gifts and they convince Jacob to come with them to Egypt\n\n## Central verses for me\n> “I am your brother, Joseph, whom you sold into Egypt. And now do not be distressed or angry with yourselves because\n  you sold me here, for God sent me before you to preserve life.\n\n[Genesis 45:4b-5](https://www.biblegateway.com/passage/?search=Genesis+45%3A4-5&version=ESV)\n\n> So it was not you who sent me here, but God. He has made me a father to Pharaoh, and lord of all his house and ruler\n  over all the land of Egypt.\n\n[Genesis 45:8](https://www.biblegateway.com/passage/?search=Genesis+45%3A8&version=ESV)\n","n":0.082}}},{"i":116,"$":{"0":{"v":"Genesis 44","n":0.707},"1":{"v":"# Genesis 44\n\n[ESV](https://www.biblegateway.com/passage/?search=Genesis+44&version=ESV)\n\n## My Summary\n- Joseph wants to test his brothers' character for one last time and arranges for them to be arrested and brought back\n  by smuggling his silver cup into their belongings and arresting them for theft. He makes sure it's Benjamin who it is\n  found with\n- Joseph wants to keep Benjamin as a captive but Judah pleads with him to let him stay here instead because it would be\n  too much for their father to lose Benjamin\n\n## Central verses for me\n> Now therefore, please let your servant remain instead of the boy as a servant to my lord, and let the boy go back\n  with his brothers. For how can I go back to my father if the boy is not with me? I fear to see the evil that would\n  find my father.”\n\n[Genesis 44:33-34](https://www.biblegateway.com/passage/?search=Genesis+44%3A33-34&version=ESV)\n","n":0.085}}},{"i":117,"$":{"0":{"v":"Genesis 43","n":0.707},"1":{"v":"# Genesis 43\n\n[ESV](https://www.biblegateway.com/passage/?search=Genesis+43&version=ESV)\n\n## My Summary\n- Joseph's brother convince their father to let them go again and to take Benjamin with them since the Egyptian\n  minister would not welcome them if they came back without him\n- Jacob gives them honey, nuts, almonds and other valuable things and the money they had found after their last trip\n  in addition to the normal payment\n- Joseph after he had to cry in secret when he saw Benjamin again, welcomed them with a big feast, arranged seats for\n  them in their age order and gave Benjamin five times as much food as everyone else\n\n## Central verses for me\n> And he lifted up his eyes and saw his brother Benjamin, his mother's son, and said, “Is this your youngest brother,\n  of whom you spoke to me? God be gracious to you, my son!” Then Joseph hurried out, for his compassion grew warm\n  for his brother, and he sought a place to weep. And he entered his chamber and wept there. Then he washed his face\n  and came out. And controlling himself he said, “Serve the food.”\n\n[Genesis 43:29-31](https://www.biblegateway.com/passage/?search=Genesis+43%3A29-31&version=ESV)\n","n":0.074}}},{"i":118,"$":{"0":{"v":"Genesis 42","n":0.707},"1":{"v":"# Genesis 42\n\n[ESV](https://www.biblegateway.com/passage/?search=Genesis+42&version=ESV)\n\n## My Summary\n- Jacob and his sons were also suffering from the famine and when Jacob heard that there was grain to buy in Egypt\n  he sent his sons (except his youngest one, Benjamin) there to buy some\n- Joseph's brothers didn't recognize him but he recognized them\n- He treated them harshly to test them and see what kind of men they had become in the past years. He demanded that they\n  bring their youngest brother to Egypt\n- Then he kept Simeon as a prisoner and send the others home with their grain and also secretly returned their money to\n  them\n- At home though Jacob does not allow them to return and take Benjamin with them\n\n## Central verses for me\n> Now Joseph was governor over the land. He was the one who sold to all the people of the land. And Joseph's brothers\ncame and bowed themselves before him with their faces to the ground. [...] And Joseph remembered the dreams that he had\ndreamed of them.”\n\n[Genesis 42:6,9](https://www.biblegateway.com/passage/?search=Genesis+42%3A6%2C9&version=ESV)\n","n":0.077}}},{"i":119,"$":{"0":{"v":"Genesis 41","n":0.707},"1":{"v":"# Genesis 41\n\n[ESV](https://www.biblegateway.com/passage/?search=Genesis+41&version=ESV)\n\n## My Summary\n- Two years after the cupbearer was released the Pharao began had two dreams: 7 fat cows followed by 7 thin cows who\n  devoured them and the same dream with 7 fat ears of grain eaten by 7 thin ears.\n- The cupbearer remembered Joseph and told the Pharao about him and Joseph was taken out of prison\n- He told him the message that God wanted the Pharao to know through this dreams, namely that 7 years of abundance would\n  come followed by 7 years of famine and that Egypt needs to prepare for this\n- Pharao decided to let Joseph handle this since he seems to have great wisdom and he made him second in authority over\n  Egypt\n- He was also given the daughter of an important priest as wife. She gave birth to Manasse and Ephraim who should become\n  heirs of Israel later\n    - So part of Israel is actually half-Egyptian in heritage\n- The events predicted by the dream came true and Joseph stored the surplus of grain in the 7 abundant years\n- Then the famine years came and Joseph began to sell the stored grain to the Egyptians and also to foreigners\n\n## Central versesCentral/Favorite\n> And Pharaoh said to Joseph, “I have had a dream, and there is no one who can interpret it. I have heard it said of you\n  that when you hear a dream you can interpret it.” Joseph answered Pharaoh, “It is not in me; God will give Pharaoh a\n  favorable answer.”\n\n[Genesis 41:15-16](https://www.biblegateway.com/passage/?search=Genesis+41%3A15-16&version=ESV)\n\n> Joseph called the name of the firstborn Manasseh. “For,” he said, “God has made me forget all my hardship and all my\n  father's house.” The name of the second he called Ephraim, “For God has made me fruitful in the land of my\n  affliction.”\n\n[Genesis 41:51-52](https://www.biblegateway.com/passage/?search=Genesis+41%3A51-52&version=ESV)\n","n":0.058}}},{"i":120,"$":{"0":{"v":"Genesis 40","n":0.707},"1":{"v":"# Genesis 39\n\n[ESV](https://www.biblegateway.com/passage/?search=genesis+40&version=ESV)\n\n## My Summary\n- The chief cupbearer and the chief baker of the Pharao are put into prison and Joseph cares for them\n- One night each of them had a dream they didn't understand - and next morning when they seemed depressed Joseph asked\n  them what was wrong\n- Joseph told them that God would know the interpretation of their dreams and asked them to tell him the dreams\n- The cupbearer had a dream about three vine branches bearing fruit and him pouring their wine into the Pharao's cup\n  - Joseph interpreted: In three days he would return to the court of the Pharao in three days\n  - Joseph also asks him to not forget him and tell the Pharao about his unfair treatment\n- The baker had a dream about three baskets of cake out of which birds ate\n  - Joseph interpreted: In three days he would be hanged\n- It all came true but the cupbearer forgot about Joseph\n","n":0.079}}},{"i":121,"$":{"0":{"v":"Genesis 39","n":0.707},"1":{"v":"# Genesis 39\n\n[ESV](https://www.biblegateway.com/passage/?search=genesis+39&version=ESV)\n\n## My Summary\n- Joseph arrives in the house of Potiphar, an officer of the Pharao, and Potiphar quickly realized that God blessed\n  everything that Joseph did so he entrusted almost everything to him\n- Potiphar's wife tries to seduce Joseph, who was a good-looking man, but he rejects her\n- Her final assault is not successful either but she takes his clothes from him and uses them to accuse him falsely of\n  a rape/seduction attempt\n- Potiphar believes his wife and throws Joseph into prison\n- In prison Joseph again gains the trust of his overseer because of his good work and God blessing him and he was\n  entrusted all kinds of work in the prison\n","n":0.094}}},{"i":122,"$":{"0":{"v":"Genesis 38","n":0.707},"1":{"v":"# Genesis 38\n\n[ESV](https://www.biblegateway.com/passage/?search=genesis+38&version=ESV)\n\n## My Summary\n\nJudah sleeps with his daughter-in-law Tamar\n- Judah moved away from his brothers and married a Canaanite woman\n- He had three sons Er, Onan and Shelah, Tamar was Er's wife\n- Er was an immoral person so the Lord let him die\n- Then Onan was asked to give a son to Tamar so Er's family would continue but he refused to do so, so the Lord let him\n  die, too\n- Judah outwardly promised Tamar to give Shelah to her once he was old enough but never intended to do so since he was\n  afraid that he might also die\n- Eventually Shelah was old enough and was not given to Tamar\n- Judah's wife had died by now and one day when he went out to shear his sheep Tamar dressed up with a veil as a\n  prostitute and waited for him at the street\n- Judah slept with her after she took Judah's signet and cord as a pledge for her eventual payment\n  - Judah went back to give her her payment but couldn't find her and forgot about her\n- When it was known that Tamar was pregnant, Judah ordered her to be burned for prostitution - but she then presented\n  his possessions she had taken as pledge in defense and Judah admitted his fault\n  - He let her live in his house but never touched her again\n- Tamar gave birth to twins, Perez and Zerah\n\nBecause of this incident she becomes one of the ancestors of Jesus.\n","n":0.064}}},{"i":123,"$":{"0":{"v":"Genesis 36","n":0.707},"1":{"v":"# Genesis 37\n\n[ESV](https://www.biblegateway.com/passage/?search=genesis+37&version=ESV)\n\n## My Summary\n\nJoseph's story how he was sold to Egypt\n- He was his father's favorite son and had a beautiful robe from him\n- He told on his brothers when they did something bad\n- He had dreams that showed him as the master over them and even his parents\n  - But Jacob kept those in mind\n- Therefore he was hated by his brothers and they planned to kill him\n- Ruben could convince them not to kill him but just to capture him in a well\n  - He wanted to secretly go back and rescue him later\n- But when merchants on their way to Egypt came along Judah convinced his brothers to sell him to Egypt\n- They brought back a faked bloody robe to Jacob accompanied by a made-up story of how he was eaten by a wild animal\n- Joseph was sold to Potiphar an officer of the Pharao\n","n":0.082}}},{"i":124,"$":{"0":{"v":"Genesis 36","n":0.707},"1":{"v":"# Genesis 36\n\n[ESV](https://www.biblegateway.com/passage/?search=genesis+36&version=ESV)\n\n## My Summary\n- The descendants of Esau are described\n  - Notable is his grandson Amalek, whose descendants are the [[reference.bible.people.amalekites]]\n- Esau moved to Seir, where his descendants the Edomites would live\n","n":0.174}}},{"i":125,"$":{"0":{"v":"Genesis 35","n":0.707},"1":{"v":"# Genesis 35\n\n[ESV](https://www.biblegateway.com/passage/?search=genesis+35&version=ESV)\n\n## My Summary\n- Jacob builds an altar at Bethel after God tells him to do it\n- God shows himself to Jacob one again time and tells him his new name, Israel, again as he did after he wrestled with\n  Jacob in [[reference.bible.genesis.32]]\n- Rahels gives birth to Benjamin but dies\n- Ruben sleeps with one of his father's wifes, Bilhah (the mother of two of his half-brothers: Dan and Naphtali)\n  - Jacob learns about this\n- Isaac dies and is buried by his two sons, Jacob and Esau\n","n":0.107}}},{"i":126,"$":{"0":{"v":"Genesis 34","n":0.707},"1":{"v":"# Genesis 34\n\n[ESV](https://www.biblegateway.com/passage/?search=genesis+34&version=ESV)\n\n## My Summary\n- Schechem (the city where Jacob settled in [[reference.bible.genesis.33]] was probably named after him) was attracted\n  to Jacob's daughter Dinah and rapes her and then asks his father to organize that she should get married to him\n- His father brings that proposal to Jacob and his sons\n- The sons deceived him by saying that they would accept the offer if all men in the city would get circumcised and they\n  accepted, thinking that they would get hold of Jacob's wealth by connecting their families in marriage\n- Few days later when the men's circumcision wounds were hurting Simeon and Levi, Dinah's brothers, came to the city,\n  killed every man inside and stole all their women and possessions\n- Jacob was not very happy about this since they might now be hated by the people of Canaan, but the brothers cared more\n  about their sister's honor\n","n":0.082}}},{"i":127,"$":{"0":{"v":"Genesis 33","n":0.707},"1":{"v":"# Genesis 33\n\n[ESV](https://www.biblegateway.com/passage/?search=genesis+33&version=ESV)\n\n## My Summary\n\nJacob reconciles with Esau and arrives in Canaan\n- Esau reaches him and Jacob was ready for the worst of worst but contrary to his expectation Esau welcomed him with\n  tears of joy\n- Esau doesn't want any of Jacobs reconciliation presents he had sent earlier, but Jacob insists on him taking them\n- Esau offers to lead him into the country but Jacob rejects the offer since he has many children and young animals that\n  need to travel slowly and carefully\n- In the end he settles down in a city called Shechem and bought a piece there\n","n":0.101}}},{"i":128,"$":{"0":{"v":"Genesis 11","n":0.707},"1":{"v":"# Genesis 11\n\n[ESV](https://www.biblegateway.com/passage/?search=genesis+11&version=ESV)\n\n## My Summary\n- People of the world gathered and decided to build a city with a tower that reaches to the heavens\n- God came and looked at what they've built and decided that it is better to spread them all over the earth\n- He confused their language and the project failed - The city was called Babel from thereon\n- The descendants from Shem up to Abram are listed\n- Abram's father Terach took him, his wife and Lot, his nephew, and left from Ur close to Babel where they lived to go\n  to Canaan but they settled halfway in Haran\n\n## Central verses for me\n> And the Lord said, “Behold, they are one people, and they have all one language, and this is only the beginning of\nwhat they will do. And nothing that they propose to do will now be impossible for them.\n\n[Genesis 11:6](https://www.biblegateway.com/passage/?search=Genesis+11%3A6&version=ESV)\n","n":0.083}}},{"i":129,"$":{"0":{"v":"About the Tower of Babel","n":0.447},"1":{"v":"# About the Tower of Babel\n\nSource: [Twitter thread by Ari Lamm](https://twitter.com/AriLamm/status/1560611614226882560)\n\n- Common interpretations of the story include:\n  - Temptation of hubris (pride)\n  - Perils of technical innovation\n\n## What did the Babel builders do wrong?\n- Were they just a brotherly society of dedicated builders?\n- Were they becoming too proud for their own good? With the help of technology?\n- Did God need to destroy them because they were a threat?\n- The phrase used for \"making bricks\" (nilbena levenim) is only used **one** other time in the Bible\n  - In Exodus when the pharao forces the Israelites to increase their brick output without giving them straw\n    [[reference.bible.exodus.5]]\n  - Making bricks basically required slave labor in the ancient world\n- The word for \"come\" (as in \"Come, let us...\") (havah) - is like a forceful \"Come on!\", i.e. forcing something lesser\n  in power to fulfill your wish as a ruler\n  - Other uses are:\n    - The pharao wanting to enslave the Israelites [[reference.bible.exodus.1]]\n    - Judah strongly demanding sex from a prostitute in [[reference.bible.genesis.38]]\n- The \"city fortified up to the skies\" is similar in wording like the cities in Canaan that were built by wicked\n  societies [[reference.bible.deuteronomy.9]]\n  - \"impossible\" (as in \"nothing [...] will now be impossible\") is actually also an allusion to the fortified cities\n    (the Hebrew word yibbatzer)\n- \"propose\" (as in \"nothing that they propose\") has a connotation of plotting to pervert justice\n- So what is described in Genesis 11 is the birth of the first exploitative empire (The Akkadian Empire) in Mesopotamia\n- The single language was an enforced empire language - a regression from the diversity after the spreading out of the\n  descendants of Noah in [[reference.bible.genesis.10]]\n- Wanting to stay in one place (to solidify ones power) was a direct contradiction to God's command before after the\n  flood \"Be fruitful and multiply\" in [[reference.bible.genesis.9]]\n\n## Why did God punish them as He did?\n- To break up the exploitative society\n- In the end it was a blessing in disguise - to regain diversity\n\n## What's the message?\n- We should abhor injustice\n- We should embrace the goods of diversity\n- God is there as a good parent to guide our steps even if we fail at living up to those standards\n","n":0.052}}},{"i":130,"$":{"0":{"v":"Ecclesiastes","n":1}}},{"i":131,"$":{"0":{"v":"Ecclesiastes 1","n":0.707},"1":{"v":"# Ecclesiastes 1\n\n[ESV](https://www.biblegateway.com/passage/?search=ecclesiastes+1&version=ESV)\n","n":0.577}}},{"i":132,"$":{"0":{"v":"Authors","n":1}}},{"i":133,"$":{"0":{"v":"G. K. Chesterton","n":0.577},"1":{"v":"# G. K. Chesterton\n","n":0.5}}},{"i":134,"$":{"0":{"v":"Assets","n":1}}},{"i":135,"$":{"0":{"v":"Sound Effects","n":0.707},"1":{"v":"# Sound Effects\n\n## Sound Effect Lab (効果音ラボ)\n\nhttps://soundeffect-lab.info/\n\n\n## Taira Komiri Sounds\n\nhttps://taira-komori.jpn.org/\n","n":0.316}}},{"i":136,"$":{"0":{"v":"Photos","n":1},"1":{"v":"# Photos\n\n## Pexels\nhttps://www.pexels.com/\n- Free Stock Photos\n","n":0.408}}},{"i":137,"$":{"0":{"v":"Icons","n":1},"1":{"v":"\n# Icons\n\n## Feather Icons:\nhttps://feathericons.com/\n> Simply beautiful open source icons\n\n## Icons8\nhttps://icons8.com/\n\n- PNG 32x32 and 96x96 free, everything else paid\n- A lot of icons in coherent sets\n","n":0.2}}},{"i":138,"$":{"0":{"v":"Fonts","n":1},"1":{"v":"\n# Fonts\n\n## Google Fonts\n\nhttps://fonts.google.com/\n\n## Pixel, low resolution fonts\n\n### Oldschool PC Fonts\n\nhttps://int10h.org/oldschool-pc-fonts/\n\n### PICO 8 Font\n\nhttps://www.lexaloffle.com/pico-8.php?page=faq\n\n###\n\nhttps://electrickeet.com/fonts/\n","n":0.267}}},{"i":139,"$":{"0":{"v":"UI Design","n":0.707},"1":{"v":"\n# UI Design\n\nSource: [Design Hacks Newsletter](https://learnui.design/newsletter.html)\n\n[5 Practical Exercises to Learn UI Design (For Free)](https://learnui.design/blog/5-practical-exercises-learn-ui-design-free.html)\n\n[50 UI Design Tips](https://twitter.com/erikdkennedy/status/1328771593934290944)\n\n\n## Topics\n- [[reference.ui-design.colors]]\n- [[reference.ui-design.fonts]]\n- [[reference.ui-design.text]]\n\n## Alignment\n\n- Design = Alignment\n- You don't have to use a single line but still things are aligned to each other\n\n![Alignment example](assets/images/alignment-example.png)\n\n## Spacing\n\n- Space inside groups less than space between groups\n\n![Spacing example](assets/images/spacing.png)\n\n## Placement of UI Controls - Locality!\n- Put UI controls on where they effect the change\n  - Delete button **on** the email it deletes\n- Put UI Controls that act on a group of elements in an area above those elements\n  - Search bar on top of page searches the whole page\n  - Checkbox over table will select all rows\n\n**Source:** Design Hacks - My favorite usability principle NO ONE talks about\n\n## Alternatives to separating with lines\n- Using whitespace (see [Placement of UI Controls - Locality!](#placement-of-ui-controls---locality))\n- Using background color to highlight something\n- Using shadows to separate elements\n\n**Source:** Design Hacks - Brazilian jiu-jitsu & the art of interface design\n\n## USE LOTS OF WHITESPACE\n**Source:** Design Hacks - One reason devs make worse UI designs (+ how to fix it)\n\n## Everything should be visible in proportion to its importance\n- Borders of a table are less important than the information inside\n\n## Table Design tips\n- Make table lines less visible\n- Combine columns\n  - But only if you don't need to sort separately by those pieces of information\n  - Works well with columns where most rows don't have an interesting value\n- Don't use colored text - but rather a tag like appearance\n- Right-align and monospace number columns for easier comparability\n\n**Source:** Design Hacks - 5 quick design tips for data tables\n\n## Use great images\n\n- Free high quality stock photos\n  - https://unsplash.com/\n  - https://www.pexels.com/\n\n## \"Frame breaking\" can be interesting\nLetting an image outside of its frame like\n- a mountain top extending over the menu bar\n- A logo/an illustration disappearing partly behind photo elements\n\nBasically letting the photo world and the design element/illustion world overlap\n\n**Source:** Design Hacks - How this pro designer thinks outside the rectangle\n\n## Light comes from the sky\n- Top of things are bright, Shadows are cast below them\n  - Checkboxes are darker than the surrounding part and cast shadows\n\n    ![](assets/images/checkbox-shadow-example.png)\n  - Content cards are brighter than the background\n  - Input fields are darker than the surrounding surface\n\n**Source:** Design Hacks - An important but *NON-obvious* law of UI 🔥\n\n## Design Motifs\n- Use a common theme/motif throughout your design to make it more interesting\n  - Hexagonal logo and a triangle grid over the main page image\n  - Use the same color or color gradient across the site\n\n## Tiny Underlines\n- Tiny underlines make otherwise boring text more interesting\n\n![](assets/images/tiny-underlines-example.jpeg){ height: 400px }\n\n## Good \"No Result\" pages\n- Give you an action you could take to add the missing data\n- Give you the option to remove filters if any are applied\n- Show example/popular searches to show the kinds of things they can search for\n- Possibly also do fuzzy matching to offer a \"Did you mean... ?\"\n\n**Source:** Design Hacks - 4 quick tips for awesome “No Results” pages\n\n## Don't use obvious labels\n- \"Description\" can stand without label if the text style is clear enough\n- Titles/Names can just be headings\n- Think about using tag-like displays\n\n## Avoid Dropdowns if possible\n- Dropdowns require two clicks and hide the possible options\n- Possible replacements:\n  - Some Type selection that changes the form -> Tab\n  - Date/Time -> Use text fields with date/time pickers\n  - Boolean values -> Toggles\n\n**Source:** Design Hacks - 4 quick “before/after” designs 💅\n\n## Example design guidelines/directions/motif/brand feel\n\n### Playfulness\n- Pastel colors (i.e. less saturation and more brightness)\n- Scattered elements in the background (to break up the \"grid\")\n- Fonts with imperfect kerning (space between letters) or stroke-weights make things quirky\n\n### Friendly Design\n- Squishy shapes, rounded corners\n- Cheerful bright pastel colors\n- Font: Simple geometric forms, rounded, not much difference in stroke weight\n  - 45 degree terminals (the ends of the c) convey subtle friendliness\n\n**Source:**\n  - Design Hacks - Fiverr vs. Chanel\n  - Design Hacks - I made a 1-question personality test for fonts\n\n### Fancy/Elegant designs\n- Thin stroke, crisp corner icons/images\n- Grayscale, gold, black colors\n- Font: Delicate serif\n  - For sans-serif: near vertical terminals (the ends of the c) convey subtle elegance\n\n**Source:**\n  - Design Hacks - Fiverr vs. Chanel\n  - Design Hacks - I made a 1-question personality test for fonts\n\n### Crisp, clear cut impression\n- Font: horizontal terminals (the ends of the c) convey subtle crispness\n\n**Source:** Design Hacks - I made a 1-question personality test for fonts\n\n### Hexagon Logo and scattered triangles\n\n","n":0.037}}},{"i":140,"$":{"0":{"v":"Resources","n":1}}},{"i":141,"$":{"0":{"v":"Shift Nudge","n":0.707},"1":{"v":"\n# Shift Nudge\n\nFull blown design course\n\n6 * 299$ (minus 297$ if paid at once)\n","n":0.267}}},{"i":142,"$":{"0":{"v":"Refactoring UI","n":0.707},"1":{"v":"\n# Refactoring UI\n\nhttps://www.refactoringui.com/\n\n“I know this looks terrible, but I have no idea why.”\n\nThis book is fantastic for engineers learning how to design.\n\nSurvival kit\n","n":0.209}}},{"i":143,"$":{"0":{"v":"Frontend Practice","n":0.707},"1":{"v":"\n# Frontend Practice\n\nhttps://www.frontendpractice.com/\n\nRecreate famous websites as practice projects\n","n":0.354}}},{"i":144,"$":{"0":{"v":"Design Academy","n":0.707},"1":{"v":"\n# Design Academy\n\nhttps://www.designacademy.io/\n\nDesign principles for developers taught in a non-pretentious,\nnon-bullshitty way\n\nEnroll now and get a free 6-day course where you’ll learn everything\nyou need to know to be able to add ‘designer’ to your skillset.\n\nPaid course available for 299$\n","n":0.162}}},{"i":145,"$":{"0":{"v":"CSS for JS Dev","n":0.5},"1":{"v":"\n# CSS for JS Dev\n\nhttps://css-for-js.dev/\n\n399$\n","n":0.447}}},{"i":146,"$":{"0":{"v":"Text","n":1},"1":{"v":"# Text\n\n![[Fonts|reference.ui-design.fonts]]\n\n## Write content first\nWrite all the content before designing anything. The design should support the content not constrain it to make it\nfit the design.\n\nSource: [DesignAcademy - Why you need to write your content BEFORE you start designing — and how to do it effectively](https://www.designacademy.io/content-first)\n\n### Writing copy\n- https://www.designacademy.io/writing-copy-part-1\n- https://www.designacademy.io/writing-copy-part-2\n\n## Line length\n- One line should be between 45-75 characters ideally.\n- Adjust text column width to fit that\n\n**Source:** Design Academy - Debugging Design: Rejigging Layouts\n\n## Use more Uppercase\n- Feel free to use uppercase text in short text elements like menus, headlines, button labels\n- It draws attention to those things\n- It gives a bigger sense of alignment (i.e. that something was designed with intention)\n  ![[reference.ui-design#alignment:#*]]\n\n**Source:** Design Hacks - The easiest design tip (no one EVER teaches this 🤦‍♂️)\n\n## Text on Images\n- Text on images usually looks good!\n- But if the image could be anything (like an user-uploaded profile picture), readability can be a problem\n- Some solutions:\n  - Use a dark box around the text\n  - Floor Fade - Use a black gradient on the bottom of the picture\n  - Tint the whole picture\n  - Text shadow (sometimes unreliable)\n\n**Source:** Design Hacks - Why I’m jealous of graphic designers\n","n":0.072}}},{"i":147,"$":{"0":{"v":"Fonts","n":1},"1":{"v":"# Fonts\n\n## How to find great fonts\n- Check the fonts of great designs\n- Have a collection of great fonts\n- [[Tools for Finding Font Pairings|reference.tools-for.finding-font-pairings]]\n\n### Some Recommendations\n- Fira Sans: clean/simple with a side of warmth/humanity\n- Inter: Un-opinionated and readable. If I found myself thinking “Man, I really want to use Helvetica here”,\n- Clear Sans\n  - squared-off feel, brands that are data-driven, scientific, masculine, or authoritative\n- Source Sans Pro\n  - neutral character, just a touch of humanist warmth, works great for user interfaces\n  - Has partner fonts: Source Serif, Source Code Pro (monospace) - but stands well on its own\n- PT Serif: more formal, knowledgeable, academic, official, or authoritative settings\n\n## Size\n- Not all font sizes work together well, use the calculator below to find sizes that work well together\n- [[Tools for Finding Font Sizes|reference.tools-for.finding-font-sizes]]\n\n## More resources\n- [DesignAcadamy - Taking the Guesswork out of Typography on the Web](https://www.designacademy.io/guesswork-typography)\n\n","n":0.083}}},{"i":148,"$":{"0":{"v":"Colors","n":1},"1":{"v":"\n# Colors\n\n## Use HSB for colors\n- It's very intuitive compared to RGB\n- You can easily make boring colors more interesting by adjusting their hue slightly\n  - For example boring blue to a slightly more purplish hue\n- Make color less overpowering/visible by reducing saturation\n\n## Fixing clashing colors\n![Clashing Colors](assets/images/clashing-colors.png)\n- They have too similar \"luminosity\"\n- To fix, do one of:\n  - Raise the luminosity of one: Raise Brightness, Lower Saturation\n  - Lower the luminosity of one: The opposite\n  - Raise one, lower the other\n\n## Theme color and variations\n- Choose a theme color\n- Light variation: Increase brightness, decrease saturation\n  - Used for disabled buttons\n- Dark variation: Decrease brightness, increase saturation\n  - Used for hovered buttons\n- You can make a secondary theme color that feels related to the first one by strongly adjusting brightness/saturation\n  while keeping the hue same\n\n**Source:** Design Hacks - The most important color skill\n\n## Color Palettes\nUsually 4 colors are enough\n- Theme color\n- A grey (text color)\n- A White\n- An accent color (which is used sparingly for call to actions)\n\n**Source:** Design Academy - Debugging Design: Choosing harmonious colours\n\n### Two theme colors\nOne warm and one cool looks usually good\n\n![Warm and Cool Colors](assets/images/warm-cool-colors.png){ height: 250px }\n\n## Text color\n- Don't use text color on a white background (unless it's a link) embed it into a tag like appearance\n\n## Adjusting \"pop\" of \"Buttons\" via colorings\n![](assets/images/three-levels-of-pop.png)\n- Level 1 (least visible): Colored Element on background\n- Level 2 (medium visible): Colored on light colored background\n- Level 3 (most visible): White on strongly accent colored background\n\n**Source:** Design Hacks - A subtle design tweak no one ever talks about\n\n## Vivid Gradients\n- Don't do straight gradients in RGB space\n- Do them in HCL, HSB or HSL\n- Useful Tool: https://www.learnui.design/tools/gradient-generator.html\n\n## Muted Palette\n- Calm, restrained, sometimes retro vibe\n- Orangish reds (little saturation), Goldish yellow, yellowish greens\n- Shift everything towards orange\n\n![](assets/images/muted-palette.png)\n\n**Source:** Design Hacks - On color palettes and MacGuffins\n","n":0.057}}},{"i":149,"$":{"0":{"v":"Spiritual Abuse","n":0.707},"1":{"v":"\n# Spritual Abuse\n\n## Books I might want to read\n- [Escaping the Maze of Spiritual Abuse: Creating Healthy Christian Cultures](https://www.amazon.com/Escaping-Maze-Spiritual-Abuse-Christian/dp/028108131X)\n  > ‘Every time he wanted me to do something, he would quote scripture... I couldn’t argue with scripture, it was like arguing with God.’\n- [A Church Called Tov: Forming a Goodness Culture That Resists Abuses of Power and Promotes Healing](https://www.amazon.com/Church-Called-Tov-Goodness-Promotes/dp/1496446003)\n  > Tragically, in recent years, Christians have gotten used to revelations of abuses (...) We need a map to get us from where we are today to where we ought to be as the body of Christ. That map is in a mysterious and beautiful little Hebrew word in Scripture that we translate “good,” the word tov.\n","n":0.093}}},{"i":150,"$":{"0":{"v":"Literature Notes","n":0.707},"1":{"v":"\n# Literature Notes\n\nThis category contains all the literature notes of things I'm currently consuming.\n\nLiterature is meant in the widest sense - it could be books, blog articles, videos, digital gardens I browsed etc.\n","n":0.174}}},{"i":151,"$":{"0":{"v":"Videos","n":1}}},{"i":152,"$":{"0":{"v":"Tim Keller - Redefining Work | TGC13","n":0.378},"1":{"v":"\n# Tim Keller - Redefining Work | TGC13\n\n![Youtube Icon](assets/youtube-icon.svg){height: 1rem}\n[Tim Keller | Redefining Work | TGC13](https://www.youtube.com/watch?v=fGH5bhUwMB4)\n\n## My Summary\n- Doing excellent work is part our service for God\n- Faith helps us to\n  - keep our self-worth independent of our ability to work\n  - see the inherent dignity of all work\n  - keep our integrity even during temptations\n  - have hope that it will bear fruit even if we don't see it right away (or ever during our life)\n  - be a light and salt in our sphere of influence\n\n---\n\n## The Great Commission needs cultural engagement (2:07-2:52)\n- Isn't the job of the church simply to preach the word and bring people to Christ? Do we really need cultural\n  engagement?\n- Thus: Evangelizing and discipling people\n  - Discipling: Teaching to obey Christ in every area of one's life\n  - For people working out there in the actual culture, that means you necessarily will engage with the culture\n\n## You need a story to make sense of things (3:15-5:42)\n- Example from Alasdair MacIntyre's book \"After Virtue\"\n- Imagine you stand at a bus stop and a young man comes to you and tells you: \"The name of the common wild duck is\n  histrionicus histrionicus histrionicus\"\n  - That doesn't make sense unless you embed it into a story\n    - Maybe he's mentally ill\n    - Maybe yesterday someone who looked like you asked him for the name of the common wild duck\n    - Maybe he's a foreign spy waiting at a pre arranged rendezvous and just uttered this code sentece to identify\n      himself to his contact\n  - Your action will be decided by which story you put this action into\n\n## Many Christians think only church is God's work (5:49 - 6:45)\n- Many Christians think: In church I'm doing God's work, out here I'm just making a living so I can do God's work or\n  give to missions\n- Negative effects of that attitude:\n  - Making no effort to shape your work by your faith, you will seal it away from your work\n  - You will usually just blend in with the work culture\n- But: Jesus is a king, the king of every area of your life, you cannot conveniently compartmentalize your life like\n  that\n\n## Work under the lens of the Story of the Bible (6:45 - 8:19)\n[[The Story of the Bible|concepts.theology.the-story-of-the-bible]] and how it relates to work:\n- Creation\n  - God is the creator of all things in this material world, including work\n- Fall\n  - Sin is distorting every area of your life, including church life and work\n  - Church life is not inherently more sacred than work\n- Redemption\n  - All things/areas are made new - including your work life!\n- Restoration\n  - God is restoring this material world in the end, we will not be taken away to some spritual netherworld, this\n    shows us the goodness of work and the future of work\n\n## Faith gives you an inner ballast without which work could destroy you (8:50 - 13:38)\n- Nowadays your work often becomes your identify, self-worth, self-importance, sense of competence\n- If work is your identity, it enslaves you\n  - If you're good at your job, you get full of yourself\n    - Because you're good at one thing you think you're good at everything\n  - You cannot look at your own work honestly anymore because you **need** it to be great\n- In western culture work is an end to itself\n  - Whereas in more traditional cultures your main identity, was through your role in the family, work was a means to\n    that end - this is also not the biblical view\n- Christ gives you a deep identity and a deep certainty of your worth, which is independent of your work and performance\n\n## Faith gives you a concept of the dignity of all work even simple work without which work could bore you (13:41 - 18:32)\n- God has chosen to use simple farm workers, truck drivers, etc to feed the world\n  - They are the fingers of God\n- All work is God's work of caring for creation\n- We cannot participate in a sneering attitude towards people working in service or other simple jobs\n- Doing work as a Christian means first and foremost doing good work\n- Even if you have a job that's not really exciting you can know that your work matters\n\n## Faith gives you a moral compass without which work could corrupt you (18:44 - 21:49)\n- In many professions there's a lot of pressure to do whatever it takes to turn a profit\n- The world (college) tells you that morality is relative\n  - (but then again you will be mercilessly judged and canceled or worse if you get caught doing something immoral\n    during your job)\n- We as Christians have an immovable strong moral compass to stand solid in this kind of headwind\n\n## Faith gives you a worldview without which work could master and use you (21:53 - 23:56)\n- In some vocations your worldview determines everything about how you approach your job:\n  - Teacher: What should a human being be like?\n  - Playwrights: What is right and wrong? Where should we going as a society?\n\n\n## Faith gives you hope that everything is not futile (24:00 - )\n- Because of the fall our work and our efforts are often so frustrating, so little and so imperfect no matter how hard\n  we try - it's all thorns and thistles\n  - It's as if we were a painter who tries to paint a tree for all his life and in the end after much work only gets out\n    a little leaf\n  - But there will be a perfect future, there will be perfect beauty, perfect justice, a perfect city in heaven\n\n## Quotes\n- > Your work will make no sense to you unless you put it into some kind of story\n\n  5:43\n\n- > If work is your identity... If you're successful it goes to your head, if you're a failure it goes to your heart.\n\n  11:35\n\n- > All work is God's work. It's God's way of caring for his creation.\n\n  15:11\n\n- > The way to do work as a Christian is to do it well\n\n  16:50\n\n---\n\n## My Questions, Thoughts, Comments\n- I think this is a point of view that must be heard more clearly in many evangelical churches, where people in\n  \"worldly\" jobs somehow often feel as second-class citizens in the Kingdom of God.\n","n":0.031}}},{"i":153,"$":{"0":{"v":"Jeff Van Duzer - Why Business Matters to God","n":0.333},"1":{"v":"# Jeff Van Duzer - Why Business Matters to God\n\n![Youtube Icon](assets/youtube-icon.svg){height: 1rem}[Youtube](https://youtu.be/h3m0q2d8Dq4)\n\nIf we read only until human creation and know nothing else about God... Then we see that\n[[he is a worker|ideas-thoughts-beliefs.theology.god-is-a-worker]] who creates good things.\n\n[[ideas-thoughts-beliefs.theology.god-cares-about-the-material-world]]\n- we actually don't see him create souls and angels etc\n\nThe garden of Eden was not complete\n- it was perfect in the sense that it was perfectly resourced having all you might ever need\n- but it was made to be worked by the human\n\n## Two Purposes of business:\n> Business exists to create opportunities for individuals to express aspects of their God given identity in meaningful\n  and creative work\n\n> Business exists in order to produce goods and services that would enable the community to flourish\n\nBusiness exists to serve others\n- internally to provide people with meaningful work\n- externally to provide the community with resources\n\nProfit is the means not the end, it's necessary to do your service\n\nBusiness must be sustainable (environment and stakeholders)\n\nBusinesses for better or worse will have the most power to change the world more than any one nation can have\n\nThe world needs business leaders with a purpose\n- they are usually amazing world changers\n  - they are the best at getting a lot out of a little\n  - they organize and deploy resources with remarkable efficiency\n  - they tend to be optimistic\n  - they look for the win win solution when everyone else just sees tradeoffs\n  - once they think they're on the right course they are willing to stick with it even in face of enormous obstacles\n","n":0.063}}},{"i":154,"$":{"0":{"v":"Sustainable Rails","n":0.707},"1":{"v":"\n# David Bryant Copeland - Sustainable Web Development with Ruby on Rails\n\n![Book cover](link-to-amazon-picture){ height: 200px; }\n\n[Amazon](link-to-amazon)\n\n**Current position:** Chapter 1\n\n## My Summary\n- Work with Rails not against it where possible\n  - Use default resource routes where possible - devs will know where the code is even years from now\n\n---\n\n## Chapter 1 - Why This Book Exists\n- What is sustainable development?\n  - Easily support new requirements\n  - Can be worked on by many different people\n- Agile often pushes us to YAGNI (You ain't gonna need it)\n  - Of course there is always the danger of overengineering\n  - YAGNI gets software shipped but it does not actively drive development of supporting architecture for sustainability\n    like\n    - Log statements\n    - Design Systems for easy UI construction\n- Assumptions of the advice in this book\n  - The Software has a clear purpose (i.e. it's not still experimenting and trying to find its market)\n  - The Software needs to exist for years\n  - The Software will evolve\n  - The Team will change\n  - You value sustainability, consistency and quality\n    - Quality needs to be part of the day to day process - the day to pay down technical debt usually doesn't come\n      unless there's a catastrophic failure\n- Opportunity Cost vs Carrying Cost\n  - Carrying cost: Cost that is paid everytime when maintaining/using something\n    - Each line of code is a carrying cost\n    - Each feature has a carrying cost\n    - Each thing we need to remember is a carrying cost\n  - Opportunity cost: One time investment to produce something to reduce carrying cost\n    - By making such a decision you cut off your potential future solution space\n- To develop a software sustainably you need to keep your carrying cost down\n  - Sometimes you need to strategically incur opportunity cost to keep your carrying cost in check\n- Rails' is designed in a way that keeps your carrying cost low for many common webapp patterns\n\n## Chapter 2 - The Rails Application Architecture\n- Parts of a Rails App\n  - Boundaries: Accept Input from somewhere and return output\n  - Views: HTML, ERB, CSS etc\n  - Models\n  - Everything Else\n    - Tests, Dependencies, Seeds, `bin/setup`\n- Pros and Cons of the Architecture\n  - Pro: No big upfront decisions needed to get started\n  - Pro: Lots of conventions for naming etc - it's easy to maintain the architecture\n  - Con: It's designed to build a DB backed webapp\n  - Con: Rails gives no guidance on where business logic should go\n\n## Chapter 4 - Start Your App Off Right\n- Things assumed about the app\n  - Other developers will work on it and need to\n    - set it up\n    - run tests locally\n    - run the app\n  - It will have security vulnerabilties\n  - It will be deployed to production via a CI pipeline\n  - It will need operational observability\n- Setting up a Developer Workflow by providing a set of scripts\n  - `bin/setup` - Set up the app after cloning it\n  - `bin/run` - Run the app locally using environment variables via the `dotenv` gem\n  - `bin/ci` - Run tests and other checks like `brakeman` and `bundle audit`\n- Manage runtime env consistently via UNIX Environment variables\n  - Having all of `database.yml`, `credentials.yml.enc` and `master.key` to store environment is confusing\n  - Better delete all of them\n  - Use `dotenv` for test/development\n    - can also be safely checked in\n    - Gitignore `.env` - if checked in its purpose is very unclear\n    - Gitignore `.env.*.local`\n  - Don't use `dotenv` in production\n- Write comments, about why libraries are there\n- `bin/setup` (written in Ruby)\n  - Reset local database regularly to remove old test data / production data for troubleshooting\n  - Add comments to each setup step explaining why\n  - Use some nice helpers like:\n    - `system!` abort when command fails\n    - `log` log with a prefix to know it was written by the script and not an executed command\n- `bin/ci`\n  - Run tests\n  - Run Brakeman & output to brakeman.html\n  - Run Bundle audit\n- Use `lograge` for logs\n  - Turns off coloring (though that can be done with the `colorize_logging` option too)\n  - Puts request logs on a simple 1 line format\n    ```\n    method=GET path=/jobs/833552.json format=json controller=JobsController  action=show status=200 duration=58.33 view=40.43 db=15.26\n    ```\n    - Requires you to properly set the logger formatter to get timestamps\n\n## Chapter 5 - Business Logic (Does Not Go In Active Records)\n- Rails is optimized for CRUD\n- Essential/necessary complexity: Everything on top of normal CRUD that makes your App Special\n  - Conditional updates, data formatting, calling 3rd party services\n- Accidental/unnecessary complexity: Architectural decisions that add complexity that didn't **have** to be there\n  - For example manage users in another app and manage via API calls rather than storing it the own database\n- Business logic is made up of both types of complexity\n- Business logic changes often = High churn\n- High complexity + High churn = A paradise for bugs\n- Fan out: How many other classes you call\n- Fan in: How often other modules/classes call you\n  - Classes with high fan in are most likely to cause system-wide bugs\n- To reduce system-wide bugs: Minimize the complexity and minimize the churn of high fan-in classes\n  - ActiveRecord classes are the most used classes in Rails apps\n  - Business logic has high complexity & high church\n  - Therefore: Keep business logic **out** of ActiveRecord classes\n- Add a service layer between your Controllers and ActiveRecords\n  - Logic on Active Records\n    - `Product#search`, `Product#rate`, `Product#purchase`, `Product#purchase_by_tax`\n    - Every controller uses `Product`\n  - With a Service Layer in between\n    - Several service classes:\n      - `ProductPurchaser#purchase`, `ProductPurchaser#purchase_by_tax`\n      - `ProductRater#rate`\n      - `ProductSearch#search`\n    - Each of those new classes is only used by 1 or two controllers\n    - All complex business logic is contained in those classes\n\n## Chapter 6 - Routes and URLs\n- Stick with Rails conventions for canonical routes, use `resources` where possible\n  - Developers will immediately know how the app is organized\n  - You won't have to make architectural decisions\n- Don't create unused routes (use `only:`)\n- Add custom routes as a separate section below normal routes as redirects to canonical urls\n  - Add a comment explaining why it's needed\n  - You can also use a normal `get` etc helper if you don't want any redirects\n- Prefer creating new resources rather than custom actions\n  - Rails works best when focused on resources + standard actions\n  - `resource :product_ratings, only: %i[create]` rather than `resource :products, only: %i[...., rate]`\n- Prefer separate resources over nested resources.....\n  - Rails Guid recommends to only nest resources at most one level\n  - Only use a child resource if it's 100% clear that this can really only make sense and/or retrieved in the context\n    of the parent resource\n    - `product_rating` sounds like a good candidate for a nested resource... but what about querying all ratings of a\n      particular user?\n\n## Chapter 7 - HTML Templates\n- Build HTML views with the correct semantic tags\n  - This will result in easier to change views (tree of meaningful tags vs div hell)\n  - It will be easier to test since the semantic meaning of a page elemnt is more unlikely to change than a CSS class\n  - Solve layout / appearance problems with added `div` / `span` tags and CSS\n- Expose one instance variable per action (representing the resource) if possible\n  - Avoid representing the resource with several variables\n  - If you add additional non-resource instance variables you have to go check the controller to know how it was\n    assigned\n  - Decorators/View Models are also no good choice since they make code harder to understand\n  - Exceptions are things like `@current_user` and `@country_codes` or other UI state like `@current_tab`\n- Use only instance variables in views not helpers directly if possible\n  - You can generalize/abstract code at the controller level to make it DRY\n  - If you only use instance variables in views you know exactly where to check for their values - in the controller\n- Layouts should be used for global concerns like stylesheets or a sidewide navigation bar\n- Use Partials for only re-usable components\n  - Use only locals inside not instance variables to keep it re-usable in any situation\n  - Just use ERB (and not Haml or Slim etc) since it's closer to HTML and comes with Rails\n\n## Chapter 8 - Helpers\n- Helpers introduce lots of \"global view code\" which can be a problem for maintainability\n- Be careful to not put \"view concerns\" into helper functions which are actually domain concerns since they are not just\n  an incidental display format but the User relies on that in their daily job\n  - i.e. a specially formatted Item ID\n- Good users for helpers\n  - Global UI context like `current_user`\n  - Wrapping often used UI Component partials\n    - Directly rendering HTML to act as very simple small UI components is also ok!\n- Define UI Components helpers only in `application_helper.rb`\n  - Separation in several helper files does not really help the fact that all helpers are global\n  - It's better to express that fact by just writing everything in application_helper\n- Define global UI state that needs to access database (like `current_user`) as private `ApplicationController` methods\n  and turn it into a helper method with `helper :current_user` etc.\n- Alternative method: Presenters\n  - Wrap your domain object into an object that adds a few methods for views and delegates the rest to the domain object\n  - This unfortunately introduces inconsistencies and more design decisions you have to make (should I make a Prresenter\n    because it's everywhere even though I don't need it etc ?)\n  - it also makes it hard to exactly know the type an object has\n  - Few\n\n---\n\n\n## My Questions, Thoughts, Comments\n","n":0.025}}},{"i":155,"$":{"0":{"v":"Mister Chad's mindgarden","n":0.577},"1":{"v":"\n# Mister Chad's mindgarden\n\nhttps://mister-chad.com/welcome\n\n## Keeping a personal blog / Incremental Correctness\n\nNot everything we produce has to be perfect and final when we put it out there into the world. All classical\ndistribution (like blogs) mechanisms don't really encourage updating and re-working...\n\n- Quoting from Brian Lovin's article\n[Incrementally correct personal websites](https://brianlovin.com/writing/incrementally-correct-personal-websites)\nwhich describes this concept in detail.\n\n> Incremental correctness is the process of iterating towards something more truthful, accurate, usable, or\ninteresting. The faster we can iterate, the faster we can discover good ideas. Things aren't perfect today, but\ntomorrow things can be slightly closer to perfect.\n>\n> Incremental correctness changes everything about the way you work. It's anti-perfectionism. It's pro-generation. It's\nabout discovery and proof, research and prototyping, and having a framework to reliably test your instincts. It\ndiscourages major redesigns, preferring isolated improvements to a small subset of nodes in any kind of working tree.\n\n### Related pages\n- [keeping a personal blog](https://mister-chad.com/mind+gardens/keeping+a+personal+blog)\n\n## Taking notes during creative work\n- Take notes, leave a record of your thought and development process to know how you got where you are.\n- Ideas that are just in your head will eventually disappear uselessly\n  - Be always prepared to show your work, having legible and clear notes is one part of that\n\n### Related pages\n- [leave a record](https://mister-chad.com/creativity/leave+a+record)\n- [get it on the page](https://mister-chad.com/creativity/get+it+on+the+page)\n- [quantity leads to quantity](https://mister-chad.com/creativity/quantity+leads+to+quality)\n\n## Quantity leads to quality\n- Inspirations hits during the time people regularly work on things\n- First spend quite some time on \"divergent thinking\", exploring many different ideas\n  - create many variations to find the best idea\n    - doodle, collage, mind map, lists, mashups, research\n    - play\n  - **Write everything down**\n\n### Related pages\n- [quantity leads to quantity](https://mister-chad.com/creativity/quantity+leads+to+quality)\n\n## Give yourself permission to play\n- work with no expectations, have a beginner's mind\n\n### Related pages\n- [creative process](https://mister-chad.com/creativity/!+creative+process)\n\n## Incubation of ideas\n- Take a break, shower, do the dishes\n- sleep on it\n- Go outside and play, go window shopping\n- Procrastination with a purpose\n\n### Related pages\n- [incubation](https://mister-chad.com/creativity/incubation)\n\n## Thinking outside the box\n- Reference: https://www.lifehack.org/articles/featured/11-ways-to-think-outside-the-box.html\n- Study another industry\n- Learn about another religion\n- Take a class\n- Read a novel/watch a movie/play a game in an unfamiliar genre\n- Write a poem, draw a picture\n- Turn it upside down, work backwards\n- Ask a child\n- Use randomness\n- Take a break/shower\n\n\n## Resources\n- [Graphic Design Resources](https://mister-chad.com/graphic+design+resources/!+graphic+design+resources)\n","n":0.053}}},{"i":156,"$":{"0":{"v":"Misreading Scripture with Western Eyes","n":0.447},"1":{"v":"\n# E. Randolph Richards & Brandon J. O'Brien - Misreading Scripture with Western Eyes: Removing Cultural Blinders to better Understand the Bible\n\n![Book cover](https://m.media-amazon.com/images/W/WEBP_402378-T1/images/I/41XntblfB3L._SY346_.jpg){ height: 200px; }\n\n[Amazon](https://www.amazon.com/Misreading-Scripture-Western-Eyes-Understand-ebook/dp/B00BL3JXYE)\n\n## My Summary\n- We read the Bible with certain preconceptions - things that go without being said - and that influences how we\n  understand the texts - which were written in a different culture than ours\n\n---\n\n## Chapter 1 - Serving Two Masters (Mores)\n- More - A fundamental moral view of a group\n- If we are conflicted with a conflicting more we can either stubbornly resist or compromise (not necessarily negative)\n- Westeners tend to see things dualistically - something is either right or wrong, true or false, good or bad\n- Even among Christians mores can greatly differ\n  - Cussing and swearing is a no go in many parts of the US\n  - Playing cards was not ok in the South of the US but becomes OK towards the north\n  - Smoking is ok on the East Coast (where tobacco is grown) and becomes more and more unaccepable towards the west\n  - Theater going was seen as very sinful in the past but became more accepted and sermons became more theatrical too\n  - Playing billard is seen as very sinful among some Indonesian Christians\n- Because of that we might interpret Biblical stories differently, like Sodom and Gomorrah\n  - For Westerners the sin is obviously sodomy\n  - For Indonesians it's inhospitality, they use Ezekiel 16:49 as support\n    > Now this was the sin of your sister Sodom: She and her daughters were arrogant, overfed and unconcerned; they did\n      not help the poor and needy.\n- For Westerners marriage (and sex within marriage) is preferable to singleness (and celibacy)\n  - In India where the apostle Thomas preached the Gospel according to tradition, the message of celibacy was eagerly\n    received since they were already influenced by Hinduism's ascetism\n  - We would think it a misapplication of the gospel to talk an engaged couple out of marriage - but is that really so?\n  - The Bible calls both marriage and singleness good - none is itself better than the other\n  - Paul was considering Roman mores about sexual morality in [[reference.bible.1-corinthians.07]]\n    ![[reference.bible.1-corinthians.07#background,1]]\n- Westerners consider wealth an unlimited resource which can be accumulated without moral problems if you are successful\n  enough\n  - Many would even go so far and say if you don't have wealth then it's because you're lazy and not determined enough\n  - In non Western cultures wealth is seen as limited and you live at the expense of others when you're rich\n    - There's no good reason to accumulate more than you need and thus destroy others\n  - We Westerners tend to misread lessons about economic & social modesty as lessons about sexual modesty\n    - Paul's admonition to women in 1 Cor 11 to cover their hair\n      ![[reference.bible.1-corinthians.11#background,1]]\n  - In 18th century New England people rented pews with their tithes... the social and financial hierarchy was clearly\n    on display inside the church\n  - Are we acting economically modest on Sundays? Do we display status and riches in the way we dress or display luxury\n    goods to others around us?\n- Different cultures have different \"culturally edible\" food\n  - In Indonesia there's dog and rat meat, and they find the thought of us taking baby cow food and letting it go bad\n    until it molds - cheese - appalling\n  - For people growing up with certain cultural mores about food, this is not just a theological debate or a small thing\n    - Asking a orthodox Jew or a Muslim to eat pork could be as repulsive as asking Westerners to eat cockroaches\n  - This has practical implications too - how could a Jew share a table with someone whose breath stank of pig fat?\n- How can we avoid these kind of instinctive interpretations distorting our interpretation of a Bible text?\n  - When looking at a text go through these steps:\n    - Clearly this passage is saying .... is right/wrong?\n    - Is this really what is condemned?\n    - Am I adding/removing elements\n  - Look for clues in the text: Repeated words\n  - Read Bible texts with Christians from other cultures\n  - Read books of Christians from other cultures or time periods\n\n## Chapter 2 - The Bible in Color (Race and Ethnicity)\n- White children are more expensive to adopt in the US than children of color - even in Christian adoption agencies\n- Nowadays Western culture starts to be \"colorblind\"\n  - Since we don't want to make value statements about ethnicities - we hesitate to make any statements or distinctions\n    at all\n  - We want to make things simple by believing that ethnic differences don't matter at all - effectively that will mean\n    that we believe that everyone should be treated as members of the majority culture\n  - But that is naive and can result in serious misunderstanding - There are differences in dialect, worship style,\n    dress, cuisine, prejudices etc\n- For first century Romans it was totally fine to say: \"He does such-and-such because he is a Jew\"\n\n---\n\n\n## My Questions, Thoughts, Comments\n","n":0.035}}},{"i":157,"$":{"0":{"v":"Metaprogramming Ruby","n":0.707},"1":{"v":"\n# Paolo Perrotta - Metaprogramming Ruby\n\n![Book cover](https://m.media-amazon.com/images/I/51sqZ5BY7iL._SX415_BO1,204,203,200_.jpg){ height: 200px; }\n\n[Amazon](https://www.amazon.com/Metaprogramming-Ruby-Program-Like-Facets/dp/1941222129)\n\n## Chapter 3 - Blocks\n- New scopes are started inside\n  - A class defined with `class` keyword\n  - A module defined with the `module` keyword\n  - A method defined witht the `def` keyword\n- To use something from an existing scope you must use the dynamic definition methods `Class.new`, `Module.new`, `define_method`\n- Use `BasicObject` derived classes as clean room for DSL execution to have less methods available\n\n## Chapter 4 - Class definitions\n- `class` keyword = `class_eval` = `instance_eval` on the Class object\n- Inside a class definition you can:\n  - `self` is the class inside\n\n```mermaid\nflowchart LR\n    obj -- class --> MyClass\n    MyClass -- superclass --> Object\n    MyClass -- class --> #MyClass\n    Object -- class --> #Object\n    #MyClass -- superclass --> #Object\n    Object -- superclass --> BasicObject\n    BasicObject -- class --> #BasicObject\n    #Object -- superclass --> #BasicObject\n    #BasicObject -- superclass --> Class\n```\n\n- Super class of a singleton class is singleton class of superclass\n\n---\n\n\n## My Questions, Thoughts, Comments\n","n":0.079}}},{"i":158,"$":{"0":{"v":"Extreme Programming Explained","n":0.577},"1":{"v":"\n# Extreme Programming Explained (Kent Beck, Cynthia Andres)\n\n![Book cover](https://m.media-amazon.com/images/P/0321278658.01._SCLZZZZZZZ_SX500_.jpg){ height: 200px; }\n\n[Amazon](https://www.amazon.com/Extreme-Programming-Explained-Embrace-Change/dp/0321278658/)\n\n**Current position:** Chapter 4\n\n## My Summary\n\n---\n\n## What is XP?\n- Getting over our own surety that \"I know better than everyone else and all I need is to be left alone to be the\n  greatest\"\n- XP = Stay aware, adapt, change\n- Everything in software changes, we must be able to cope with change\n\n## Values, Practices, Principles\n- Practices: Specific, concrete things you do day to day\n  - can have benefits even if you don't share values or understand principles behind them\n- Values: Why you do things, purpose of practices\n  - practices are evidence of values, they bring accountability\n  - Master craftsmen know what's really valuable by experience\n- Principles: Domain specific guidelines for life\n  - Connecting values and practices\n\n## Values of XP\n\n### Communication\n- Talk to people, they might have had a similarly problem before already\n- When a problem happens ask yourself\n  - Was it caused by lack of communication?\n  - What communication can I take now to address it?\n  - What communication can you take in the future to avoiding getting into the same problem again?\n\n### Simplicity\n- > What is the simplest thing that could possibly work?\n- Improving communication can improve Simplicity by removing unneeded or not yet needed requirements\n- Improving simplicity improves Communication since there's less to communicate about\n\n### Feedback\n- We don't know what is the \"right\" way to build things from the beginning - we need constant feedback\n- Types of feedback\n  - opinions about an idea\n  - how the code looks\n  - whether tests are easy to write\n  - how it works\n- Generate as quick and much feedback as you can handle\n- if you can't handle feedback quickly enough you need to fix that first\n\n### Courage\n- Effective action in the face of fear\n  - speak truths pleasant or unpleasant to foster communication and trust\n  - discard failing solutions to get simplicity\n  - seek real concrete answers to get feedback\n  - not acting even though it seems serious and urgent to get to the foundation of an issue\n\n### Respect\n- caring for the other team members, the project and their work\n- everyone on the team is important\n\n## Principles of XP\n\n### Remember software is made by humans\n- they have needs that need to be met\n- needs of the individual need to be balanced with the needs of the team\n- the individual must find a way to meet their needs without hurting the team\n- people find that they can actually more themselves if they trust the team\n- but don't make others uncomfortable by sharing too private things during work time\n\nRelated values: Communication, Respect\n\n### Remember the economics in play\n- somebody has to pay for all this\n- spend money as late as possible = work incrementally (time value of money)\n- if possible build solutions that can reasonably be reused (option value of systems)\n  - but don't build in yet unneeded features for some kind of we might use it someday scenario\n\nRelated values: Simplicity, Respect (the budget payers money), Feedback\n\n### Build for mutual benefit\n- for you now, the customer and you in the future\n\nRelated values: Respect others\n\n### Reuse patterns that work (self-similarity)\n- patterns that work at one level / place (e.g. test driven day to day development) often also prove to work at\n  others (acceptance test driven sprints)\n\nRelated values: Simplicity\n\n### Improve continuosly and incrementally\n- improve right now as much as you realistically can and get to work - don't wait for perfection\n- use feedback to improve further\n\nRelated values: Feedback, Courage (to start even if not 100% perfect)\n\n### Seek diversity\n- different point of views and the resulting conflicts are opportunities for even better work\n\nRelated values: Communication, Feedback, Respect others, Courage (to allow yourself to be criticized for the sake of\nthe project)\n\n### Reflect on your work\n- analyse how and why we do work\n- analyse why you succeeded or failed and learn from it\n- using both official retrospective meetings and informal settings\n- listen to what your \"negative\" emotions are pointing at\n- but don't stay in analysis paralysis but get to work\n\nRelated values: Feedback, Communication, courage (to face your own mistakes)\n\n### Keep up a steady flow\n- shorten your feedback cycles\n- tackle blockers of flow with priority\n- usually other problems will solve itself along the way\n- resist the temptation to lengthen feedback cycles because of problems\n\nRelated values: Feedback, Courage (to tackle flow problems even if other tasks seem more urgent)\n\n### Turn problems into learning opportunities\n- don't just try to survive, improve!\n\nRelated values: Feedback, Courage\n\n### Embrace redundancy\n- it seems wasteful to tackle the same problem at several levels but its effective\n- catching defects as one main problems is tackled at many levels\n  - pair programming\n  - continuous integration\n  - real customer involvement\n  - daily deployment\n  - etc\n\nRelated values: Feedback, Respect (for the customer to deliver defect free software)\n\n### Fail rather than do nothing\n- If you don't know how to do something well, try several ways even if they might fail\n\nRelated values: Feedback, Courage\n\n### Never compromise on quality\n- Quality should never be a control variable, scope can be\n- Low quality will slow down predictable delivery\n- People will be demotivated if they deliver work they cannot be proud of\n- Don't use quality as an excuse for not acting, just do it the best way you know at the moment\n\nRelated values: Courage (to cut down scope to not compromise on quality), Respect (for the customer you deliver to)\n\n### Make baby steps\n- > What is the least you could do that is recognisably in the right direction?\n\nRelated values: Feedback\n\n### Accept responsibility and have authority\n- No one can assign responsibility to you, you can only accept it\n- Who is responsible should also have the ultimate say about how to do their work\n\nRelated values: Communication, Respect\n\n## Practices\n\n---\n\n## My Questions, Thoughts, Comments\n","n":0.033}}},{"i":159,"$":{"0":{"v":"Implementing Domain Driven Design","n":0.5},"1":{"v":"\n# Implementing Domain Driven Design (Vaughn Vernon)\n\n![Book cover](https://m.media-amazon.com/images/P/0321834577.01._SCLZZZZZZZ_SX500_.jpg){ height: 200px; }\n\n[Amazon](https://www.amazon.com/Implementing-Domain-Driven-Design-Vaughn-Vernon/dp/0321834577)\n\n## My Summary\n\n---\n\n## Entity\n- Something that changes over time\n\n## Value Objects\n- Value object is a description of something\n- Use Value objects where possible\n- If it has to change... think if it's possible to \"replace\" it instead\n- Separate it from the Persistence layer!\n  - Sometimes you have to store it as records - but don't let that influence your domain model\n\n\n## Domain Service\n- Calculation process\n  - Involving several aggregrates\n  - Using repositories\n- Transformation processes\n  - See Adapters, Ports (Hexagonal Architecture) in Integrating Contexts\n\n## Domain Events\n- When something important happens publish a domain event\n  - Immutable\n  - Contains timestamp\n  - Contains all necessary information to re-execute the same action (the ids of the involved aggregates)\n- Event Store: Store it in a special db table/list\n  - Must be in the same transaction as the actual change happening\n  - have message publisher read that store to process/publish events\n- Publishing events\n  - Event Endpoint\n    - Like an Atom Feed\n    - Use constant URLs for certain event ranges (e.g. /events/60,79) and make effective use of caching\n\n## Aggregates\n- Aggregates = Groups of Entities and Value objects accessed via a common interface (the Root Entity)\n- Internal construction, value modifications should be hidden inside Root method implementations\n- Each aggregate is a transactional boundary:\n  - Everything that must change together should be inside one aggregate\n- Build as small aggregates as possible!!!\n- Reference other aggregates only via id\n- If other Aggregates need to change in response to an aggregate changing do it asynchronously\n  - Use eventually consistency where possible. Transactional boundaries are often smaller than one thinks!\n    - Does it really need to be 100% immediately consistent?\n    - Imagine how the business would happen without the application... Just transmitting the information to the next\n      workflow would take some time\n  - Publish an event from Aggregate A & subscribe to it from the other Aggregates\n\n## Factories\n- Factory methods on Aggregate classes to create related aggregates\n  - Use this to create internally consistent objects (like with the correct association which should not be left\n    to the client)\n      - Ensure that the object has the correct parent etc\n  - Use method names that express real use cases in the language\n  - `Forum.start_discussion`, `Tenant.register_user` etc\n- Factory Methods on Services that integrate other contexts\n  - Example: A Service that encapsulates the connection to the Authentication Context, which creates Author, Creator,\n    Moderator, etc objects\n\n\n## Repositories\n- Stores Aggregates behind a in memory collection interface\n- Collection style stores\n  - No explicit save calls but one of:\n    - Track changes and then at some point later persist them\n    - Wrap the returned object in a persistence backed decorator\n  - Adding means storing\n- Persistence style stores\n  - Explicit save calls\n- Collection style is preferable but not always feasible\n\n## Integrating Bounded Contexts\n- When using message services - make your event handlers idempotent if any possible - since a message could always be\n  delivered several times\n\n## UI\n- Should manipulate **one** aggregate at a time (aggregate == transaction boundary)\n- Might need several aggregates for context\n- When you use Rest Resources (or any kind of data representation for the UI) then design them around use cases **not**\n  around the actual aggregates\n  - Keep UI and data structures decoupled\n\n## Application service\n- Used by the UI to actually do things\n- Uses domain services to realize the use cases\n- Think about outgoing interfaces:\n  - Do you want to expose domain models (i.e. add dependencies to it) as return types etc?\n  - Or do you want the overhead of DTOs?\n- Can be used to integrate several contexts for UI but if this is repeatedly happening and starting to contain some\n  logic you should think about possibly extracting a new downstream context\n\n## Infrastructure\n- Concrete implementations of interfaces for technical capabilities like storage, messaging etc\n- Injected into/passed to application services\n- Ports/Adapters in Hexagonal Design\n\n## Event Sourcing\n- Store your whole data only as a collection of events that happened and reconstruct your aggregates (or for that\n  matter any kind of read representation) by processing all events so far\n- Events are immutable\n- Reading data structures should be cached (for example every 100 events) and are freely disposable\n- For events that are also consumed as domain events by listeners (possibly from other contexts) it might be smart to\n  include additional properties in the published event that are not explicitly needed to reconstruct the state to avoid\n  secondary queries for more information\n- Is natural to implement with functional programming\n  - Aggregate + Event -> Aggregate\n  - Aggregate + Command -> Event[]\n\n---\n\n\n## My Questions, Thoughts, Comments\n","n":0.037}}},{"i":160,"$":{"0":{"v":"Domain Driven Design","n":0.577},"1":{"v":"\n# Domain Driven Design (Eric Evans)\n\n![Book cover](https://m.media-amazon.com/images/P/0321125215.01._SCLZZZZZZZ_SX500_.jpg){ height: 200px; }\n\n[Amazon](link-to-https://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215)\n\n**Current position:** Chapter 1\n\n## My Summary\n\n---\n\n## Part 1: Putting the Domain Model to Work\n> A model is a simplification. It is an interpretation of reality that abstracts the aspects relevant to solving the\n  problem at hand and ignores extraneous detail.\n\n> A model is a selectively simplified and consciously structures form of knowledge.\n\n## Chapter 1: Crunching Knowledge\n- Try to understand the words of the experts\n- Ask for what they want to achieve\n- Knowledge crunching happens between all team members, including developers and domain experts\n\n---\n\n\n## My Questions, Thoughts, Comments\n","n":0.102}}},{"i":161,"$":{"0":{"v":"David Allen - Getting Things Done","n":0.408},"1":{"v":"\n# David Allen - Getting Things Done\n\n![Book cover](https://images-na.ssl-images-amazon.com/images/I/51W-ZL+QRlL._SX324_BO1,204,203,200_.jpg){ height: 200px; }\n\n[Amazon](https://www.amazon.co.jp/-/en/David-Allen/dp/0143126563)\n\n**Current position:** Chapter 1 - The Promise\n\n## Basic Principles\n- Capture **all** the things that are on your mind in a **trusted** system\n- Separate thinking about what to do and actual doing\n  - This will result in a directly actionable list of \"Next Actions\"\n- Have regular reviews of your projects and commitments\n\n## Our live and work is complex and fast-paced\n- People have more concurrent ongoing commitments/projects than in the past\n- With physical labor it's usually clear when work was done, a field plowed, a bread baked etc\n  - Nowadays the definition of \"Done\" is not so clear anymore\n  - When is your plan, article, meeting preparation etc perfect? - You could always do more, always use more information\n    etc\n- Work is more complex and involves communicating with many people often from other departments and of other professions\n- Teams work globally thanks to modern technology\n- Most people don't do only what they were hired for\n- Commitment to continual learning\n- Changes in life are frequent and often times sudden (health issues, family, financial challenges)\n- Work is too fast and unpredictable to be accomodated by classical calendars and todo lists only\n\n## Focusing on the bigger picture is hard\n- Day to day and hour to hour work life is too distracting to allow time and focus for bigger picture thinking\n- Ineffective organization systems build up internal resistance to tackling anything complex\n- When we think about higher levels, our standard of living and working usually rises and that causes more work that\n  needs to be organized\n\n\n## Quotes\n> Most of us have, in the past seventy-two hours, received more change-producing, project-creating and priority-shifting\n  inputs than our parents did in a month, maybe even a year.\n\nChapter 1, Kindle position 486\n","n":0.059}}},{"i":162,"$":{"0":{"v":"Continuous Delivery - Why Your Software Team Cant Scale","n":0.333},"1":{"v":"\n# Continuous Delivery - Why Your Software Team Cant Scale\n\n![Youtube Icon](assets/youtube-icon.svg){height: 1rem} [YouTube](https://www.youtube.com/watch?v=pw686Oyeqmw)\n\n**Current position:** Chapter 1\n\n## Team Size\n- Study showed: Teams of up to 5 are more productive and produce better quality code than teams of 20 or more\n  - [QSM - Haste Makes Waste When You Over-Staff to Achieve Schedule Compression](https://www.qsm.com/risk_02.html)\n- We can only maintain about 150 stable social relationships (This is called the Dunbar Number)\n- Teams should be between 4-8 people to be most effective\n\n## Conway's law\n> Any organization that designs a system will produce a design whose structure is a copy of the organization's\n  communication structure.\n\n  (Melvin E. Conway)\n\n## Functional Teams / Stream-aligned teams\n- Teams working on one feature, inside one bounded context\n- > A stream is a continuous flow of work aligned to a business domain or organisational capability\n- > A stream-aligned team is aligned with a simple valuable stream of work\n- They should be as independent of each other as possible\n- They should be able to make decisions without having to coordinate with someone outside the team\n  - Design, Development, Infrastructure, Metrics, Monitoring, Management & Ownership, Testing & QA, UX, Security,\n    Analysis\n- They should make up the majority of teams compared to the other team types below\n\n## Enabling Teams\n- > The primary goal of an Enabling Team is to help Stream-aligned teams to deliver working software in a sustainable,\n    responsible way.\n- Lend expertise to stream-aligned teams and teach them\n\n## Complicated Subsystem Teams\n- Reduce the cognitive load of steam-aligned teams by taking care of complex subdomains\n- Produce APIs that provide complex value to other teams but doesn't require them to need the expertise\n\n## Platform Team\n- To enable stream-aligned teams to deliver work with substantial autonomy\n- They don't just implement everything that the Dev teams want - but curate and carefully shape the environment to\n  meet their needs in the longer term\n","n":0.057}}},{"i":163,"$":{"0":{"v":"Austin Kleon - Steal like an Artist","n":0.378},"1":{"v":"\n# Austin Kleon - Steal like an Artist\n\n![Book cover](https://images-na.ssl-images-amazon.com/images/I/51QsfJKU3SL._SY498_BO1,204,203,200_.jpg){ height: 200px; }\n\n[Amazon](https://www.amazon.co.jp/dp/1523516321)\n\nCurrent position: Chapter 2\n\n## Embrace influence, don't run from it\n> There's nothing new under the sun\n\n[Ecclesiastes 1:9](https://www.biblegateway.com/passage/?search=ecclesiastes+1%3A9&version=ESV) ([[reference.bible.ecclesiastes.01]])\n\n- Things that feel original just have references that you haven't detected yet\n- We don't have to be under pressure to create something entirely original, it's normal to be influenced and inspired\n\n## Studying your artist genealogy\n- Instead of studying a whole art field, study an artist you really love deeply\n- Study three people that artist loved the same way\n- Repeat as often as you can\n\n## Collect ideas!\n- Don't hoard indiscriminately, steal what resonates with your soul\n- Carry a notebok everywhere, jot, doodle around\n- Have a swipe file to keep inspiring things inside\n\n\n## Quotes\n\n- > Art is theft\n\n  Pablo Picasso\n","n":0.089}}},{"i":164,"$":{"0":{"v":"Accelerate","n":1},"1":{"v":"\n# Nicole Forsgren, Jez Humble, Gene Kim - Accelerate, Building and Scaling High Performing Technology Organizations\n\n![Book cover](https://m.media-amazon.com/images/I/51CjXuVck+L.jpg){ height: 200px; }\n\n[Amazon](https://www.amazon.com/Accelerate-Building-Performing-Technology-Organizations/dp/B07BMBYHXL)\n\n**Current position:** Chapter 1\n\n## My Summary\n\n---\n\n## Appendix A - Capabilities to drive improvement\n\n\n### Continuous Delivery\n\n#### Use version control for all production artifacts\n\n#### Automate your deployment process\n\n#### Implement continuous integration\n\n#### Use trunk-based development methods\n\n#### Implement test automation\n\n#### Support test data management\n\n#### Shift left on security\n\n#### Implement continuous delivery (CD)\n\n\n### Architecture\n\n#### Use a loosely coupled architecture\n\n#### Architect for empowered teams\n\n\n### Product and Process\n\n#### Gather and implement customer feedback\n\n#### Make the flow of work visible through the value stream\n\n#### Work in small batches\n\n#### Foster and enable team experimentation\n\n\n### Lean Management and Monitoring\n\n#### Have a lightweight change approval process\n\n#### Monitor across application and infrastructure to inform business decisions\n\n#### Check system health proactively\n\n#### Improve processes and manage work with work-in-process (WIP) limits\n\n#### Visualize work to monitor quality and communicate throughout the team\n\n\n### Culture\n\n#### Support a generative culture (as outlined by Westrum)\n\n#### Encourage and support learning\n\n#### Support and facilitate collaboration among teams\n\n#### Provide resources and tools that make work meaningful\n\n#### Support or embody transformational leadership\n\n\n---\n\n\n## My Questions, Thoughts, Comments\n","n":0.074}}},{"i":165,"$":{"0":{"v":"Inspiration","n":1},"1":{"v":"\nThis is a kind of swipe file where I just store things I like.\n","n":0.267}}},{"i":166,"$":{"0":{"v":"UI Design","n":0.707}}},{"i":167,"$":{"0":{"v":"Little Big Details","n":0.577},"1":{"v":"# Little Big Details\n\nhttps://littlebigdetails.com/\n\n- Page with smart ways how some UIs solve problems\n\n\n## Examples\n- Google Docs: Menu for \"UPPERCASE\", \"lowercase\" and \"Title Case\" are in the same case as the action they do... you can\n  see easily what will happen\n- Google Calendar: Makes smart suggestions for event names depending on the time selected (Dinner, Vacation etc)\n- Trello Pirate Mode: Old cards become cracked and torn\n\n  ![](https://64.media.tumblr.com/e6adec98ee64c17557253a39ad98ef80/tumblr_oijk40or971qea4hso1_400.png){ height: 300px }\n-\n","n":0.12}}},{"i":168,"$":{"0":{"v":"Good Landing Pages","n":0.577},"1":{"v":"# Good Landing Pages\n\n## Pages to browse\n\n- https://land-book.com/\n- https://www.lapa.ninja/\n- https://dribbble.com/\n- https://saaspages.xyz/\n\n## Concrete Examples\n\n### Obsidian Landing Page\n\nhttps://obsidian.md/\n\n![Screenshot](assets/images/obsidian-landing-page.png){width: 480px}\n\n### Deepdwn itch.io page\n\nhttps://billiam.itch.io/deepdwn\n","n":0.224}}},{"i":169,"$":{"0":{"v":"Pixelart","n":1}}},{"i":170,"$":{"0":{"v":"Derek Yu's Pixelart Tutorial","n":0.5},"1":{"v":"# Derek Yu's Pixelart Tutorial\n\nhttps://derekyu.com/makegames/pixelart.html\n","n":0.447}}},{"i":171,"$":{"0":{"v":"Passages and Scenes","n":0.577}}},{"i":172,"$":{"0":{"v":"Randall Flagg","n":0.707},"1":{"v":"# Randall Flagg\n\n> There was a dark hilarity in his face, and perhaps in his heart, too, you would think - and you would be right. It was\n  the face of a hatefully happy man, a face that radiated a horrible handsome warmth, a face to make waterglasses\n  shatter in the hands of tired truck-stop waitresses, to make small children crash their trikes into board fences and\n  then run wailing to their mommies with stake-shaped splinters sticking out of their knees. It was a face guaranteed\n  to make barroom arguments over batting averages turn bloody.\n\nThe Stand, Chapter 23\n\n> He looks like anybody you see on the street. But when he grins, birds fall dead off telephone lines. When he looks at\n  you a certain way, your prostate goes bad and your urine burns. The grass yellows up and dies where he spits. He's\n  always outside. he came out of time. He doesn't know himself. He has the name of a thousand demons. Jesus knocked him\n  into a herd of pigs once. His name is Legion. He is afraid of us. We're inside. He knows magic. He can call the wolves\n  and live in the crows. He's the king of nowhere. But he's afraid of us. He's afraid of... inside.\n\nThe Stand, Chapter 55\n\n\n","n":0.069}}},{"i":173,"$":{"0":{"v":"And yet I smile","n":0.5},"1":{"v":"# And yet I smile\n\nEzekiel's speech from The Walking Dead, Season 8, Episode 4\n\n> We face dire challenge and chance.\n> Our lives... our way of life... it hangs in the balance, a fragile glass standing on a wire, high above the asphalt, as we pray for not one drop of rain under an overcast sky.\n> And yet, I smile.\n> We will fight, and we will bleed...\n> and yet I smile.\n> We shall face men, some cornered into their roles by circumstance, some desperate murderers thrilled by blood. We shall end them all. As is our charge this day. As is our sorrow.\n> And yet, I smile.\n> We will leave our loved ones... to traverse a dangerous road. Rushing out of peace into war.\n> And yet, I smile.\n> For we will mine glory from the rock of struggle this day. We will honor and protect this... this bastion of life in a land of the dead, and we will win. You trust the king... we will win.\n> I smile... I laugh... I rejoice this day... for on this day, we are joined in purpose and vision... we are of a singular heart and mind. On this day, we are one! We are one! We are one! We are one! We are one! We are one!\n\n","n":0.068}}},{"i":174,"$":{"0":{"v":"Misc","n":1}}},{"i":175,"$":{"0":{"v":"Coworking Space for Gamedevs","n":0.5},"1":{"v":"\n# Coworking Space for Gamedevs\n\nRecently I was as [5.6](https://sites.google.com/view/gotenroku/) for a company event.\nIt's a very cool coworking space and it would be cool to have something like a regular \"Open Gamedev Cafe\" in a place\nlike that\n","n":0.167}}},{"i":176,"$":{"0":{"v":"A Creative Fools Manifesto","n":0.5},"1":{"v":"\n# A Creative Fool's Manifesto\n\n**Source:** https://jwest.itch.io/a-creative-fools-manifesto\n\nThe word “fool”  is often likened to labels such as “idiot”, “cretin”, “buffoon”, or “moron”.\nYet the Fool once had a crucial role in the high courts of royalty.\nThey were tasked with inciting laughter and bringing humor to the mundane.\nActing as a bridge between the nobility and the smallfolk, they shifted everyday life into a common and relatable\nperspective.\nThey humanized the world that we all shared. In this way, “fools” were highly revered and respected.\n\nIn the modern, creative world, especially in games, we have artists and architects, writers and actors,\nmusicians and critics, witches and wizards, and so many more.\nEach one of these creators offers a unique role and a unique frame of mind with which to view the world.\nWhy not acknowledge the value of our own fools as well?\n\nIf we take the time to cast aside the negative connotations that society has associated with the foolish,\nwe stand to find a treasure trove of qualities that we can benefit from as creators...\n\n---\n\n## The Fool is simple.\nTheir ways and methods are often inefficient and run counter to what most consider to be “common sense”.\nYet, efficiency and what is considered to be proper practice is hardly ever their concern.\nTheir perspective may, on occasion, reveal a problem to be far less complicated than others believe it to be.\nOr their deviant ways may unveil previously unrecognized solutions. In their work, they tend to look beyond results,\nbeyond any form of performative measurements, and instead allow meaning and purpose to arise from whatever comes to be.\n\n\n## The Fool is humble.\nThey understand their own smallness in the universe and make the most of whatever situation they find themself in.\nThey embrace their own faults and shortcomings, sometimes even celebrate them.\nThey speak truthfully about themselves and others, gently removing the facades created by arrogance and pride,\nexposing the shared humanity in all of us.\n\n\n## The Fool is comedic.\nThey laugh at themselves and at others, sometimes at their own expense.\nWith their light touch and a revelation of the ridiculousness of the world, they unwittingly combat the\npiousness and pompousness that plagues our day-to-day interactions with others.\nThey find joy among the joyless and inspire us to laugh alongside each other, not at each other.\n\n\n## The Fool is playful and free.\nThey are explorative at heart. They often pay absurdly acute attention to the seemingly mundane,\nperhaps bringing something new that was previously  overshadowed to light.\nThey are free spirited in their ways, flowing in whichever way the river of creativity takes them,\nas opposed to following a regimented and formulaic set of rules and what has become standardized success.\nThey show us the cages that we have put ourselves in.\n\n\n---\n\nThe Fool is the child in all of us, taking over the driver’s seat for a change.\nAs we all grow older, we lose touch with our childhood innocence and playfulness,\nour small, simplistic views of this world we’ve been dropped into, and it’s replaced\nwith concerns about deadlines, finances, career prospects, and arguing over which game engine is the best.\n\nPerhaps, then, the Fool shouldn’t be writing this manifesto.\nTo what purpose will it serve the Fool to read a manifesto they will more than\nlikely not bother to follow in the first place?\n\nYet the Fool will try, exploring with whatever experience they have.\nThe Fool will learn, reflecting upon the failures they encounter.\nThe Fool will laugh, acknowledging their own shortcomings.\nAnd the Fool will try again.\n\nThe world is a beautiful place, filled with joy, sadness, and mystery.\nYet our modern- day ideals have painted it over with the dark colors of solemnity.\nAs creators, we must try our best to seek out and reflect upon the ambiguous elements that touch us in unknown ways.\nThe Fools remind us of the simpler, more immediate experiences we have once enjoyed, and by following their example -\nby viewing ourselves and our work through their simplistic, humble, comedic, and playful lenses -\nwe too might discover something the rest of the world willfully overlooks.\nThe effect that it will have on us all, might pleasantly surprise you. And the laughter will no doubt follow.\n","n":0.039}}},{"i":177,"$":{"0":{"v":"Gamedev","n":1}}},{"i":178,"$":{"0":{"v":"RujiK the Comatose","n":0.577},"1":{"v":"\n# RujiK the Comatose\n\n![Crossbreeding Screenshot](assets/images/rujik-monster-crossbreeding.png){ height: 323px }\n\n- Procedural Monsters\n- Procedural animations\n- Crossbreeding\n\n- ![Twitter Icon](assets/twitter-icon.svg){height: 1rem} [@TheRujiK](https://twitter.com/TheRujiK)\n\n- ![Youtube Icon](assets/youtube-icon.svg){height: 1rem} [Youtube Channel](https://www.youtube.com/channel/UCah7IyEzRnRdttwDGDdy_gw)\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/a87tB__3KEs\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n","n":0.167}}},{"i":179,"$":{"0":{"v":"ABA Games","n":0.707},"1":{"v":"# ABA Games\n\n- Many mini games\n\nhttp://www.asahi-net.or.jp/~cs8k-cyu/\n","n":0.408}}},{"i":180,"$":{"0":{"v":"Character Building","n":0.707}}},{"i":181,"$":{"0":{"v":"All My Fantasy Children","n":0.5},"1":{"v":"# All My Fantasy Children\n\nhttp://oneshotpodcast.com/interview-discussion/all-my-fantasy-children/\n\n- [Samuel Gourd](https://allmyfantasychildren.fandom.com/wiki/Samuel_Gourd)\n  - Just lost the annual pumpkin growing contest which would have made him king in a pumpkin themed steam punk town of\n    halflings\n  - Young wood-elf with slight delusions (think being cared for by many beautiful girls) about what it means to be\n    \"The Great Pumpkin\"\n  - Lost to Chad Butternu\n  - Has a child he knows nothing about which was sent away with her mother to not cause trouble to the\n- [Jesse 'Slip' Willis](https://allmyfantasychildren.fandom.com/wiki/Slip_Willis)\n  - A strong bard woman from a nothern artic tribe who disguises in furs as a man\n  - Wants to make legends so she can write songs about herself\n  - She goes into places, does halfling throwing, pro-wrestling\n","n":0.091}}},{"i":182,"$":{"0":{"v":"16 Personalities","n":0.707},"1":{"v":"# 16 Personalities\n\nhttps://www.16personalities.com/personality-types\n\nDetailed descriptions of the 16 (32) Myers–Briggs Personality types.\n","n":0.302}}},{"i":183,"$":{"0":{"v":"Pixelart Styles","n":0.707},"1":{"v":"# Pixelart Styles\n\n## Kalip\n\n![Twitter Icon](assets/twitter-icon.svg){height: 1rem} [realkalip](https://twitter.com/realkalip)\n\n![](assets/images/kalip-pixelart.png){ height: 250px }\n\n## Gordon Zuchhold\n\n![Twitter Icon](assets/twitter-icon.svg){height: 1rem} [AffinityPlay](https://twitter.com/AffinityPlay)\n\n![](assets/images/1_bit_city.png){ height: 500px }\n","n":0.236}}},{"i":184,"$":{"0":{"v":"Pixelart Palettes","n":0.707},"1":{"v":"# Pixelart Palettes\n\n## Mirru's Palettes\n\n![](assets/images/mirru-pixelart-palettes.png)\n\n![Twitter Icon](assets/twitter-icon.svg){height: 1rem} [Source](https://twitter.com/mirrutatep/status/1532839180467838978)\n","n":0.354}}},{"i":185,"$":{"0":{"v":"Art","n":1},"1":{"v":"# Art\n\n1. https://www.artbreeder.com/\n  > AI remixing images\n","n":0.378}}},{"i":186,"$":{"0":{"v":"Finished Media","n":0.707}}},{"i":187,"$":{"0":{"v":"2023","n":1},"1":{"v":"# Finished in 2023\n\n## 2022-01-09 The Walking Dead\n\n## 2022-01-10 The Hero of Ages (Brandon Sanderson, Audiobook)\n\n## 2022-01-13 Bleach: Thousand-Year Blood War (Part 1)\n\n## 2022-01-17 The Alloy of Law (Brandon Sanderson, Audiobook)\n\n## 2022-01-23 Momodora: Reverie Under The Moonlight\n\n## 2022-01-28 Shadows of Self (Brandon Sanderson, Audiobook)\n\n## 2022-02-10 The Bands of Mourning (Brandon Sanderson, Audiobook)\n\n## 2022-02-18 Arcanum Unbounded - Mistborn: Secret History (Brandon Sanderson, Audiobook)\n\n## 2022-02-19 David Farley - Modern Software Engineering\n\n## 2022-02-23 Mario vs Donkey Kong (GBA)\n\n## 2022-02-28 Danganronpa 2\n\n## 2022-03-04 Fairy Tail\n\n## 2022-03-08 Made in Abyss\n\n## 2022-03-11 Turnip Boy commits Tax Evasion\n\n## 2022-03-13 Danganronpa the Animation\n\n## 2022-03-18 Danganronpa 3 Anime\n\n## 2022-03-25 My Hero Academia Season 6\n\n## 2022-03-31 Mai Agare\n\n## 2022-04-04 Austin Kleon - Keep Going\n\n## 2022-04-10 The Lost Metal (Brandon Sanderson, Audiobook)\n\n## 2022-04-10 Pokemon Fire Red\n","n":0.089}}},{"i":188,"$":{"0":{"v":"2022","n":1},"1":{"v":"\n# Finished in 2022\n\n## 2022-01-07 Inscryption\n\n## 2022-01-23 Show Your Work (Austin Kleon)\n\n## 2022-02-13 Space Brothers\n\n## 2022-02-22 The Power of Habit (Charles Duhigg)\n\n## 2022-02-24 Rewatch: JoJo's Bizarre Adventure - Part 2\n\n## 2022-03-21 Sovereign (Jeff Hirsch) - Audiobook\n\n[Audible](https://www.audible.com/pd/Sovereign-Audiobook/B07M79GGYT)\n\n## 2022-03-26 The Dispatcher (John Scalzi) - Audiobook\n\n[Audible](https://www.audible.com/pd/The-Dispatcher-Audiobook/B01KKPH1VA)\n\n\n## 2022-03-30 Platinum End - Anime\n\n## 2022-04-04 Attack on Titan (Final Season Part 2)\n\n## 2022-04-10 Shimobee\n\n## 2022-04-17 Come Come Everybody\n\n## 2022-04-24 Rewatch: JoJo's Bizarre Adventure - Part 3\n\n## 2022-05-04 How I Met Your Mother\n\n## 2022-05-06 Super Mario Sunshine\n\n## 2022-06-15 Rewatch: Jojo's Bizzare Adventure - Part 4\n\n## 2022-06-16 Neon Genesis Evangelion (Re-Watch)\n- Also End of Evangelion and the first three movies of the new movie series - that's enough for now\n\n## 2022-07-23 Thermae Romae Novae\n\n## 2022-07-24 Boku no Daisuki na Tsuma\n\n## 2022-07-28 Rewatch: Jojo's Bizzare Adventure - Part 5\n\n## 2022-08-13 Cells at Work!\n\n## 2022-08-20 The Stand (audiobook)\n\n## 2022-08-31 Stranger Things Season 1-4\n\n## 2022-09-19 EXAPUNKS\n\n## 2022-10-04 Hacknet\n\n## 2022-10-10 Summertime Rendering\n\n## 2022-10-21 Ach du Schreck! AD(H)S (Arno Backhaus)\n\n## 2022-11-26 Coffee talk\n\n## 2022-11-28 The Final Empire (Audiobook)\n\n## 2022-11-30 Brooklyn Nine Nine\n\n## 2022-12-18 JoJo's Bizarre Adventure - Part 6\n\n## 2022-12-25 Spy Family\n\n## 2022-12-25 Rick and Morty (Season 6)\n","n":0.074}}},{"i":189,"$":{"0":{"v":"Faith and Work","n":0.577},"1":{"v":"# Faith and Work\n\n## Resources\n- TGC13 Faith at Work Post-Conference\n  - [[reference.literature-notes.videos.tim-keller-redefining-work]]\n- TGC Course - A Practical Theology of Work\n  - https://www.thegospelcoalition.org/course/practical-theology-work/\n\n## Currently Listening To\n\n![Youtube Icon](assets/youtube-icon.svg){height: 1rem} [TGC13 Faith at Work Post-Conference Playlist](https://www.youtube.com/watch?v=fGH5bhUwMB4&list=PLPwoFK1MBpm5-Y3LpZONZnkCy450tryga)\n\n\n## Other Resources\n- [Theology of Work Project](https://www.theologyofwork.org/)\n  > The Theology of Work Project (TOW) is an independent, international organization dedicated to researching, writing, and distributing materials with a biblical perspective on non-church workplaces.\n\n  - They have a whole Bible Commentary with that focus\n- [The Washington Institute for Faith, Vocation, and Culture](https://washingtoninst.org/)\n  > The Washington Institute for Faith, Vocation, and Culture provides a place where Christians think carefully about issues worth pondering. We want our authors to delve into questions that we had not quite thought to ask, or to ask in that way, but that we wish we had asked.\n\n- Every Good Endeavor\n- Garden City\n- The Call (Os Guiness)\n","n":0.084}}},{"i":190,"$":{"0":{"v":"Language about Work","n":0.577},"1":{"v":"# Language about Work\n\nSource: ![Youtube Icon](assets/youtube-icon.svg){height: 1rem} [Rethinking Work - Katherine Alsdorf and Dave Kiersznowski](https://www.youtube.com/watch?v=B-OHP3drPdE) (From 22:37)\n\n## Full-time vs non full-time ministry\n\n> He said to them: I am so excited about you because today is the beginning of your adult life with Christ. It's a different world for you.\n>\n> And then he went on to say this: What I'm really excited about... My guess is if I look ten years down the road probably 10% of you are gonna go into full-time Christian work.\n>\n> And when he said that my heart just broke for the other 90 % in the room.\n>\n> He didn't intend to say it but what he said to them was basically: For you all God has got kind of a secondary plan. You aren't image bearers fully, close maybe but not fully.\n\n\n## \"Moving from success to significance\"\n\n> When you work hard in the work place you can handle success but you have also to do something that matters (i.e. matters to God)\n\nAs if they were mutually exclusive\n\n\n## \"Kingdom purposes\"\n\nAsking a Christian building owner: have you ever thought of using your building for Kingdom purposes\n\nBasically saying what you do most of your time is fine but it's not kingdom purposes\n\n## \"We do good things at work but...\"\n\nWe often talk as if your work didn't have intrinsic value. That's not true. We're image bearers in our job and we don't need to justify anything beyond that.\n\n## \"I want to do something purposeful in my job...\"\n\nYoung people are taught that purpose can only be found in NGOs of professions that are social\n","n":0.062}}},{"i":191,"$":{"0":{"v":"Development","n":1}}},{"i":192,"$":{"0":{"v":"Ssh","n":1}}},{"i":193,"$":{"0":{"v":"How To","n":0.707}}},{"i":194,"$":{"0":{"v":"Get Fingerprint","n":0.707},"1":{"v":"# Get Fingerprint\n\n## SHA256\n\n```sh\n$> ssh-keygen -lf ~/.ssh/id_rsa\n2048 SHA256:0zrspFNBJWeJjMtP7Q0oGF7KfloFyKRRQfUSm0Qqi18 id_rsa (RSA)\n```\n\n- Github\n\n## MD5\n\n```sh\nssh-keygen -lf -E md5 ~/.ssh/id_rsa\n2048 MD5:07:b4:00:a4:65:ef:44:89:05:84:60:0c:c9:b2:36:5e no comment (RSA)\n```\n\n- Circle CI\n\n","n":0.213}}},{"i":195,"$":{"0":{"v":"Shell","n":1}}},{"i":196,"$":{"0":{"v":"How To","n":0.707}}},{"i":197,"$":{"0":{"v":"Replace String in many files","n":0.447},"1":{"v":"\n# Replace String in many files\n\n```sh\nsed -i '.bak' 's/foo/bar/g' *\n```\n\nwill replace `foo` with `bar`.\n\n`-i '.bak'` is necessary on macOS and will create backup files (ending in `.bak`) before replacing.\n\n## Remove the backups\n\n```sh\nfind . | grep .bak | xargs rm\n```\n","n":0.16}}},{"i":198,"$":{"0":{"v":"Jquery","n":1}}},{"i":199,"$":{"0":{"v":"How To","n":0.707}}},{"i":200,"$":{"0":{"v":"Add Children","n":0.707},"1":{"v":"# Add Children\n\n```js\n$('.inner').append('<p>Test</p>');\n$('.inner').prepend('<p>Test</p>');\n```\n","n":0.577}}},{"i":201,"$":{"0":{"v":"Vue","n":1}}},{"i":202,"$":{"0":{"v":"Libs","n":1}}},{"i":203,"$":{"0":{"v":"Vuetify","n":1}}},{"i":204,"$":{"0":{"v":"Troubleshooting","n":1}}},{"i":205,"$":{"0":{"v":"Testing: Multiple instances of Vue detected","n":0.408},"1":{"v":"\n# Testing: Multiple instances of Vue detected\n\nWhen trying to initialize vuetify for unit tests using testing-library and you try to use the local vue instance to\ninitialize vuetify following error will appear:\n\n```\n[Vuetify] Multiple instances of Vue detected\n```\n\nYou have to **globally** initialize Vuetify and pass a new vuetify instance to the render function of testing-library.\n\n```js\n// Initialization (once)\nimport Vue from 'vue';\nimport Vuetify from 'vuetify';\n\nVue.use(Vuetify);\n```\n\n```js\n// in tests\n\nimport Vuetify from 'vuetify';\nimport { render } from '@testing-library/vue';\n\nrender(Component, {\n  vuetify: new Vuetify(),\n})\n\n```\n","n":0.115}}},{"i":206,"$":{"0":{"v":"Storybook","n":1}}},{"i":207,"$":{"0":{"v":"How To","n":0.707}}},{"i":208,"$":{"0":{"v":"Use vue-i18n with toolbar","n":0.5},"1":{"v":"\n# Use vue-i18n with toolbar\n\nConfirmed to work with:\n- Storybook v6\n- Vue 2\n- Vue-I18n v7\n\nThis was quite tricky since Storybook and the Single File Components for some reason use different vue-i18n instances.\n\n```js\nimport VueI18n from 'vue-i18n';\n\nconst i18n = new VueI18n({\n  // ...\n})\n\n// Setup toolbar like explained in https://storybook.js.org/docs/vue/essentials/toolbars-and-globals#advanced-usage\nexport const globalTypes = {\n  locale: {\n    name: 'Locale',\n    description: 'Internationalization locale',\n    defaultValue: 'en',\n    toolbar: {\n      icon: 'globe',\n      items: [\n        { value: 'en', right: '🇺🇸', title: 'English' },\n        { value: 'ja', right: '🇯🇵', title: 'Japanese' },\n      ],\n    },\n  },\n};\n\n// Locale Decorator\nconst Locale = (story, context) => {\n  i18n.locale = context.globals.locale;\n\n  return {\n    components: { story },\n    created() {\n      // https://github.com/dlucian/vuejs-storybook-i18n/issues/1#issuecomment-587607439\n      this.$root._i18n = this.$i18n;\n    },\n    template: `\n      <story />\n    `,\n    i18n,\n  };\n};\n\nexport const decorators = [\n  Locale,\n];\n```\n","n":0.091}}},{"i":209,"$":{"0":{"v":"Use Multiple Decorators","n":0.577},"1":{"v":"\n# Use Multiple Decorators\n\nDecorators will be applied in order of definition - later ones are wrapped outside.\n\n```js\nexport const decorators = [\n  Inner, Outer\n];\n```\n","n":0.209}}},{"i":210,"$":{"0":{"v":"Add Vue Plugins","n":0.577},"1":{"v":"\n# Add Vue Plugins\n\nYou can add things to the vue instance via the decorators defined in the\n[preview.js file](https://storybook.js.org/docs/react/configure/overview#configure-story-rendering).\n\n```js\nexport const decorators = [(story) => ({\n  components: { story },\n  template: '<v-app><story /></v-app>',\n  i18n,\n  vuetify,\n})];\n```\n","n":0.174}}},{"i":211,"$":{"0":{"v":"Component Libraries","n":0.707},"1":{"v":"# Component Libraries\n\n![[reference.dev.react.component-libraries#headless-ui:#*]]\n","n":0.577}}},{"i":212,"$":{"0":{"v":"Rust","n":1}}},{"i":213,"$":{"0":{"v":"How To","n":0.707}}},{"i":214,"$":{"0":{"v":"Use Single Threaded Scheduler with Tokio","n":0.408},"1":{"v":"```rs\nuse warp::Filter;\n\n// A simple hello world endpoint\nasync fn hello_world() -> Result<impl warp::Reply, warp::Rejection> {\n    Ok(\"Hello, world!\")\n}\n\n// Use tokio::main with current_thread flavor\n#[tokio::main(flavor = \"current_thread\")]\nasync fn main() {\n    // Create a route for GET /\n    let route = warp::get().and_then(hello_world);\n\n    // Run the server\n    warp::serve(route).run(([127, 0, 0, 1], 3030)).await;\n}\n```\n","n":0.147}}},{"i":215,"$":{"0":{"v":"Run Long Sync Code inside Async Function","n":0.378},"1":{"v":"# Run Long Sync Code inside Async Function\n\nUse `spawn_blocking` on Tokio runtime.\n\n```rs\nuse tokio::task;\n\n// A long running sync function\nfn fib(n: u64) -> u64 {\n    match n {\n        0 => 1,\n        1 => 1,\n        n => fib(n - 1) + fib(n - 2),\n    }\n}\n\n// An async wrapper around the sync function\nasync fn async_fib(n: u64) -> u64 {\n    // Spawn a blocking task that calls the sync function\n    let result = task::spawn_blocking(move || fib(n)).await;\n    result.unwrap()\n}\n\n#[tokio::main]\nasync fn main() {\n    let n = async_fib(10).await;\n    println!(\"fib(10) = {}\", n);\n}\n```\n\n- `spawn_blocking` is intended for non-async operations that eventually finish on their own.\n- if you are using the single threaded runtime, spawn_blocking will still spawn additional threads for blocking\noperations. The current-thread scheduler’s single thread is only used for asynchronous code¹.\n\nSource: Conversation with Bing, 3/22/2023\n(1) spawn_blocking in tokio::task - Rust. https://docs.rs/tokio/latest/tokio/task/fn.spawn_blocking.html Accessed 3/22/2023.\n","n":0.086}}},{"i":216,"$":{"0":{"v":"Code Snippets","n":0.707}}},{"i":217,"$":{"0":{"v":"rd2d Pool in Warp","n":0.5},"1":{"v":"# rd2d Pool in Warp\n\n```rs\n// type PoolType = Pool<ManagerType>\n\nfn with_pool(pool: PoolType) {\n   warp::any().map(move || pool.clone())\n}\n\n#[tokio::main]\nasync fn main() {\n    let pool = create_pool();\n\n    // Pool must be cloned everytime but the last time\n    let api1 = warp::path(\"data\")\n        .and(with_pool(pool.clone()))\n        .and_then(|pool: Pooltype| async move {\n            let conn = pool.get().unwrap();\n            // Do something\n        });\n    let api2 = warp::path(\"data2\")\n        .and(with_pool(pool))\n        .and_then(|pool: Pooltype| async move {\n            let conn = pool.get().unwrap();\n            // Do something\n        });\n\n    warp::serve(api1.or(api2))\n        .run(([127, 0, 0, 1], 3030))\n        .await;\n}\n```\n","n":0.115}}},{"i":218,"$":{"0":{"v":"In-Memory r2d2 Pool","n":0.577},"1":{"v":"# In-Memory r2d2 Pool\n\nMade in collaboration with Bing\n\n```rs\nuse r2d2::{ManageConnection, Pool};\nuse std::collections::HashMap;\nuse std::sync::{Arc, Mutex};\n\n// - `Mutex` type provides thread-safe access to the data.\n//   Since r2d2 allows multiple threads to use the same connection pool, and each connection may be used by different\n//   threads at different times, it is important to ensure that concurrent access to the data does not cause data races\n//   or corruption. The Mutex type provides a lock-based synchronization mechanism that ensures only one thread can\n//   access the data at a time.\n// - The `Arc` provides shared ownership of the data.\n//   Since r2d2 allows connections to be cloned and returned to the pool when they are dropped, it is important to\n//   ensure that the data is not dropped prematurely when one of the clones goes out of scope. The Arc type provides a\n//   reference-counted pointer that keeps track of how many owners there are for the data and only drops it when there\n//   are no more owners left.\ntype Data = Arc<Mutex<HashMap<String, String>>>;\n\n// A struct that implements ManageConnection for Data\nstruct DataManager {\n    data: Data,\n}\n\nimpl DataManager {\n    fn new() -> Self {\n        DataManager {\n            data: Arc::new(Mutex::new(HashMap::new())),\n        }\n    }\n}\n\n#[derive(Debug)]\nenum ConnectionError {\n    LockError,\n}\n\nimpl std::fmt::Display for ConnectionError {\n    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {\n        match self {\n            ConnectionError::LockError => write!(f, \"LockError\"),\n        }\n    }\n}\n\nimpl std::error::Error for ConnectionError {}\n\nimpl ManageConnection for DataManager {\n    type Connection = Data;\n    type Error = ConnectionError;\n\n    fn connect(&self) -> Result<Self::Connection, Self::Error> {\n        Ok(self.data.clone())\n    }\n\n    // Check if the connection is valid by trying to lock it\n    fn is_valid(&self, conn: &mut Self::Connection) -> Result<(), Self::Error> {\n        match conn.lock() {\n            Ok(_) => Ok(()),\n            Err(_e) => Err(ConnectionError::LockError),\n        }\n    }\n\n    // Do nothing when the connection is recycled\n    fn has_broken(&self, _conn: &mut Self::Connection) -> bool {\n        false\n    }\n}\n\n// A function that creates a connection pool\nfn create_pool() -> Pool<DataManager> {\n    // Create a pool using the custom manager\n    Pool::builder()\n        .max_size(10)\n        .build(DataManager::new())\n        .unwrap()\n}\n```\n\n- `Mutex` type provides thread-safe access to the data\n  Since r2d2 allows multiple threads to use the same connection pool, and each connection may be used by different\n  threads at different times, it is important to ensure that concurrent access to the data does not cause data races or\n  corruption. The Mutex type provides a lock-based synchronization mechanism that ensures only one thread can access the\n  data at a time.\n- The `Arc<Mutex<HashMap<String, String>>>` type wraps the Mutex in an Arc to provide shared ownership of the data. Since r2d2 allows connections to be cloned and returned to the pool when they are dropped, it is important to ensure that the data is not dropped prematurely when one of the clones goes out of scope. The Arc type provides a reference-counted pointer that keeps track of how many owners there are for the data and only drops it when there are no more owners left.\n\nThese choices allow us to implement a simple and safe in-memory connection manager for r2d2 that can handle concurrent and dynamic usage patterns.\n","n":0.046}}},{"i":219,"$":{"0":{"v":"School of Rust","n":0.577},"1":{"v":"# School of Rust\n\nhttps://rust-school.io/\n\n> Welcome to School of Rust, an educational website with lessons and tutorials to help people learn the Rust programming language.\n>\n> Rust can be hard to learn, but it is beloved by those who use it (including myself). My goal is to provide a variety of lessons to help you get coding proficiently in Rust.\n>\n> Let's create fast, secure, and high quality software together!\n","n":0.122}}},{"i":220,"$":{"0":{"v":"Ruby","n":1}}},{"i":221,"$":{"0":{"v":"Libs","n":1}}},{"i":222,"$":{"0":{"v":"Rubocop","n":1}}},{"i":223,"$":{"0":{"v":"How To","n":0.707}}},{"i":224,"$":{"0":{"v":"Disable Cops in Source Code","n":0.447},"1":{"v":"\n# Disable Cops in Source Code\n\n## In an area\n```rb\n# rubocop:disable Layout/LineLength, Style/StringLiterals\n# [...]\n# rubocop:enable Layout/LineLength, Style/StringLiterals\n```\n\n## On the same line\n```rb\nfor x in (0..19) # rubocop:disable Style/For\n```\n","n":0.196}}},{"i":225,"$":{"0":{"v":"Rails","n":1}}},{"i":226,"$":{"0":{"v":"How To","n":0.707}}},{"i":227,"$":{"0":{"v":"Test Flash Messages in Request Specs","n":0.408},"1":{"v":"# Test Flash Messages in Request Specs\n\n```rb\n# post some request\n\nexpect(response.request.flash[:success]).to eq 'My Success message'\n```\n","n":0.267}}},{"i":228,"$":{"0":{"v":"Test File Uploads in Request Specs","n":0.408},"1":{"v":"# Test File Uploads in Request Specs\n\nIt's not well documented but you can use `StringIO` objects in `Rack::Test::UploadedFile`.\n\n```rb\npost import_path, params: {\n  file: Rack::Test::UploadedFile.new(\n    StringIO.new(file_content),\n    original_filename: 'imported_data.csv'\n  )\n}\n```\n","n":0.192}}},{"i":229,"$":{"0":{"v":"Deactivate STI in Migrations","n":0.5},"1":{"v":"\n# Deactivate STI in Migrations\n\nWhen creating a Migration model class for a class with a `type` column you need to turn off STI otherwise Rails will\nlook for non-existing subclasses of the Migration model class.\n\nThis can be done by setting `inheritance_column` to a non-existing column.\n\n```rb\nclass SomeMigration < ActiveRecord::Migration[6.1]\n  class MigrateModelWithSTI < ActiveRecord::Base\n    self.table_name = 'model_with_sti_table'\n    self.inheritance_column = :_type_disabled\n  end\n\n  # ...\nend\n```\n","n":0.129}}},{"i":230,"$":{"0":{"v":"Create a Module with Concern","n":0.447},"1":{"v":"\n```rb\nmodule M\n  extend ActiveSupport::Concern\n\n  included do\n    scope :disabled, -> { where(disabled: true) }\n  end\n\n  class_methods do\n    ...\n  end\nend\n```\n","n":0.236}}},{"i":231,"$":{"0":{"v":"How To","n":0.707}}},{"i":232,"$":{"0":{"v":"Install old Ruby on M1 Mac","n":0.408},"1":{"v":"\n# Install old Ruby on M1 Mac\n\nThis error:\n```sh\nerror: implicit declaration of function 'ffi_prep_closure' is invalid in C99\n```\n\nCan be solved by\n```sh\nRUBY_CFLAGS=-DUSE_FFI_CLOSURE_ALLOC asdf install ruby 2.5.9\n```\n","n":0.204}}},{"i":233,"$":{"0":{"v":"Handle JSON","n":0.707},"1":{"v":"# Handle JSON\n\n## Read JSON File\n```rb\nrequire 'json'\n\nJSON.parse File.read('plugins.json')\n```\n","n":0.354}}},{"i":234,"$":{"0":{"v":"Handle CSV","n":0.707},"1":{"v":"\n# Handle CSV\n\n## Read a CSV as array of arrays\n\n```rb\nrequire 'csv'\n\ndata = CSV.read 'filename.csv'\n```\n\n## Read with symbolized headers\n```rb\ncsv_content = <<~CSV\n  Project,Description,\"Start Time\",\"End Time\",\"Duration (h)\"\n  \"Project A\",\"Refactor\",\"18:43\",\"19:28\",\"0:45\"\nCSV\ndata = CSV.parse csv_content, headers: true, header_converters: :symbol\n\n# data[:project]\n# data[:start_time]\n# data[:duration_h]\n```\n","n":0.167}}},{"i":235,"$":{"0":{"v":"Unit Tests","n":0.707},"1":{"v":"# Unit tests in Ruby\n\n[`Test/Unit`](https://test-unit.github.io/test-unit/en/Test/Unit.html) is\nbuilt-in into Ruby.\n\n```rb\nrequire 'test/unit'\n\nclass TestSomeFeature < Test::Unit::TestCase\n  def test_one_thing\n    assert_equal expected, actual, 'message'\n  end\nend\n```\n\n## Assertions\n```rb\ndef test_many_things\n  assert_equal expected, actual, 'it failed'\n  assert_true actual, 'was not true'\n  assert_false actual, 'was not false'\n  assert_nil actual, 'was not nil'\n  assert_compare expected, :>, actual, 'was not greater'\n  assert_include collection, expect, 'did not include'\n  assert_instance_of klass, object, 'was not instance of'\n  assert_match /pattern/, string, 'did not match'\n\n  assert_not_equal expected, actual, 'was equal'\n  # ...\nend\n```\n","n":0.116}}},{"i":236,"$":{"0":{"v":"Script Template","n":0.707},"1":{"v":"\n```rb\n#!/usr/bin/env ruby\n\ndef main\n  argument = ARGV.shift\nend\n\nmain if __FILE__ == $PROGRAM_NAME\n```\n","n":0.316}}},{"i":237,"$":{"0":{"v":"React","n":1}}},{"i":238,"$":{"0":{"v":"Designing Component Libraries","n":0.577},"1":{"v":"# Designing Component Libraries\n\n**Source:** [Gabe's blog - Notes on maintaining an internal React component library](https://www.gabe.pizza/notes-on-component-libraries/)\n\n## Interface\n- Components should be blackboxes for the parents who use them\n  - Props in -> Rendered content out\n- Design components with orthogonal props that allow to represent all valid display states\n  - If possible [[ideas-thoughts-beliefs.software-development.illegal-states-should-be-unrepresentable]]\n- Don't extend base props - only offer the minimal real interface you need\n  - This is also true for pass-through override props to modify internal subcomponents like `ButtonProps`\n    - Offer minimal interfaces for them too, don't just use the original full props type\n- Don't use spread (`...props`) to blanket forward props from above\n- If possible don't offer class/style props\n  - Use something explicit like `UNSAFE_className` / `UNSAFE_style` to at least give an escape hatch but make it easy to\n    find and maybe use a linter for it\n- Use Context internally for linking dependent props\n  - Example: Select Group parent that has the selected state as context and Select Group item that consumes it\n- Group components that belong together as a single object - the user will know they are supposed to be used together\n  ```ts\n  export const Select = {\n    Menu: SelectMenu,\n    Option: SelectOption,\n    // ...\n  };\n  ```\n## Layout\n- Don't let components position or add external margins to themselves\n  - This is the parent's responsibility\n- Components should take up all horizontal space by default\n  - Container components are the exception, since they usually span to fit the width of their contents (or up to the\n    parent containers width)\n\n## Release & Maintenance\n- Use proper semantic versioning - apply deprecations only at major version bumps\n- Use codemods if possible to automate source code changes\n  - Make sure codemods are idempotent\n- Statically analyze source code bases using the library (parsing code into ASTs etc) to know how the components are\n  used to get interesting insights\n- Use visual regression tests rather than unit tests\n  - This can be annoying because of OS rendering differences\n\n## Other\n- Don't write your own abstractions over browser differences - there are good libraries for that\n","n":0.055}}},{"i":239,"$":{"0":{"v":"Component Libraries","n":0.707},"1":{"v":"# Component Libraries\n\n## Reach UI\nhttps://reach.tech/\n\nComponents as of 2022-07-28:\n- Accordion\n- Alert\n- Alert Dialog\n- Checkbox\n- Combobox\n- Dialog (Modal)\n- Disclosure[^1]\n- Listbox\n- Menu Button\n- Portal\n- Slider\n- Tabs\n- Tooltip\n\n## Headless UI\nhttps://headlessui.com/\n\nComponents as of 2022-07-28:\n- Menu (Dropdown)\n- Listbox (Select)\n- Combobox (Autocomplete)\n- Switch (Toggle)\n- Disclosure [^1]\n- Dialog (Modal)\n- Popover\n- Radio Group\n- Tabs\n- Transition\n\n## Radix Primitives\nhttps://www.radix-ui.com/\n\nComponents as of 2022-07-28:\n- Accordion\n- Alert Dialog\n- Aspect Ratio (display at aspect ratio)\n- Avatar\n- Checkbox\n- Collapsible\n- Context Menu\n- Dialog\n- Dropdown Menu\n- Hover Card\n- Label (for controls)\n- Navigation Menu\n- Popover\n- Progress\n- Radio Group\n- Scroll Area\n- Select\n- Separator\n- Slider\n- Switch\n- Tabs\n- Toast\n- Toggle\n- Toggle Group\n- Toolbar\n- Tooltip\n\n## React ARIA\nhttps://react-spectrum.adobe.com/react-aria/\n\nHooks for building ARIA compatible components from bottom up\n\n\n[^1] Spoiler Tag\n","n":0.098}}},{"i":240,"$":{"0":{"v":"Component Composition","n":0.707},"1":{"v":"# Component Composition\n\n## What is a good component?\n- It can bew read and understand at a glance\n- It has a clear and easy to understand name\n- It does not do unrelated things\n\n## Kinds of components\n- Simple components: Props -> Output\n- Container components: Props, Children -> Output\n  - Performance note: Children will not be rerendered when component is rerendered\n\n- Content:\n  - Components that implement content directly (not much composition)\n  - Components that compose components\n\n## When to extract Components\n- Not right away! First write it down without extracting anything\n- When the component gets too big (subjective, but more than one screen page?)\n\n- When state does not belong in this component but is a separate concern\n\n\n","n":0.094}}},{"i":241,"$":{"0":{"v":"Python","n":1}}},{"i":242,"$":{"0":{"v":"Libs","n":1}}},{"i":243,"$":{"0":{"v":"Boto3","n":1}}},{"i":244,"$":{"0":{"v":"How To","n":0.707}}},{"i":245,"$":{"0":{"v":"Query from a DynamoDB Table","n":0.447},"1":{"v":"\n# Query from a DynamoDB Table\n\n[Boto3 Docs](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/dynamodb.html#DynamoDB.Table.query)\n\n```py\nimport boto3\nfrom boto3.dynamodb.conditions import Key\n\ndynamodb = boto3.resource('dynamodb')\ntable = dynamodb.Table('<TABLE_NAME>')\n\nresult = []\nlast_evaluated_key = None\n\nwhile True:\n    additional_query_args = {}\n    if last_evaluated_key:\n        additional_query_args['ExclusiveStartKey'] = last_evaluated_key\n\n    response = table.query(\n        KeyConditionExpression=(\n            Key('hash_key_attribute').eq('some_value') and\n            Key('range_key_attribute').begins_with('some_prefix')\n        ),\n        **additional_query_args\n    )\n\n    result.extend(response['Items'])\n    last_evaluated_key = response.get('LastEvaluatedKey', None)\n    if not last_evaluated_key:\n        break\n```\n\n## Additional important arguments\n- `ConsistentRead`\n- `IndexName`\n- `Limit`\n- `ScanIndexForward`: Is `true` by default, set to `false` to get results in reverse order\n\n## Conditions\n[Boto 3 Docs](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/customizations/dynamodb.html#dynamodb-conditions)\n\n### Usable with keys and attributes\n- `begins_with(value)`\n- `between(low_value, high_value)`: Is same as `gte(low_value) and lte(high_value)`\n- `eq(value)`\n- `gt(value)`\n- `gte(value)`\n- `lt(value)`\n- `lte(value)`\n\n## Usable only with attributes\n- `attribute_type(type)`\n- `contains(value)`\n- `exists()`\n- `is_in(value)`\n- `ne()`: Not Equal\n- `not_exists()`\n- `size()`: Interprets the atribute condition with regard to size - needs another condition\n  - Ex: `name.size() and name.lte(20)`\n","n":0.092}}},{"i":246,"$":{"0":{"v":"pytest","n":1},"1":{"v":"# pytest\n\n![[reference.dev.python.libs.pytest.how-to.parametrize-tests]]\n\n![[reference.dev.python.libs.pytest.how-to.parametrize-fixtures]]\n\n![[reference.dev.python.libs.pytest.how-to.use-fixtures]]\n","n":0.707}}},{"i":247,"$":{"0":{"v":"Troubleshooting","n":1}}},{"i":248,"$":{"0":{"v":"Import file mismatch","n":0.577},"1":{"v":"\n# Import file mismatch\n\n## Error message\n```\nimport file mismatch:\nimported module 'query_test' has this __file__ attribute:\n  /root/project/spec/model/query_test.py\nwhich is not the same as the test file we want to collect:\n  /root/project/spec/model/persistence/dynamodb/query_test.py\nHINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules\n```\n\n## Solution\n\nAdd `__init__.py` files to the conflicting module folders\n\n['import file mismatch in pytest' on StackOverflow](https://stackoverflow.com/questions/53918088/import-file-mismatch-in-pytest)\n","n":0.132}}},{"i":249,"$":{"0":{"v":"How To","n":0.707}}},{"i":250,"$":{"0":{"v":"Use Fixtures","n":0.707},"1":{"v":"\n# Use fixtures\n\n## Without having them as argument\n\n```py\n@pytest.mark.usefixtures(\"cleandir\")\n```\n","n":0.354}}},{"i":251,"$":{"0":{"v":"Parametrize Tests","n":0.707},"1":{"v":"\n# Parametrize tests\n\n## Single argument\n\n```py\n@pytest.mark.parametrize(\"color\", [\"red\", \"blue\", \"green\"], id=str)\n```\n\n## Multiple arguments\n\n```py\n@pytest.mark.parametrize(\"height,width\", [(20, 30), (40, 10)], id=str)\n```\n\n## Custom human readable ids\n```py\n@pytest.mark.parametrize(\n    \"height,width\",\n    [\n        (10, 5),\n        (400, 200)\n    ],\n    ids=[\n        'small size',\n        'big size'\n    ]\n)\n```\n","n":0.174}}},{"i":252,"$":{"0":{"v":"Parametrize Fixtures","n":0.707},"1":{"v":"\n# Parametrizing fixtures\n\n## Indirectly on test cases\n\n```py\n@pytest.mark.parametrize(\"fixture_name\", [\"value1\", \"value2\"], indirect=True)\n```\n\n## Directly in fixtures via `request.param`\n\n```py\n@pytest.fixture(params=[\"smtp.gmail.com\", \"mail.python.org\"])\ndef some_fixture_value(request):\n    # use request.param\n```\n","n":0.224}}},{"i":253,"$":{"0":{"v":"Override Fixtures","n":0.707},"1":{"v":"\n# Override Fixtures\n\nYou can just refer to the fixture with the same name to get the definition from the next higher scope.\n\n```py\n@pytest.fixture\ndef users(users):\n    return users + [User(id='seconduser')]\n```\n","n":0.192}}},{"i":254,"$":{"0":{"v":"Djoser","n":1},"1":{"v":"\nPre-built API Endpoints for user authentication and related tasks.\nBuilt using `django-rest-framework`\n","n":0.302}}},{"i":255,"$":{"0":{"v":"How To","n":0.707}}},{"i":256,"$":{"0":{"v":"Setup Token Authentication","n":0.577},"1":{"v":"\n# Setup Token Authentication\n\n## `settings.py`\n```py\n# settings.py\n\nINSTALLED_APPS = [\n    # ...\n    \"rest_framework\",\n    \"rest_framework.authtoken\", # <-- Add this\n    \"djoser\",\n    # ...\n]\n\nREST_FRAMEWORK = {\n    \"DEFAULT_AUTHENTICATION_CLASSES\": (\n        \"rest_framework.authentication.TokenAuthentication\", # <-- Add this\n        # ...\n    )\n}\n```\n\n## `urls.py`\n\n```py\nurlpatterns = [\n    # ...\n    path(\"api/v1/\", include(\"djoser.urls\")),\n    path(\"api/v1/\", include(\"djoser.urls.authtoken\")), # <-- Add this\n    # ...\n]\n```\nThis will add `api/v1/token/login/` and `api/v1/token/logout/` endpoints\n\n## References\n\n[Token Based Authentication with Django Rest Framework and Djoser](https://saasitive.com/tutorial/token-based-authentication-django-rest-framework-djoser/)\n","n":0.128}}},{"i":257,"$":{"0":{"v":"Django","n":1}}},{"i":258,"$":{"0":{"v":"Django REST Framework","n":0.577}}},{"i":259,"$":{"0":{"v":"How To","n":0.707}}},{"i":260,"$":{"0":{"v":"Require Authentication for an Endpoint","n":0.447},"1":{"v":"\n# Require Authentication for an Endpoint\n\nAdd the `permission_classes` decorator with the `IsAuthenticated` permission class to the view.\n\n```py\nfrom rest_framework.decorators import api_view, permission_classes\nfrom rest_framework.permissions import IsAuthenticated\n\n\n@api_view([\"GET\"])\n@permission_classes([IsAuthenticated])\ndef my_authorized_view(request):\n    # ...\n```\n","n":0.192}}},{"i":261,"$":{"0":{"v":"How To","n":0.707}}},{"i":262,"$":{"0":{"v":"Handle XML","n":0.707},"1":{"v":"\n# Handle XML\n\n## Build XML Trees\n\n```py\nimport xml.etree.ElementTree as xml\n\nroot = xml.Element('rss', version='2.0')\nchannel = xml.Element('channel')\nroot.append(channel)\n\nxml_string = xml.tostring(root)\n```\n","n":0.25}}},{"i":263,"$":{"0":{"v":"Handle CSV","n":0.707},"1":{"v":"\n# Handle CSV\n\n## Read CSV from File\n\n```py\nimport csv\n\nwith open('file.csv') as csv_file:\n    with csv.reader(csv_file) as csv_rows:\n        for row in csv_rows:\n            column1, column2, column3 = row\n```\n\nTo read from string use `io.StringIO` to wrap the string.\n","n":0.174}}},{"i":264,"$":{"0":{"v":"Format Dates","n":0.707},"1":{"v":"\n# Format Dates\n\nWorks with `datetime.date` and `datetime.time` using the `strftime` method.\n\n![[reference.dev.python.strftime-format-codes]]\n","n":0.302}}},{"i":265,"$":{"0":{"v":"Debug","n":1},"1":{"v":"# Debug\n\n```py\nimport code; code.interact(local=locals())\n```\n\ngives a `binding.pry` like experience\n","n":0.354}}},{"i":266,"$":{"0":{"v":"strftime() format fodes","n":0.577},"1":{"v":"\n# `strftime()` and `strptime()` Format Codes\n\nCopied from https://docs.python.org/3/library/datetime.html#strftime-and-strptime-format-codes\n\n\n| Directive | Meaning | Example |\n| --- | --- | --- |\n| `%a` | Weekday as locale’s abbreviated name. | Sun, Mon, …, Sat (en_US);<br><br>So, Mo, …, Sa (de_DE) |\n| `%A` | Weekday as locale’s full name. | Sunday, Monday, …, Saturday (en_US);<br><br>Sonntag, Montag, …, Samstag (de_DE) |\n| `%w` | Weekday as a decimal number, where 0 is Sunday and 6 is Saturday. | 0, 1, …, 6 |\n| `%d` | Day of the month as a zero-padded decimal number. | 01, 02, …, 31 |\n| `%-d` | Day of the month as a decimal number. | 1, 2, …, 31 |\n| `%b` | Month as locale’s abbreviated name. | Jan, Feb, …, Dec (en_US);<br><br>Jan, Feb, …, Dez (de_DE) |\n| `%B` | Month as locale’s full name. | January, February, …, December (en_US);<br><br>Januar, Februar, …, Dezember (de_DE) |\n| `%m` | Month as a zero-padded decimal number. | 01, 02, …, 12 |\n| `%-m` | Month as a decimal number. | 1, 2, …, 12 |\n| `%y` | Year without century as a zero-padded decimal number. | 00, 01, …, 99 |\n| `%Y` | Year with century as a decimal number. | 0001, 0002, …, 2013, 2014, …, 9998, 9999 |\n| `%H` | Hour (24-hour clock) as a zero-padded decimal number. | 00, 01, …, 23 |\n| `%-H` | Hour (24-hour clock) as a decimal number. | 0, 1, …, 23 |\n| `%I` | Hour (12-hour clock) as a zero-padded decimal number. | 01, 02, …, 12 |\n| `%-I` | Hour (12-hour clock) as a decimal number. | 1, 2, …, 12 |\n| `%p` | Locale’s equivalent of either AM or PM. | AM, PM (en_US);<br><br>am, pm (de_DE) |\n| `%M` | Minute as a zero-padded decimal number. | 00, 01, …, 59 |\n| `%-M` | Minute as a decimal number. | 0, 1, …, 59 |\n| `%S` | Second as a zero-padded decimal number. | 00, 01, …, 59 |\n| `%-S` | Second as a decimal number. | 00, 01, …, 59 |\n| `%f` | Microsecond as a decimal number, zero-padded to 6 digits. | 000000, 000001, …, 999999 |\n| `%z` | UTC offset in the form `±HHMM[SS[.ffffff]]` (empty string if the object is naive). | (empty), +0000, -0400, +1030, +063415, -030712.345216 |\n| `%Z` | Time zone name (empty string if the object is naive). | (empty), UTC, GMT |\n| `%j` | Day of the year as a zero-padded decimal number. | 001, 002, …, 366 |\n| `%-j` | Day of the year as a decimal number. | 1, 2, …, 366 |\n| `%U` | Week number of the year (Sunday as the first day of the week) as a zero-padded decimal number. All days in a new year preceding the first Sunday are considered to be in week 0. | 00, 01, …, 53 |\n| `%-U` | Week number of the year (Sunday as the first day of the week) as a decimal number. All days in a new year preceding the first Sunday are considered to be in week 0. | 0, 1, …, 53 |\n| `%W` | Week number of the year (Monday as the first day of the week) as a zero-padded decimal number. All days in a new year preceding the first Monday are considered to be in week 0. | 00, 01, …, 53 |\n| `%-W` | Week number of the year (Monday as the first day of the week) as a decimal number. All days in a new year preceding the first Monday are considered to be in week 0. | 0, 1, …, 53 |\n| `%c` | Locale’s appropriate date and time representation. | Tue Aug 16 21:30:00 1988 (en_US);<br><br>Di 16 Aug 21:30:00 1988 (de_DE) |\n| `%x` | Locale’s appropriate date representation. | 08/16/88 (None);<br><br>08/16/1988 (en_US);<br><br>16.08.1988 (de_DE) |\n| `%X` | Locale’s appropriate time representation. | 21:30:00 (en_US);<br><br>21:30:00 (de_DE) |\n| `%%` | A literal `'%'` character. | %   |\n","n":0.039}}},{"i":267,"$":{"0":{"v":"Mocks","n":1},"1":{"v":"\n# Mocks\n\n## Replacing functions/classes in a module\n\n```py\nfrom unittest.mock import patch\n\n# Manually\nmethod_patch = patch('module.submodule.function', autospec=True)\nmocked_function = method_patch.start()\n\n# ... do stuff\n\nmethod_patch.stop()\n\n# Context Manager\nwith patch('module.submodule.function', autospec=True) as mocked_function:\n    # ... do stuff\n```\n\n## Replacing functions on a object\n\n```py\nfrom unittest.mock import patch\n\n# Manually\nmethod_patch = patch.object(an_object, 'object_method', autospec=True)\nmocked_function = method_patch.start()\n\n# ... do stuff\n\nmethod_patch.stop()\n\n# Context Manager\nwith patch.object(an_object, 'object_method', autospec=True) as mocked_function:\n    # ... do stuff\n```\n","n":0.131}}},{"i":268,"$":{"0":{"v":"Powershell","n":1}}},{"i":269,"$":{"0":{"v":"Bash Equivalents","n":0.707},"1":{"v":"# Bash Equivalents\n\n- `which` -> `Get-Command`\n- `pwd` -> `Get-Location`\n\n\n","n":0.333}}},{"i":270,"$":{"0":{"v":"Lua","n":1}}},{"i":271,"$":{"0":{"v":"How To","n":0.707}}},{"i":272,"$":{"0":{"v":"Get Type of Object","n":0.5},"1":{"v":"\n# Get Type of Object\n\n```lua\nif type(value) == 'string'\nelseif type(value) == 'table'\nelseif type(value) == 'number'\nelseif type(value) == 'function'\nelseif type(value) == 'boolean'\nelseif type(value) == 'nil'\nelseif type(value) == 'thread'\nelseif type(value) == 'userdata'\nend\n```\n\n- `thread` is a Lua coroutine\n- `userdata` is either a custom object with a memory block managed via C functions or just a C pointer\n","n":0.137}}},{"i":273,"$":{"0":{"v":"Execute Shell Commands","n":0.577},"1":{"v":"\n# Execute Shell Commands\n\n## Just execute and get success/fail\n```lua\nsuccess = os.execute('sleep 20')\n```\n\n## Get stdout of executed process\n```lua\nstream = io.popen('ls')\noutput = stream:read('a') -- 'a' means read all\nstream:close()\n```\n","n":0.196}}},{"i":274,"$":{"0":{"v":"Access Environment Variables","n":0.577},"1":{"v":"\n# Access Environment Variables\n\n```lua\nos.getenv('HOME')\n```\n\nReturns `nil` if not existing\n","n":0.354}}},{"i":275,"$":{"0":{"v":"Ternary Operator","n":0.707},"1":{"v":"# Ternary Operator\n\n```lua\nresult = condition and alternative1 or alternative2\n```\n","n":0.333}}},{"i":276,"$":{"0":{"v":"API Reference","n":0.707},"1":{"v":"\n# API Reference\n\nhttps://www.lua.org/manual/5.4/manual.html\n","n":0.577}}},{"i":277,"$":{"0":{"v":"Hammerspoon","n":1}}},{"i":278,"$":{"0":{"v":"How To","n":0.707}}},{"i":279,"$":{"0":{"v":"Send a Slack Message","n":0.5},"1":{"v":"\n# Send a Slack Message\n\n```lua\nfunction sendSlackMessage(channel, message)\n  hs.application.launchOrFocus('Slack')\n  hs.eventtap.keyStroke({'cmd'}, 'K') -- switch to channel\n  hs.eventtap.keyStrokes(channel)\n  hs.eventtap.keyStroke({}, 'return')\n  hs.eventtap.keyStrokes(message)\n  hs.eventtap.keyStroke({}, 'return')\nend\n```\n","n":0.224}}},{"i":280,"$":{"0":{"v":"Install the CLI","n":0.577},"1":{"v":"\n# Install the CLI\n\nThere is the official `hs.ipc.cliInstall()` command but it requires you to make `/usr/local/bin` writable for the login\nuser. So just do it manually\n\n```sh\nsudo ln -s /Applications/Hammerspoon.app/Contents/Frameworks/hs/hs /usr/local/bin\n```\n","n":0.186}}},{"i":281,"$":{"0":{"v":"Create a Settings Menu","n":0.5},"1":{"v":"\n# Create a Settings Menu\n\nThe function below generates a `hs.menu` object with separate options for setting categories you define. Selecting such\nan option will show a sequence of input dialogs for each value in the category.\n\n## Source Code\n\n```lua\nfunction buildSettingsMenu(settings)\n  local buildSettingsUpdateFunction = function(setting)\n    defaultValue = {}\n    hs.fnutils.each(setting.values, function(settingValue)\n      defaultValue[settingValue.id] = ''\n    end)\n\n    return function()\n      value = hs.settings.get(setting.id) or defaultValue\n\n      hs.fnutils.each(setting.values, function(settingValue)\n        value[settingValue.id] = askForSettingsValue(settingValue, value[settingValue.id])\n      end)\n\n      hs.settings.set(setting.id, value)\n    end\n  end\n\n  local askForSettingsValue = function(settingValue, currentValue)\n    if settingValue.type == 'directory' then\n      selected = hs.dialog.chooseFileOrFolder(\n        'Please select ' .. settingValue.name,\n        currentValue,\n        false, -- canChooseFiles\n        true, -- canChooseDirectories\n        false -- allowsMultipleSelection\n      )\n      if selected == nil then\n        return currentValue\n      end\n\n      return selected['1']\n    else\n      clickedButton, newValue = hs.dialog.textPrompt(\n        settingValue.name,\n        'Please enter ' .. settingValue.name,\n        currentValue\n      )\n      if clickedButton ~= 'OK' then\n        return currentValue\n      end\n\n      return newValue\n    end\n  end\n\n  return hs.fnutils.imap(settings, function(setting)\n    return {\n      title = setting.name,\n      fn = buildSettingsUpdateFunction(setting)\n    }\n  end)\nend\n```\n\n## Definition example\n\n```lua\n{\n  {\n    id = 'clockify',\n    name = 'Clockify',\n    values = {\n      {\n        id = 'apiKey',\n        name = 'Clockify API Key',\n      },\n      {\n        id = 'workspaceId',\n        name = 'Clockify Workspace ID',\n      }\n    }\n  },\n  {\n    id = 'dendron',\n    name = 'Dendron',\n    values = {\n      {\n        id = 'workspacePath',\n        name = 'Dendron Workspace Path',\n        type = 'directory'\n      }\n    }\n  }\n}\n```\n","n":0.07}}},{"i":282,"$":{"0":{"v":"Create a Countdown in the Menubar","n":0.408},"1":{"v":"\n# Create a Countdown in the Menubar\n\n```lua\n--- createCountdown(label, endTime, [onStop])\n---\n--- Parameters:\n---  * label - Label for the countdown\n---  * endTime - End time of the countdown as UNIX timestamp\n---  * [onStop] - Callback that will be called when countdown is stopped\n---\n--- Returns:\n---  * Table\n---    {\n---      menu: `hs.menu` object showing the countdown\n---      endTime: End time of the countdown that was passed as parameter\n---      timer: `hs.timer` object updating the countdown every second\n---    }\nfunction createCountdown(label, endTime, ...)\n  countdown = {\n    menu = hs.menubar.new(),\n    endTime = endTime,\n  }\n\n  countdown.timer = hs.timer.doEvery(1, function()\n    timeUntilEnd = countdown.endTime - os.time()\n    sign = timeUntilEnd < 0 and '-' or ''\n    timeUntilEnd = math.abs(timeUntilEnd)\n\n    minutes = math.floor(timeUntilEnd / 60)\n    seconds = timeUntilEnd % 60\n    countdown.menu:setTitle(label .. ': ' .. sign .. string.format('%02d:%02d', minutes, seconds))\n  end)\n\n  onStop = ...\n\n  countdown.menu:setClickCallback(function()\n    countdown.timer:stop()\n    countdown.menu:delete()\n    if onStop then\n      onStop()\n    end\n  end)\n\n  return countdown\nend\n```\n","n":0.085}}},{"i":283,"$":{"0":{"v":"API Reference","n":0.707},"1":{"v":"\n# API Reference\n\nhttps://www.hammerspoon.org/docs/index.html\n","n":0.577}}},{"i":284,"$":{"0":{"v":"GitHub Actions","n":0.707}}},{"i":285,"$":{"0":{"v":"Actions","n":1}}},{"i":286,"$":{"0":{"v":"Checkout V3","n":0.707},"1":{"v":"\n# Checkout V3\n\n```yaml\n- uses: actions/checkout@v3\n  with:\n    repository: ${{ github.repository }}\n    ref: ${{ github.ref }} # or default branch\n    path: '' # Target path\n```\n","n":0.209}}},{"i":287,"$":{"0":{"v":"Ubuntu 22 Runner","n":0.577},"1":{"v":"# Ubuntu 22 Runner\n\n## Installed Software\n- Ansible 2.13.3\n- AWS CLI 2.7.25\n- Docker Compose v2 2.9.0+azure-1\n- jq 1.6\n- Heroku 7.62.0\n- Homebrew 3.5.9\n- Node 16.17.0\n  - Yarn 1.22.19\n- Python 3.10.4\n  - Pip 22.0.2\n- Ruby 3.0.2p107\n- Terraform 1.2.7\n","n":0.169}}},{"i":288,"$":{"0":{"v":"Git","n":1}}},{"i":289,"$":{"0":{"v":"How To","n":0.707}}},{"i":290,"$":{"0":{"v":"Remove All Untracked Files","n":0.5},"1":{"v":"# Remove All Untracked Files\n\n```sh\ngit clean -f -x -d\n```\n\n- `-f` force\n- `-x` remove all untracked files (`-X` would only remove explicitly ignored files and keep unstaged ones)\n- `-d` recurse down into directories\n","n":0.177}}},{"i":291,"$":{"0":{"v":"Get Changed Files in Commit","n":0.447},"1":{"v":"\n# Get Changed Files in Commit\n\n```sh\ngit show --name-status --pretty=format: <commit>\n```\n\nwill return something like\n\n```sh\nA       inbox.podcast.design-details-incremental-correctness.md\nA       inbox.podcast.design-details-principles-of-design.md\nM       inbox.reading.misc.brian-lovin-writing.md\nD       inbox.reading.misc.mister-chads-digital-garden.md\nA       reference.literature-notes.mister-chads-digital-garden.md\n```\n","n":0.236}}},{"i":292,"$":{"0":{"v":"Delete a remote branch","n":0.5},"1":{"v":"\n# Delete a remote branch\n\n```sh\ngit push origin --delete <branch>\n```\n","n":0.333}}},{"i":293,"$":{"0":{"v":"Create a Snapshot as Zip File","n":0.408},"1":{"v":"\n# Create a Snapshot as Zip File\n\n- Check out the commit you want to snapshot\n\n- Run\n  ```sh\n  git archive HEAD --format=zip > archive.zip\n  ```\n","n":0.204}}},{"i":294,"$":{"0":{"v":"Change Commit Date","n":0.577},"1":{"v":"\n# Change commit date\n\n- Committer date:\n  ```sh\n  $> GIT_COMMITTER_DATE=\"Sun Apr 3 23:40:11 2022 +0900\" git commit\n  ```\n- Author date:\n  ```sh\n  $> GIT_AUTHOR_DATE=\"Sun Apr 3 23:40:11 2022 +0900\" git commit\n  ```\n","n":0.183}}},{"i":295,"$":{"0":{"v":"Add a Submodule","n":0.577},"1":{"v":"\n# Add a Submodule\n\n```sh\ngit submodule add <repository> [<path>]\n```\n","n":0.354}}},{"i":296,"$":{"0":{"v":"Return to the previous branch","n":0.447},"1":{"v":"# Return to the previous branch\n\n```sh\ngit checkout -\n```\n","n":0.354}}},{"i":297,"$":{"0":{"v":"Emacs","n":1}}},{"i":298,"$":{"0":{"v":"Plugins","n":1},"1":{"v":"# Plugins\n\n- copilot.el (https://github.com/zerolfx/copilot.el)\n\n  > Copilot.el is an Emacs plugin for GitHub Copilot.\n","n":0.277}}},{"i":299,"$":{"0":{"v":"Keys","n":1},"1":{"v":"# Keys\n\n## Navigation\n- Movement\n  ```\n      C-p\n  C-b     C-f\n      C-n\n  ```\n- `M-f` / `M-b` Move word forward/back\n- `C-a` / `C-e` Move to beginning/end of line\n- `M-a` / `M-e` Move to beginning/end of sentence\n- `M-<` / `M->` Move to beginning/end of text\n- `C-v` / `M-v` Page down/up\n- `C-l` Center current line / Move to top / Move to bottom\n- `M-r` Move to center line / top line / bottom line\n- `M-g g N` Go to line N\n\n## Editing\n- `<DEL>` / `M-<DEL>` delete character/word before cursor\n- `C-d` / `M-d` delete character/word after cursor\n- `C-k` / `M-k` kill to end of line/sentence\n- `C-<SPC>` Set Mark\n- `C-w` kill marked content\n- `C-y` Yank killed content\n  - Then `M-y` Rotate through killed contents\n- `C-/` Undo\n\n## Buffers\n- `C-x <LEFT>` / `C-x <RIGHT>` Previous/Next buffer\n- `C-x b` Select buffer by name\n- `C-x k` Kill buffer (Enter for current buffer)\n\n## Windows\n- `C-x 1` Remove all other windows\n- `C-x 0` Remove current window\n- `C-x 2` Split Window to the bottom\n- `C-x 3` Split Window to the right\n\n## Help\n- `C-h k <KEY>` Describe key\n- `C-h a` Apropos - find command matching word\n\n## Info Mode\n- `<SPC>` / `<DEL>` Move pagewise forward/backward through manual\n- `m` go to link\n- `M-n` copy info buffer\n\n## Meta\n- `C-u <N> <KEY>` Executes command of KEY N times\n- `C-g` Stop current command\n- `M-x` Execute command by name\n- `M-:` Eval Elisp\n\n## Customization\n- `M-x add-dir-local-variable` Add customization for current directory\n\n## Org Mode\n- `M-<RET>` New Heading\n- `M-<LEFT>` / `M-<RIGHT>` Change Heading level\n- `M-S-<LEFT>` / `M-S-<RIGHT>` Change level of whole subtree\n- `M-<UP>` / `M-<DOWN>` Swap Subtree up/down on same level\n- `C-c C-n` / `C-c C-p` Next/Previous heading\n- `C-c C-f` / `C-c C-b` Next/Previous heading same level\n- `C-c C-u` Heading in parent level\n- `C-c C-j` Goto\n\n### Todo & Clocking Time\n- `C-c C-c` Convenience key\n  - On Checkbox: Toggle\n  - On Clock: Re-calculate clock duration\n  - On TODO statistic: recalculate\n  - On TODO: Add tag\n- `C-c C-t` Change todo state\n- `C-c t` Show todo tree\n- `C-c C-x C-i` Clock in\n- `C-c C-x C-o` Clock out\n- `C-c C-x C-d` Show total times next to tasks\n- `C-c C-x C-q` Cancel clock\n- `C-c C-x e` Set effort for selected task\n- `C-c C-x C-e` Set effort for currently clocked task\n\n## Magit\n- `C-x g` Open Magit\n\n### In Magit buffer\n- `g` refresh\n- `n` / `p` next/previous hunk\n- `P u` push to upstream\n- `c c` commit (Confirm message with `C-c`)\n","n":0.051}}},{"i":300,"$":{"0":{"v":"elisp","n":1},"1":{"v":"# elisp\n\n- Evaluate an expression in `*scratch*` via `C-j`\n\n## Lists\n- Consist of \"cons cells\" which are pairs of\n  - CAR: The actual element\n  - CDR: The next cons cell or `nil`\n- It's basically a linked list\n- It can also be circular by letting the CRT point to a previous cell\n- `nil` and `()` (empty list) are the same\n- Two notations:\n  - List notation: `(1 2 3)`\n  - Dotted pair: `(1 . (2 . (3 . nil)))`\n\n### Evaluation\n- Evaluating a list by itself will be interpreted as a function call\n  - First element being the function and the rest the arguments\n- To get the list as a value do one of:\n  - Quote it: `'(1 2 3)`\n  - Use `list`: `(list 1 2 3)`\n  - Use `cons`: `(cons 1 '(2 3))`\n","n":0.088}}},{"i":301,"$":{"0":{"v":"Bash","n":1}}},{"i":302,"$":{"0":{"v":"How To","n":0.707}}},{"i":303,"$":{"0":{"v":"Output to Stderr","n":0.577},"1":{"v":"# Output to Stderr\n\n```sh\necho \"ERROR\" >&2\n```\n","n":0.408}}},{"i":304,"$":{"0":{"v":"Syntax Constructs","n":0.707},"1":{"v":"# Syntax Constructs\n\n## Case Statement\n\nEnd case with double semicolon `;;`\n\n```sh\ncase $platform in\n  Linux) # If the platform is Linux\n    echo \"You are running Linux.\"\n    ;;\n  Darwin) # If the platform is Darwin\n    echo \"You are running macOS.\"\n    ;;\n  MINGW*) # If the platform contains MINGW\n    echo \"You are running Windows with MinGW.\"\n    ;;\n  *) # If none of the above matches\n    echo \"Unknown platform: $platform\"\n    ;;\nesac\n```\n","n":0.123}}},{"i":305,"$":{"0":{"v":"Logic Operators","n":0.707},"1":{"v":"# Logic Operators\n\n## And\n\nInside the test expression\n```sh\nif [ \"$1\" = \"run\" -a \"$2\" != \"\" ]; then\n  # With run and an additional argument\nfi\n```\n\nConnecting test expressions\n```sh\nif [ \"$1\" = \"run\" ] && [ \"$2\" != \"\" ]; then\n  # With run and an additional argument\nfi\n```\n\n## Or\n\nInside the test expression\n```sh\nif [ \"$1\" = \"-h\" -o \"$1\" = \"--help\" ]; then\n  # When the argument is -h or --help\nfi\n```\n\nConnecting test expressions\n```sh\nif [ \"$1\" = \"-h\" ] || [ \"$1\" = \"--help\" ]; then\n  # When the argument is -h or --help\nfi\n```\n","n":0.106}}},{"i":306,"$":{"0":{"v":"YAML","n":1}}},{"i":307,"$":{"0":{"v":"Line Folding","n":0.707},"1":{"v":"\n# Line folding\n\n```yaml\nvalue: >-\n  This is\n  actually one line\n```\n\nresults in a string `\"This is actually one line\"`\n\nThe `-` behind `>` means chomping (removing the final newline).\n","n":0.196}}},{"i":308,"$":{"0":{"v":"Block Literal","n":0.707},"1":{"v":"\n# Block literal\n\n```yaml\nvalue: |\n  This is a long block\n  With many lines\n```\n\nresults in a string `\"This is a long block\\nWith many lines\\n\"`\n\nUsing `|-` would chomp.\n\n","n":0.2}}},{"i":309,"$":{"0":{"v":"Testing","n":1},"1":{"v":"# Testing\n\n## Types of tests\n\n### Unit tests\nIs this component/unit of the system working as expected?\n\n## API tests\nIf the system under test has an outward facing interface, does it work as promised.\n\n## Feature/Integration tests\nDoes this combination of classes or flow of action work together as expected?\n\n## End-to-end / System tests\nInteracting with the system through the screen as a real end user would to see if it works as expected.\n\n## Acceptance tests\nAre the specifications actually fulfilled?\n\n## Regression tests\nDo all the existing features still work?\n\n## Performance / Stress tests\nDoes the system fast and good enough even under heavy load?\n\n## Security tests\nAre there no vulnerabilities in the system?\n","n":0.098}}},{"i":310,"$":{"0":{"v":"Mocks vs Stubs","n":0.577},"1":{"v":"\n# Mocks vs Stubs\n\nAccording to Martin Fowler's article [Mocks aren't Stubs](https://martinfowler.com/articles/mocksArentStubs.html)\n\n## Stubs\nFake objects that just return canned, predefined answers to method calls.\n\n## Mock\nMore advanced stubs that also allow assertion of method calls.\n","n":0.177}}},{"i":311,"$":{"0":{"v":"SQL","n":1}}},{"i":312,"$":{"0":{"v":"How To","n":0.707}}},{"i":313,"$":{"0":{"v":"Search Partial String Values","n":0.5},"1":{"v":"# Search Partial String Values\n\n```sql\nSELECT * FROM issues WHERE subject LIKE '2022-07%'\n```\n\n- `%` matches arbitrary characters\n- the `LIKE` clause must be wrapped in **single** quotes\n","n":0.2}}},{"i":314,"$":{"0":{"v":"Process","n":1},"1":{"v":"\n# Development process\n\n## Gathering requirements\nWhat does the customer want?\n\n## Specifying the system\nWhat kind of system we are we going to build to meet the requirements?\n\n## Designing the System\nHow are we building this system?\nWhat kind of architecture are we using?\n\n## Implementation\nBuild it!\n\n## Testing\nDoes it fulfill the specifications? Is nothing else broken?\n","n":0.141}}},{"i":315,"$":{"0":{"v":"PostgreSQL","n":1}}},{"i":316,"$":{"0":{"v":"How To","n":0.707}}},{"i":317,"$":{"0":{"v":"Restore a database","n":0.577},"1":{"v":"\n# Restore a database\n\n```sh\npsql -h db.url.com -d databasename -u user < dump.sql\n```\n","n":0.289}}},{"i":318,"$":{"0":{"v":"Dump a database","n":0.577},"1":{"v":"\n# Dump a database\n\n```sh\npg_dump -h db.url.com -d databasename -u user -cC > dump.sql\n```\n\n## Explation\n\n- `-c` will drop all existing data before restoring the dumped data\n- `-C` will include database creation\n  - will drop the whole database instead of all tables when used together with `-c`\n","n":0.149}}},{"i":319,"$":{"0":{"v":"Online Lectures","n":0.707},"1":{"v":"# Online Lectures\n\n## Open Source Society University\n\nhttps://github.com/ossu\n\nFree computer science curriculum, online!\n\n## CS Video courses\n\nhttps://github.com/Developer-Y/cs-video-courses\n","n":0.267}}},{"i":320,"$":{"0":{"v":"MySQL","n":1}}},{"i":321,"$":{"0":{"v":"How To","n":0.707}}},{"i":322,"$":{"0":{"v":"Dump a database","n":0.577},"1":{"v":"\n# Dump a database\n\n```sh\nmysqldump -h db.url.com -p -u user databasename > dump.sql\n```\n\n## Explation\n\n- `-p` will prompt for a password\n- Automatically adds drop table statements by default\n","n":0.196}}},{"i":323,"$":{"0":{"v":"Mermaid","n":1},"1":{"v":"\n# Mermaid\n\nDescription language for diagrams.\n\nhttps://mermaid-js.github.io/mermaid/\n","n":0.447}}},{"i":324,"$":{"0":{"v":"Flow Chart","n":0.707},"1":{"v":"\n# Flow Charts in Mermaid\n\n````\n```mermaid\nflowchart TD\n    node_a[Node name] --> node_b[\"Node with (special) characters\"]\n    node_a --> node_c\n```\n````\n\n```mermaid\nflowchart TD\n    node_a[Node name] --> node_b[\"Node with (special) characters\"]\n    node_a --> node_c\n```\n\n## Orientations\n- `TD`: Top-Down\n- `BT`: Bottom-Top\n- `LR`: Left-Right\n- `RL`: Right-Left\n\n## Styling nodes\n\n````\n```mermaid\nflowchart TD\n  A:::enemy --> B\n\n  classDef enemy fill:#f00,stroke:#333,stroke-width:4px;\n```\n````\n\n```mermaid\nflowchart TD\n  A:::enemy --> B\n\n  classDef enemy fill:#f00,stroke:#333,stroke-width:4px;\n```\n","n":0.139}}},{"i":325,"$":{"0":{"v":"AWS","n":1}}},{"i":326,"$":{"0":{"v":"Lambda Limits","n":0.707},"1":{"v":"\n# Lambda Limits\n\n[Documentation Page](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-limits.html#function-configuration-deployment-and-execution)\n\n- Function memory allocation: 128 MB to 10,240 MB, in 1-MB increments.\n- Max Function timeout: 900 seconds (15 minutes)\n  - 30 seconds for API Gateway lambdas\n","n":0.186}}},{"i":327,"$":{"0":{"v":"Data Pipeline","n":0.707},"1":{"v":"\n# AWS Data Pipeline\n\n- Pipeline Components: Definitions of\n  - Data Nodes: Input/Output locations for activities\n    - Dynamo DB, S3\n  - Activities: The work to perform\n    - Copy, Shell Command\n  - Preconditions: Conditions whether a task should run or not\n  - Resources: That become task runners, Like EC2 instances\n  - Schedules\n- Task Instances: Tasks that result from the compiled components\n- Attempts: Actual execution/retry of a task\n- Task Runner: Takes Tasks from the pipeline and attempts them\n\nThe modern alternative using Lambda would be AWS Step Functions\n","n":0.109}}},{"i":328,"$":{"0":{"v":"Codeguru Profiler","n":0.707},"1":{"v":"\n# Codeguru Profiler\n\n## How to use:\n1. Install `pip` package `codeguru_profiler_agent`\n2. Create a profiling group\n3. (TODO)\n\n## Required Permissions\n\n- IAM Actions:\n  - `codeguru-profiler:ConfigureAgent`\n  - `codeguru-profiler:CreateProfilingGroup`\n  - `codeguru-profiler:PostAgentProfile`\n- Resources:\n  - `arn:aws:codeguru-profiler:*:*:profilingGroup/*`\n\nSee [AmazonCodeGuruProfilerAgentAccess policy](https://us-east-1.console.aws.amazon.com/iam/home#/policies/arn:aws:iam::aws:policy/AmazonCodeGuruProfilerAgentAccess)\n","n":0.183}}},{"i":329,"$":{"0":{"v":"Dendron","n":1},"1":{"v":"# Dendron\n\n## Try out\n- Generate Changelog/RSS Feed from Git history?\n  - [Python XML Documentation](https://docs.python.org/3.8/library/xml.etree.elementtree.html#module-xml.etree.ElementTree)\n  - [XML RSS Example/Docs](https://www.w3schools.com/xml/xml_rss.asp)\n## How To\n- [[reference.dendron.how-to.hide-scratch-from-navigation]]\n- [[reference.dendron.how-to.create-note-links]]\n- [[reference.dendron.how-to.create-remote-vault]]\n\n\n","n":0.209}}},{"i":330,"$":{"0":{"v":"Workarounds","n":1}}},{"i":331,"$":{"0":{"v":"Render assets in dev server when `assetsPrefix` is set","n":0.333},"1":{"v":"\n# Render assets in dev server when `assetsPrefix` is set\n\nWhen `assetsPrefix` is set in the configuration then the local dev server will not link to assets properly.\nStarting with the `--overrides` option will make it work for all normal note pages.\n\n```sh\ndendron publish dev --overrides assetsPrefix='../..'\n```\n\n#dendron.check-on-update\n","n":0.151}}},{"i":332,"$":{"0":{"v":"Fixing the Home Back Link","n":0.447},"1":{"v":"\n# Fixing the Home Back Link\n\nRun [a little script](https://github.com/kfischer-okarin/digital-garden/blob/main/scripts/fix_home_links) that removes all relative paths to the root node from the published files [before publishing](https://github.com/kfischer-okarin/digital-garden/blob/main/.github/workflows/publish.yml#L40).\n\nSee [GitHub Issue #2675](https://github.com/dendronhq/dendron/issues/2675)\n\n#dendron.check-on-update\n","n":0.192}}},{"i":333,"$":{"0":{"v":"How To","n":0.707}}},{"i":334,"$":{"0":{"v":"Query Notes via Engine API","n":0.447},"1":{"v":"\n# Query Notes via Engine API\n\n## Request\nFind out `<port>` by reading the contents of `<workspace-path>/.dendron.port`.\n\n```http\nGET localhost:<port>/api/note/query?ws=<workspace-path>&qs=<filter>\n```\n\n`<filter>` is space separated parts of the node ids you look for.\n\nIf you want to find `work.journal.2022.06.*` you could use `work journal 2022 06.` (the dot after `06` is to make sure\nthat a note `work.journal.2022.06` would not match.\n\nReference: [Fuse Extended Search](https://fusejs.io/examples.html#extended-search)\n\n## Response\n\n```json\n{\n    \"data\": [\n        { DNoteProps Object },\n    ],\n    \"error\": null\n}\n```\n\nSee `DNodeProps` in\n[common-all/src/types/foundation.ts](https://github.com/dendronhq/dendron/blob/master/packages/common-all/src/types/foundation.ts)\n","n":0.121}}},{"i":335,"$":{"0":{"v":"Insert Agenda depending on weekday","n":0.447},"1":{"v":"\n# Insert Agenda depending on weekday\n\nAfter following these steps creating the note `work.journal.2022.05.30` will produce following content:\n\n```markdown\n---\nid: xxxxx\ntitle: '2022-05-30 (Mon)'\ndesc: ''\nupdated: xxxxx\ncreated: xxxxx\n---\n\n# 2022-05-30 (Mon)\n\n## Daily Meeting\n\n## Weekly Meeting\n\n## Code Review\n```\n\n## 1. Create schema\n\nThis schema contains a custom frontmatter with the agenda items by weekday and two placeholders for the title and the\nagenda itself.\n\n```markdown\n---\nid: xxxxxx\ntitle: Work Journal Template\nagenda_items_by_weekday:\n  Mon:\n    - Daily Meeting\n    - Weekly Meeting\n    - Code Review\n  Mon:\n    - Daily Meeting\n    - Code Review\n  Wed:\n    - Daily\n    - '[[work.areas.project-a]] Meeting'\n    - Code Review\n  Thu:\n    - Daily\n    - Code Review\n  Fri:\n    - Daily\n    - Retrospective\n    - Code Review\n---\n\n# <<TITLE>>\n\n<<AGENDA>>\n```\n\n## 2. Create the hook\n\nUse the `Create Hook` command and assign the correct hierarchy in the configuration (in this case\n  `work.journal.20[2-9][0-9].[0-9][0-9].[0-9][0-9]`)\n\n## 3. Implement the hook\n\n```js\nmodule.exports = async function({ note }) {\n  const { fname, custom } = note;\n\n  // fname is work.journal.<year>.<month>.<day>\n  const [year, month, day] = fname.split('.').slice(-3);\n  const weekday = getShortWeekday(year, month, day);\n  const title = `${year}-${month}-${day} (${weekday})`;\n\n  note.title = title;\n  note.body = note.body.replace('<<TITLE>>', title);\n\n  const agendaItems = custom.agenda_items_by_weekday[weekday];\n  note.body = note.body.replace('<<AGENDA>>', buildAgenda(agendaItems));\n  delete custom.agenda_items_by_weekday;\n\n  return { note };\n};\n\nconst getShortWeekday = (year, month, day) => {\n  // Adjust month since Date uses 0-index month\n  const date = new Date(year, Number(month) - 1, day);\n  return date.toLocaleString('en-US', { weekday: 'short'});\n}\n\nconst buildAgenda = (agendaItems) => {\n  if (!agendaItems) {\n    return '';\n  }\n\n  return agendaItems.map(item => `## ${item}\\n`).join('\\n');\n}\n```\n","n":0.067}}},{"i":336,"$":{"0":{"v":"Hide Scratch Notes from navigation","n":0.447},"1":{"v":"# Hide Scratch notes from navigation\n\n- Create `scratch.md`\n- Add `nav_exclude: true` to frontmatter\n","n":0.277}}},{"i":337,"$":{"0":{"v":"Create Remote Vault","n":0.577},"1":{"v":"\n# Create Remote vault\n\n- Go to [Create Repository on GitHub](https://github.com/new)\n- Use [kfischer-okarin/dendron_vault_template](https://github.com/kfischer-okarin/dendron_vault_template) as template\n- Regenerate the note id of the root note (otherwise the new vault will not appear in dendron)\n","n":0.18}}},{"i":338,"$":{"0":{"v":"Create Note References","n":0.577},"1":{"v":"\n# Create Note References\n\n## Whole note\n```markdown\n![[name.of.note]]\n```\n\n## From one header to the next header\n\n```markdown\n![[demo.embed.block#head1:#*]]\n```\n\n## An arbitrary block inside a note\n\nEmbeds a block/paragraph with marked `^block_id` behind it\n\n```markdown\n![[demo.embed.block#^block_id]]\n```\n\n## Line offset\n\nSkips one line (i.e. the header)\n\n```markdown\n![[some.note#header,1]]\n```\n","n":0.174}}},{"i":339,"$":{"0":{"v":"Create Note Links","n":0.577},"1":{"v":"\n# Create Note Links\n\n## Use the note title as link text\n```markdown\n[[note-file-without-md]]\n```\n\n## Use a custom label as link text\n```markdown\n[[A Nice Label|note-file-without-md]]\n```\n\n## Cross-Vault links\n\n```markdown\n[[dendron://vault/note-file-without-md]]\n```\n\nAlso works with custom labels\n","n":0.196}}},{"i":340,"$":{"0":{"v":"Create an Atom Feed","n":0.5},"1":{"v":"\n# Create an Atom Feed\n\nUsign this ruby script I wrote you can turn your most recent git 10 commits to your vault into an Atom Feed.\n- It will create one entry per modified file (renamed and deleted files are ignored), the updated timestamp will be\n  the timestamp of the commit\n- Commit starting with either `chore:` or `refactor:` will be ignored\n\n## Prerequisite\n- An execution environment that runs Ruby (e.g. the GitHub Actions runner `ubuntu-latest`)\n\n## Steps\n\n### 1. Add the script\nAdd [this ruby script](https://github.com/kfischer-okarin/digital-garden/blob/main/build_rss_feed.rb)\nnext to your `dendron.yml`\n\n### 2. Call the script between export and deploy\nAssuming you followed the instructions to publish to\n[GitHub Pages with GitHub Actions](https://wiki.dendron.so/notes/FnK2ws6w1uaS1YzBUY3BR) add following step in your\n[workflow](https://wiki.dendron.so/notes/FnK2ws6w1uaS1YzBUY3BR/#steps---setup-github-actions) between the\n`\"Export notes\"` and the `\"Deploy site\"` step:\n\n```yml\n    - name: Generate Atom Feed\n      run: ruby build_rss_feed.rb vault > docs/feed.xml\n```\n\nIf your vault happens to be in a different folder than `vault` then make sure to replace the folder name in the step\nabove.\n\n**Note:** If you are using [Self Contained Vaults](https://wiki.dendron.so/notes/o4i7a81j778jyh7wql0nacb/) then you\nhave to specify the notes folder inside the vault, not the vault folder.\n\n### 3. (Optional) Add a custom header with the link to the feed\n\nAdd following content to you custom header.\n\n```html\n<link rel=\"alternate\" type=\"application/atom+xml\" href=\"<PAGE_URL>/feed.xml\">\n```\n\nwhere `<PAGE_URL>` would be the url of your published page, e.g. `https://kfischer-okarin.github.io/digital-garden`.\n","n":0.07}}},{"i":341,"$":{"0":{"v":"Concepts","n":1},"1":{"v":"\n# Concepts\n\nThis will be where notes that describe concepts live. Andy Matuschak calls them Evergreen Notes[^1].\n\n## Guiding principles while writing:\n- About one concept\n- Densely linked\n- Mainly for myself, disregarding audience\n\n## How to write a concept note:\n\n> - figure out the key statement\n> - write the note in your own words\n> - relate the idea in the note to your personal experiences\n> - link the idea in the note to other ideas\n\nFrom: [Evergreen note-making sharpens your thinking - LYT Kit](https://notes.linkingyourthinking.com/Umami/Evergreen+note-making+sharpens+your+thinking)\n\n> - Write a broad note which captures the “big idea” of one of your clusters.\n>   - Are there multiple big ideas? Write multiple broad notes to maintain Evergreen notes should be atomic.\n> - Write finer-grained notes: Look through the individual scraps in that cluster. Write notes which capture more nuanced atomic ideas within that cluster.\n> - Connect: Search for relevant past notes which relate to these new notes. Link, merge, and revise as necessary to represent your new, synthesized conception of those ideas.\n>   - See Evergreen notes should be densely linked and Create speculative outlines while you write.\n> - Revise: Return to the broad note and improve your summary based on what you’ve learned writing the detailed notes and the details you’ve unpacked, if it’s possible to do so without muddying their focus. Remove detailed notes that are no longer necessary; update others based on what you learned writing your updated broad note if appropriate.\n> - Loop\n\nFrom: [How to process reading annotations into evergreen notes - Andy's working notes](https://notes.andymatuschak.org/z2PJ51tCXuPFxnfFVUxxgwjvZ1geu4YnYm7hK)\n\n[^1] [Evergreen Notes - Andy's working notes](https://notes.andymatuschak.org/z4SDCZQeRo4xFEQ8H4qrSqd68ucpgE6LU155C)\n","n":0.063}}},{"i":342,"$":{"0":{"v":"ADHD","n":1},"1":{"v":"# ADHD\n\n![[reference.adhd.toxic-productivity-advice#my-summary,1:#^summary_end]]\n","n":0.707}}},{"i":343,"$":{"0":{"v":"Toxic Productivity Advice","n":0.577},"1":{"v":"# Toxic Productivity Advice\nSource:\n[![Youtube Icon](assets/youtube-icon.svg){height: 1rem} Avoiding Toxic Productivity Advice for ADHD: Find What Actually Works](https://www.youtube.com/watch?v=JsT3KPYJFl4)\n\n## My Summary\n- Don't feel down if normal productivity advice doesn't work for you\n- Start with something fun to get moment\n- Feel free to switch systems\n- Use Pomodoro Timers to get into a good rhythm\n- Change your environment once in a while ^summary_end\n\n---\n\n## Introduction\n- People telling you, you're \"not reaching your potential\" (whatever that means in their mind)\n- Trying harder doesn't work\n- > He looked at me like I was stupid.<br/>\n    **I'm not stupid.**\n\n  Hamilton\n- Getting Things Done Movement\n  - Often spending weekends working on the \"perfect\" system...\n  - It then worked for a few days/weeks but in the end it comes crashing down\n  - Couldn't trust his own brain\n\n## Flaws of Neurotypical Productivity Techniques\n- Problem 1: Motivation\n  - Neurotypicals are motivated by rewards, importance, consequences\n  - For ADHD people it doesn't really work the same way (though they understand it theoretically)\n- Problem 2: Distractions\n  - There's a lot to tweak in those Productivity Systems\n- Problem 3: Overwhelm\n  - There comes a point where everything becomes too much and we just drop everything\n  - Neurotypicals just say: Suck it up and do the hard work, even if it's hard or boring\n  - ADHD people just **can't** do it\n  - > Imagine you're drowning... then someone hands you a baby.\n\n    Jim Gaffigan\n- Lot's of the advice doesn't really work\n  - Get up earlier\n  - Inbox zero\n  - Be a stoic\n  - Workout 2 hours a day\n  - Don't have carbs or sugar etc\n  - Eat the frog first\n    - No, we just stare at the frog for hours and feel like a failure for avoiding the frog all day\n    - What's wrong with you, why does it work perfectly well for everyone else\n  - Break a big project into all of its steps\n    - Scenario 1:\n      - Wow that's a lot of steps, I'm terrible at estimating time, now it feels like this infinite project\n      - Maybe let's turn on some Netflix\n      - Maybe I'll start tomorrow\n    - Scenario 2:\n      - Get bored of the steps, think of something interesting, open 50 tags on related topics\n      - What was the project again?\n- It **doesn't work**\n  - It sounds like logical advice but it just doesn't work\n  - Self-Blame\n    - Why is this working for others but not for me???\n  - Great intentions, failed action\n    - We have big intentions but our actions don't measure up\n    - People might call us lazy\n\n## What to do about it?\n- We are driven by **interest** rather than importance, consequences or rewards\n- The 4 Cs of Motivation\n  - Captivate\n    - Something you find fascinating\n  - Create\n    - Creating something new\n  - Compete\n    - We love a good challenge\n    - Someone tells you: You can't do that - and suddenly it becomes your life goal to prove them wrong\n  - Complete\n    - Setting due dates and deadlines\n- It fuels our motivation\n- We build up momentum that spills over into other activities\n\n## Tips\n- Eat the ice cream first, rather than the frog - and then use the motivation for the frog\n- Instead of listing up all the steps... list up the first few steps pick the most interesting and get rolling down\n  the track\n\n## Strategies\n- Embrace the switching of systems (Captivate & Create)\n  - Productivity systems (or any systems) work for a while for us - and that's great\n  - Once it stops working that's also ok, then we can embrace the next thing. No need for self-blame\n  - Also no need to pour all your heart and hope into the next system but rather go at it with a more relaxed attitude\n- Pomodoro Timers (Compete & Complete)\n  - It's ok to be flexible on the timing\n  - When you're hyperfocuses still use a timer to get a break after a longer time\n- Look for Sidequests (Captivate)\n  - Can be a danger since you can get totally sidetracked\n  - But can be useful to get motivation/momentum for the project you **have** to do\n  - Maybe set a timer, too\n- Micro Commitments (Complete)\n  - Just commit to do 2 dishes or so - and feel free to walk away !\n  - If you're lucky you built up enough momentum to do all of it.. or a lot...\n    - but it's ok if not!\n- Change your environment (Create)\n  - Sometimes try to work in a coffee shop\n- Make tests & Paperwork into a game (Create)\n  - Maybe just answer every other question... or answer them backwards\n  - Maybe set a timer to get some urgency\n- Set time-based goals\n  - I'm going to clean the office for 10 minutes\n\n---\n## My Questions, Thoughts, Comments\n- Putting lots of energy (almost to an obsessive extent) into \"that new idea that might finally work\" is a very familiar\n  experience for me... Both happened with Getting Things Done and even with starting to use Dendron and earlier Emacs\n- Listing up all the steps and the demotivation coupled with that - makes software estimation quite difficult for me -\n  I want to find a good process for that.\n","n":0.034}}},{"i":344,"$":{"0":{"v":"Tips from Twitter People","n":0.5},"1":{"v":"\n# Tips from Twitter People\n\nhttps://mobile.twitter.com/jessejanderson/status/1509640386116927503\n\n- I write a list of all the things I need to do and a list of all the things I want to do, and I do a fun one first\n  followed by a work one, and so on. This method kick starts the day with a fun thing, then rewards me for doing boring\n  tasks by getting to do more fun things!\n- Having less time available makes me more productive. Getting temp office work has given me the structure and urgency\n  I need to fit in my freelance and personal projects, which I was struggling to get done when I had the whole day at\n  home.\n- You need to _embrace_ the things that are fun and interesting, not try focus on the hard stuff first.\n- “Make the consequence hurt more.” has never motivated me, it just makes the consequence hurt more. 🙃 Instead, I try\n  to make consequences light, but drum up the urgency with timers, public accountability, etc.\n- I determine when is \"The absolute last second\" I can start a project and have it done on time.\n- Reward yourself before doing something not after. Our brains don't really believe in the future.\n- Follow the distractions! This is how I get tons of work done both for my job and at home. Sometimes, it's not the\n  worst thing to just allow yourself to be distracted by things (within reason) and go with the flow of it. If it's\n  truly urgent it will come up again\n- Inspiration is perishable, so following immediate “distractions” can lead to great productivity; just not necessarily\n  in the direction you might have planned, or expected. Stay agile, and see where it takes you.\n- Sometimes I do a \"Ta da!\" list where I just write down things I've already done and check them off. Makes the list a\n  lot less intimidating when most of the things are checked off.\n- Stay up super late if it means you’re going to finish something. Because once you get out of the zone, it’s so hard\n  to get back in!\n- Compartmentalize. ADHD sufferers get hit with executive dysfunction REALLY easily. Not just because a job is huge,\n  but because it contains a dozen other jobs we might find ourselves being pulled into.\n- I make everything ritualistic so I never have to DECIDE to do something.\n  Every Tuesday I go grocery shopping.\n  Every Friday I put gas in my car.\n  Every Sunday I do laundry.\n  When I turn off the lights at night, I put new coffee grounds in the pot.\n  Every time.\n","n":0.048}}},{"i":345,"$":{"0":{"v":"Inbox","n":1}}},{"i":346,"$":{"0":{"v":"Writing","n":1}}},{"i":347,"$":{"0":{"v":"Königsgarde","n":1},"1":{"v":"\n# Königsgarde\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/k5WA-Qve1Fo\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\nIch ritt einst hoch zu Ross<br/>\nDer Wind blies mir ins Gesicht<br/>\nIch eilte mit ihm dahin<br/>\nMit wild entschlossenem Blick<br/>\nVoller Mut und mit Zuversicht darin\n\nIn dieser schlimmen Zeit<br/>\nAls meine Suche begann<br/>\nWaren wir vom Krieg verbrannt<br/>\nIch suchte nach Treu, nach Ehr<br/>\nNach einem Felsen, der hätt Bestand\n\nEin Hoch auf euch, gebt mir Geleit<br/>\nUnd wir kämpfen Seit an Seit<br/>\nDen Schwur besiegelt unser Blut, so rot<br/>\nEin Hoch darauf, dass ich euch fand<br/>\nUnd fest gewoben ist das Band<br/>\nDass uns verbindet auch in größter Not\n\nDoch alles, was ich fand<br/>\nWar Neid und Missgunst und Kampf<br/>\nDer Mensch dem Mensch zum Feinde<br/>\nBis ich sie endlich fand<br/>\nDie Menschen seelenverwandt, ein Kreis\n\nVon Rittern, Edelleut<br/>\nZu bringen Friede ins Land<br/>\nMit reinem Herz und Geiste<br/>\nVom König ausgesandt<br/>\nDie Königsgarde genannt<br/>\nIch neu begann, woah\n\nEin Hoch auf euch, gebt mir Geleit<br/>\nUnd wir kämpfen Seit an Seit<br/>\nDen Schwur besiegelt unser Blut, so rot　(Das Blut so rot)<br/>\nEin Hoch darauf, dass ich euch fand<br/>\nUnd fest gewoben ist das Band<br/>\nDass uns verbindet auch in größter Not\n\nEin Hoch darauf, dass ich euch fand<br/>\nUnd fest gewoben ist das Band<br/>\nDass uns verbindet auch in größter Not<br/>\n(In größter Not)\n","n":0.073}}},{"i":348,"$":{"0":{"v":"悪魔の子 (Devil's Child)","n":0.577},"1":{"v":"\n## 悪魔の子 (Devil's Child)\n\n(Attack on Titan Final season spoilers - [this](https://www.youtube.com/watch?v=N4F3bjlL_H4) is the spoilerfree\nofficial music video)\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/WPl10ZrhCtk\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n## Japanese lyrics\n鉄の弾が 正義の証明<br/>\n貫けば 英雄に近づいた<br/>\nその目を閉じて 触れてみれば<br/>\n同じ形 同じ体温の悪魔\n\n僕はダメで あいつはいいの?<br/>\nそこに壁があっただけなのに<br/>\n生まれてしまった 運命嘆くな<br/>\n僕らはみんな 自由なんだから\n\n鳥のように 羽があれば<br/>\nどこへだって行けるけど<br/>\n帰る場所が なければ<br/>\nきっとどこへも行けない\n\nただただ生きるのは嫌だ\n\n世界は残酷だ それでも君を愛すよ<br/>\nなにを犠牲にしても それでも君を守るよ<br/>\n間違いだとしても 疑ったりしない<br/>\n正しさとは 自分のこと 強く信じることだ\n\n鉄の雨が 降り散る情景<br/>\nテレビの中 映画に見えたんだ<br/>\n戦争なんて 愚かな凶暴<br/>\n関係ない 知らない国の話\n\nそれならなんで あいつ憎んで<br/>\n黒い気持ち 隠しきれない理由<br/>\n説明だって できやしないんだ<br/>\n僕らはなんて 矛盾ばっかなんだ\n\nこの言葉も 訳されれば<br/>\n本当の意味は伝わらない<br/>\n信じるのは その目を開いて<br/>\n触れた世界だけ\n\nただただ生きるのは嫌だ\n\n世界は残酷だ それでも君を愛すよ<br/>\nなにを犠牲にしても それでも君を守るよ<br/>\n選んだ人の影 捨てたものの屍<br/>\n気づいたんだ 自分の中 育つのは悪魔の子\n正義の裏 犠牲の中 心には悪魔の子\n\n## Official translated lyrics\n\nAn iron bullet is proof of justice.<br/>\nWhenever I shot I became closer to the hero.<br/>\nIf you close your eyes and touch it,<br/>\nThe evil who has the same body and the same temperature.\n\nAm I not good enough and is he better for you?<br/>\nThere was just a wall.<br/>\nDon’t cry about the destiny we were born with.<br/>\nCause we are all free.\n\nIf we have wings like birds,<br/>\nWe could go anywhere.<br/>\nIf we don’t have a place to return to,<br/>\nWe might not be able to go anywhere.\n\nI don’t want to just live.\n\nThis world is cruel but I still love you.<br/>\nEven if I sacrifice everything, I will protect you.<br/>\nEven if this is a mistake, I don’t doubt it.<br/>\nWhat is right is believing in myself strongly.\n\nThe scene of the rain of iron falling.<br/>\nIt was on the TV, which looks like a movie.<br/>\nWar is a stupid violence.<br/>\nIt’s the story of an unrelated and unknown country.\n\nThen why do I hate him,<br/>\nThe reason why I can’t hide my dark feelings,<br/>\nI can’t even explain why.<br/>\nHow come we are full of contradictions?\n\nOnce this word is translated,<br/>\nThe real meaning won’t be understood.<br/>\nWhat I believe is, when opening your eyes,<br/>\nOnly the world you touch.\n\nI don’t want to just live.\n\nThis world is cruel but I still love you.<br/>\nEven if I sacrifice everything, I will protect you.<br/>\nThe shadow of the person whom I chose, the corpse of what I threw.<br/>\nI noticed that what is growing inside me is the child of evil.<br/>\nBehind justice, inside of sacrifice, there is a child of evil inside my heart.\n","n":0.057}}},{"i":349,"$":{"0":{"v":"Webcomics","n":1}}},{"i":350,"$":{"0":{"v":"Vattu","n":1},"1":{"v":"# Vattu\n\n![](http://www.rice-boy.com/vattu/new1.jpg)\n\nVattu is an award-winning anthropological fantasy epic; a story following a member of a nomadic culture caught in the\nmidst of a clash of cultures. It was started in July 2010 and is updated three times a week.\n\nJust finished in 2022\n\nhttp://rice-boy.com/vattu/\n","n":0.156}}},{"i":351,"$":{"0":{"v":"Octopus Pie","n":0.707},"1":{"v":"\n# Octopus Pie\n\nhttps://www.octopuspie.com/2007-05-14/001-pea-wiggle/\n\nWith commentary: https://www.octopuspie.com/2018-03-19/001-pea-wiggle-2/\n","n":0.447}}},{"i":352,"$":{"0":{"v":"Videos","n":1}}},{"i":353,"$":{"0":{"v":"TED: Want to get great at something? Get a Coach","n":0.316},"1":{"v":"\n# TED: Want to get great at something? Get a Coach\n\nhttps://www.ted.com/talks/atul_gawande_want_to_get_great_at_something_get_a_coach\n","n":0.302}}},{"i":354,"$":{"0":{"v":"Artificial Life Simulation","n":0.577},"1":{"v":"\nhttps://www.youtube.com/watch?v=0Kx4Y9TVMGg\n","n":1}}},{"i":355,"$":{"0":{"v":"Technologies","n":1}}},{"i":356,"$":{"0":{"v":"my mind","n":0.707},"1":{"v":"\nhttps://mymind.com/\n\nAI powered note taking/organization tool\n","n":0.447}}},{"i":357,"$":{"0":{"v":"GitHub Next","n":0.707},"1":{"v":"\nhttps://githubnext.com/\n\n> GitHub Next investigates the future of software development. We explore things beyond the adjacent possible. Tools and technologies that will change our craft. New approaches to building healthy, productive software engineering teams.\n\n- Repository visualization\n- Flat Data\n","n":0.164}}},{"i":358,"$":{"0":{"v":"Github Metrics Generator","n":0.577},"1":{"v":"\nhttps://github.com/lowlighter/metrics/\n\n> Generate metrics that can be embedded everywhere, including your GitHub profile readme!\n  Supports users, organizations, and even repositories!\n","n":0.229}}},{"i":359,"$":{"0":{"v":"Framer Animation Library","n":0.577},"1":{"v":"# Framer Animation Library\nhttps://www.framer.com/motion/\n\nDeclarative animations\n","n":0.447}}},{"i":360,"$":{"0":{"v":"Podcast","n":1}}},{"i":361,"$":{"0":{"v":"Untangled Faith","n":0.707},"1":{"v":"\nAbout Spritual Abuse by Amy Fritz\n","n":0.408}}},{"i":362,"$":{"0":{"v":"Design Details - Principles of Design","n":0.408},"1":{"v":"\n# Design Details - Principles of Design\n\nhttps://designdetails.fm/episodes/220880\n\n### Where I found this:\n\nMentioned as one of the recommended episodes to begin with on [Design Details](https://designdetails.fm/), since I'm\nthinking about UI design at the moment, that might be useful\n","n":0.169}}},{"i":363,"$":{"0":{"v":"Design Details - Incremental Correctness","n":0.447},"1":{"v":"\n# Design Details - Incremental Correctness\n\nhttps://designdetails.fm/episodes/113490\n\n1:40h podcast with Guillermo Rauch mentioning the concept of Incremental correctness\n\n### Where I found this:\n\nReferenced in [[inbox.reading.misc.brian-lovin-writing]] ->\n[Incrementally correct personal websites](https://brianlovin.com/writing/incrementally-correct-personal-websites)\n","n":0.196}}},{"i":364,"$":{"0":{"v":"Misc","n":1}}},{"i":365,"$":{"0":{"v":"The Compendium","n":0.707},"1":{"v":"\n# The Compendium\n\nhttps://thecompendium.cards/c/what-is-this\n\n- Knowledge Web of index cards\n","n":0.354}}},{"i":366,"$":{"0":{"v":"Skill Share","n":0.707},"1":{"v":"\n# Skill Share\n\nCourse portal for creatives\n\nhttps://skl.sh/designdoc08211\n","n":0.408}}},{"i":367,"$":{"0":{"v":"Games","n":1}}},{"i":368,"$":{"0":{"v":"Open Source Games List","n":0.5},"1":{"v":"# Open Source Games List\nhttps://trilarion.github.io/opensourcegames/\n","n":0.447}}},{"i":369,"$":{"0":{"v":"Game Bundle Games","n":0.577},"1":{"v":"\nhttps://tomalexi.itch.io/\n\n- Curated picks from the Racial Justice Bundle\n","n":0.354}}},{"i":370,"$":{"0":{"v":"Fumble","n":1},"1":{"v":"\n# Fumble\n\nFumble is a puzzle game about how it feels to struggle to talk. It tells the story of someone suffering from social\nanxiety without realising it.\n\nhttps://namidasai.itch.io/fumble\n","n":0.196}}},{"i":371,"$":{"0":{"v":"Reading","n":1}}},{"i":372,"$":{"0":{"v":"Work","n":1}}},{"i":373,"$":{"0":{"v":"Dendron Handbook","n":0.707},"1":{"v":"\nhttps://handbook.dendron.so/\n\n- Values, work methods of the Dendron company\n","n":0.354}}},{"i":374,"$":{"0":{"v":"Theology","n":1}}},{"i":375,"$":{"0":{"v":"LOST: Bring mich heim Sinnsuchergeschichten","n":0.447},"1":{"v":"\nhttps://www.amazon.de/LOST-Bring-mich-heim-Sinnsuchergeschichten/dp/3765521329\n\n> LOST ist ein Reiseführer für alle, die sich auf ihrer Reise zum Sinn des Lebens verlaufen haben. Thomas Meyerhöfer hat\n ein Herz für Verirrte. Und einen besonderen Blick für Alltägliches. Der Paketbote, die Frau an der Supermarktkasse,\n eine abenteuerliche Busfahrt – verschmitzt und liebevoll beobachtet, schildert und kommentiert Thomas Meyerhöfer sein\n Umfeld. Und baut aus banalem Alltag heraus Brücken zu tiefen biblischen Weisheiten. Erfrischend ehrlich und unfromm,\n aber mit viel Tiefgang. Ein Genuss – auch für Menschen ohne Bibelwissen.\n","n":0.112}}},{"i":376,"$":{"0":{"v":"Joschua's Garden","n":0.707},"1":{"v":"\nhttps://joschuasgarden.com/50+Slipbox/Welcome!\n\n- Connected Biblical Thinking\n- Bible Study Kit\n","n":0.378}}},{"i":377,"$":{"0":{"v":"Fully Human and Truly Human: Grasping the Image of God—and of Christ","n":0.289},"1":{"v":"\n# Fully Human and Truly Human: Grasping the Image of God—and of Christ\n\nhttps://www.thegospelcoalition.org/article/fully-human-truly-human-understanding-image-god-image-christ/\n\n- What does it mean to be in the Image of God\n","n":0.204}}},{"i":378,"$":{"0":{"v":"A Multitude of All Peoples","n":0.447},"1":{"v":"\n[A Multitude of All Peoples: Engaging Ancient Christianity's Global Identity](https://www.amazon.com/Multitude-All-Peoples-Christianitys-Missiological/dp/0830851070)\n\n> Christianity is not becoming a global religion. It has always been a global religion. The early Christian movement\nspread from Jerusalem in every direction, taking on local cultural expression all around the ancient world. So why do\nso many people see Christianity as a primarily Western, white religion?\n","n":0.134}}},{"i":379,"$":{"0":{"v":"Science","n":1}}},{"i":380,"$":{"0":{"v":"Wizard's Guide to Statistics","n":0.5},"1":{"v":"\n# Wizard's Guide to Statistics\n\nhttps://cassandraxia.com/wizard/\n\n- Online game to learn statistics\n","n":0.316}}},{"i":381,"$":{"0":{"v":"Quantum Well","n":0.707},"1":{"v":"\nhttps://publish.obsidian.md/myquantumwell/Welcome+to+The+Quantum+Well!\n\n- Digital Garden with math, physics notes\n","n":0.378}}},{"i":382,"$":{"0":{"v":"Misc","n":1}}},{"i":383,"$":{"0":{"v":"swyx's second brain","n":0.577},"1":{"v":"\nhttps://publish.obsidian.md/swyx/README\n\nDigital Garden\n","n":0.707}}},{"i":384,"$":{"0":{"v":"Storyworthy","n":1},"1":{"v":"\n# Storyworthy\n\nEngage, Teach, Persuade, and Change Your Life through the Power of Storytelling\n\nWhether we realize it or not, we are always telling stories. On a first date or job interview, at a sales presentation\nor therapy appointment, with family or friends, we are constantly narrating events and interpreting emotions and\nactions. In this compelling book, storyteller extraordinaire Matthew Dicks presents wonderfully straightforward and\nengaging tips and techniques for constructing, telling, and polishing stories that will hold the attention of your\naudience (no matter how big or small). He shows that anyone can learn to be an appealing storyteller, that everyone has\nsomething “storyworthy” to express, and, perhaps most important, that the act of creating and telling a tale is a\npowerful way of understanding and enhancing your own life.\n\n## How I learned about it?\n\nFrom the Extra Focus Newsletter on 2022-05-25\n\nWriting down one story a day.\n","n":0.085}}},{"i":385,"$":{"0":{"v":"Nitin Pais Notes","n":0.577},"1":{"v":"\nhttps://notes.nitinpai.in/Start+Here\n","n":1}}},{"i":386,"$":{"0":{"v":"Maggie Appleton","n":0.707},"1":{"v":"\nhttps://maggieappleton.com/\n\n- History of the Digital Garden\n- etc\n","n":0.378}}},{"i":387,"$":{"0":{"v":"Kaans Recipes","n":0.707},"1":{"v":"\nhttps://bgenc.net/recipes/\n\nDigital garden with cooking recipes\n","n":0.447}}},{"i":388,"$":{"0":{"v":"JT's Digital Garden","n":0.577},"1":{"v":"\nhttps://notes.gnotract.com/00+%F0%9F%A4%AF+Meta/%F0%9F%93%8C+Landing+Page\n","n":1}}},{"i":389,"$":{"0":{"v":"Gwern Branwen","n":0.707},"1":{"v":"\nhttps://www.gwern.net/index\n\n- Statistics\n- Technology\n- Article about the statistics of the information bits Kira lost to L in Death Note\n","n":0.236}}},{"i":390,"$":{"0":{"v":"Four Thousand Weeks","n":0.577},"1":{"v":"\n# Four Thousand Weeks\n\n[Amazon](https://www.amazon.co.jp/-/en/Oliver-Burkeman/dp/1784704008)\n\nBattling an overfilled inbox?\nYour ever-lengthening to-do lists?\nStruggling against distraction?\nWhat if you tried to stop doing everything, so you could finally get round to what counts?\n\nIf you live to 80, you'll have barely more than four thousand weeks on earth. How will you decide how to spend them?\n\nRejecting the futile modern obsession with 'getting everything done,' Four Thousand Weeks introduces readers to tools\nfor constructing a meaningful life by embracing rather than denying their limitations.\n\nDrawing on the insights of both ancient and contemporary philosophers, psychologists, and spiritual teachers, Oliver\nBurkeman sets out to realign our relationship with time - and in doing so, to liberate us from its tyranny.\n\n## How I learned about it?\n\nFrom the Extra Focus Newsletter on 2022-05-25\n","n":0.091}}},{"i":391,"$":{"0":{"v":"Eleanor's Notes","n":0.707},"1":{"v":"\n\n\nhttps://publish.obsidian.md/eleanorkonik/00+Meta/03+Structure/Welcome\n\n- Writing etc\n","n":0.577}}},{"i":392,"$":{"0":{"v":"Cerebrarium","n":1},"1":{"v":"\nhttps://cerebrarium.garden/\n","n":1}}},{"i":393,"$":{"0":{"v":"Brian Lovin Writing","n":0.577},"1":{"v":"\n# Brian Lovin Writing\n\nhttps://brianlovin.com/writing\n\n### Where I found this:\n\nReferenced in [[reference.literature-notes.mister-chads-digital-garden]] ->\n[Keeping a personal blog](https://mister-chad.com/mind+gardens/keeping+a+personal+blog)\n","n":0.267}}},{"i":394,"$":{"0":{"v":"Beating the Averages","n":0.577},"1":{"v":"\nhttp://www.paulgraham.com/avg.html\n","n":1}}},{"i":395,"$":{"0":{"v":"Andy Matuschak's 2021 Review","n":0.5},"1":{"v":"\nhttps://andymatuschak.org/2021/\n","n":1}}},{"i":396,"$":{"0":{"v":"Alexis Rondeau Digital Garden","n":0.5},"1":{"v":"\nhttps://publish.obsidian.md/alexisrondeau/Welcome+to+my+digital+garden\n","n":1}}},{"i":397,"$":{"0":{"v":"22 Years of Emacs","n":0.5},"1":{"v":"\n# 22 Years of Emacs\n\nhttps://arjenwiersma.nl/writeups/emacs/22-years-of-emacs/\n","n":0.447}}},{"i":398,"$":{"0":{"v":"Creativity","n":1}}},{"i":399,"$":{"0":{"v":"Writing Habit","n":0.707}}},{"i":400,"$":{"0":{"v":"James Clear on Creativity","n":0.5},"1":{"v":"\nhttps://jamesclear.com/creativity\n","n":1}}},{"i":401,"$":{"0":{"v":"PKM","n":1}}},{"i":402,"$":{"0":{"v":"Zsolt's Visual Personal Knowledge Management","n":0.447},"1":{"v":"\nYoutube Channel\nhttps://www.youtube.com/c/VisualPKM\n","n":0.707}}},{"i":403,"$":{"0":{"v":"The PARA Method: A Universal System for Organizing Digital Information","n":0.316},"1":{"v":"\nhttps://fortelabs.co/blog/para/\nhttps://www.lucapallotta.com/para/\n\n- organizational system\n- Projects, Areas, Resources, Archives\n","n":0.378}}},{"i":404,"$":{"0":{"v":"Mental Nodes","n":0.707},"1":{"v":"\nhttps://www.mentalnodes.com/\n","n":1}}},{"i":405,"$":{"0":{"v":"Learn in Public","n":0.577},"1":{"v":"\n# Learn in Public\n\nhttps://www.swyx.io/learn-in-public/\n\n- About creating content from what you learn as a habit\n","n":0.267}}},{"i":406,"$":{"0":{"v":"Johnny Decimal","n":0.707},"1":{"v":"\n\nhttps://johnnydecimal.com/\n\n- number system to organize projects\n","n":0.408}}},{"i":407,"$":{"0":{"v":"Incremental Learning (SuperMemo 16)","n":0.5},"1":{"v":"\nhttp://super-memory.com/help/il_full.htm#General_outline_of_incremental_learning\n\n- Use a spaced repetition system to read/learn many texts in parallel and incrementally\n","n":0.267}}},{"i":408,"$":{"0":{"v":"Idea Emergence","n":0.707},"1":{"v":"\n# Idea emergence\n\nhttps://twitter.com/NickMilo/status/1317190776284086272\n\nTwitter thread by Nick Milo on how fleeting small thoughts become MOCs and eventually the Home Note.\n","n":0.229}}},{"i":409,"$":{"0":{"v":"Digital Gardeners Repository","n":0.577},"1":{"v":"\nhttps://github.com/MaggieAppleton/digital-gardeners\n","n":1}}},{"i":410,"$":{"0":{"v":"Dewey Decimal Classification","n":0.577},"1":{"v":"\n\nhttps://en.wikipedia.org/wiki/Dewey_Decimal_Classification\n\nNumber system used internationally in libraries\n","n":0.408}}},{"i":411,"$":{"0":{"v":"As We May Think","n":0.5},"1":{"v":"\nhttps://www.theatlantic.com/magazine/archive/1945/07/as-we-may-think/303881/\n\nAs we may think by Vannevar Bush\n\nVisionary Essay from 1945 anticipating many aspects of information society\n","n":0.25}}},{"i":412,"$":{"0":{"v":"Anthony Agbay's Digital Garden","n":0.5},"1":{"v":"\nhttps://walkintheforest.com/Content/%F0%9F%91%8B%F0%9F%8F%BD+Welcome\n","n":1}}},{"i":413,"$":{"0":{"v":"Andy's Working Notes","n":0.577},"1":{"v":"\n# Andy's Working Notes\n\nhttps://notes.andymatuschak.org/About_these_notes\n\n- Evergreen notes\n- How to take notes while reading\n- How to process those notes\n","n":0.243}}},{"i":414,"$":{"0":{"v":"AI","n":1}}},{"i":415,"$":{"0":{"v":"Inventing Relational State and Action Abstractions for Effective and Efficient Bilevel Planning","n":0.289},"1":{"v":"\n# Inventing Relational State and Action Abstractions for Effective and Efficient Bilevel Planning\n\nhttps://arxiv.org/pdf/2203.09634.pdf\n\n- Derive Symbolic Representations from continuous (real world) spaces\n- Recent Paper (March 2022)\n","n":0.2}}},{"i":416,"$":{"0":{"v":"Gamedev","n":1}}},{"i":417,"$":{"0":{"v":"Multiagent Memory Architecture","n":0.577},"1":{"v":"# Multiagent Memory Architecture\n\n## Memory Stream\n- All observations are stored in the memory stream\n- Memories have properties:\n  - Recency: When was the memory last retrieved - exponential decay\n  - Importance: How important the event is (eating breakfast on a normal day vs breaking up with your SO)\n  - Relevance: Relevance to a certain situation - basically similarity to a query to the memory stream\n- Calculate a score for each memory with those weighted properties\n- Add the most relevant k memories to the active memory which is used for reasoning\n\n## Reflections\n- Reflect when the sum of importance scores for recent events surpasses a threshold (something important happened)\n- Determine questions to ask about those memories:\n  - Ask LLM: Given only the information above what are 3 most salient high-level questions we can answer about the\n    subject?\n- Extract insights as answers to those questions:\n  - Ask LLM: What high level insights can you infer from above statements (example format: insight (because of 1, 5, 3))\n\n## Planning\n- A plan is: Action + Location, starting time, duration\n- Plans are also stored in the memory stream\n- Make a general agenda for the day:\n  - Ask LLM: Given agent description + short summary of previous day what would be the rough agenda for today\n- Decompose the agenda into hour long chunks and then little chunks from 5-15 min\n\n## Reacting:\n- Ask LLM:\n  - Given:\n    - Current date & time\n    - What agent just did\n    - What agent just observed\n    - relevant context from agent's memory (query Memory stream)\n      - What is agent's relationship with observed entity\n      - Observed entity is currently doing/being (current action/status)\n  - Ask: Should agent react to the observation and if so what would be the appropriate reaction\n- Then rebuild plan from time after reaciton\n\n## Dialogues\n- Ask LLM:\n  - Same context as with reacting\n  - Describe the dialogue action the agent is about to take (e.g. ask about music project) and ask what they would say\n\n\nSource: [Generative Agents: Interactive Simulacra of Human Behavior](https://arxiv.org/abs/2304.03442)\n","n":0.055}}},{"i":418,"$":{"0":{"v":"Template","n":1}}},{"i":419,"$":{"0":{"v":"Literature Note","n":0.707},"1":{"v":"\n# Author - Title\n\n![Book cover](link-to-amazon-picture){ height: 200px; }\n\n[Amazon](link-to-amazon)\n\n**Current position:** Chapter 1\n\n## My Summary\n\n---\n\n## Content Part 1\n\n---\n\n\n## My Questions, Thoughts, Comments\n","n":0.224}}},{"i":420,"$":{"0":{"v":"Bible Chapter","n":0.707},"1":{"v":"# (Chapter name)\n\n[ESV](https://www.biblegateway.com/)\n\n## My Summary\n\n## Central verses for me\n","n":0.333}}},{"i":421,"$":{"0":{"v":"Bible Book","n":0.707}}},{"i":422,"$":{"0":{"v":"Someday","n":1},"1":{"v":"\n# Gamedev\n- [[areas.gamedev.narrative-generation]]\n- Languages that compile to C for C Extensions:\n  - [Crystal](https://crystal-lang.org/)\n  - [Nim](https://nim-lang.org/)\n  - [Zig](https://ziglang.org/)\n  - [D](https://dlang.org/)\n  - Rust\n\n## Procgen\n- ![Youtube Icon](assets/youtube-icon.svg){height: 1rem}\n  [Painting a Landscape with Maths](https://www.youtube.com/watch?v=BFld4EBO2RE)\n\n## Math\n- [3D Math Primer for Game Dev (Online Book)](https://gamemath.com/book/intro.html)\n\n# Other Dev\n- [DreamBerd programming language](https://github.com/TodePond/DreamBerd)\n  > Crazy (theoretical) programming language by Lu Wilson\n- C4 Model for visualizing Software Architecture: https://c4model.com/\n\n# Video Games\n- Persona 4\n- Persona 5 Royal\n- Xenoblade Chronicles DE\n- FF7 Remake (PS5)\n- Elden Ring (PS5)\n- Tales of Vesperia\n- Yakuza Series\n- Nier: Automata\n- 13 Sentinels: Aegis Rim\n- Summer in Mara (owned)\n- Final Fantasy Tactics (owned)\n- Breath of Fire 4 (owned)\n- Suikoden 1+2\n- Horizon: Forbidden West\n- Super Mario Odyssey\n- Kirby and the Forgotten Land\n- Rimworld\n- Mass Effect Legendary Edition\n- Tactics Ogre Reborn\n- Triangle Strategy\n- Live a Live (Switch)\n- Chained Echoes\n- Octopath Traveler 1 + 2\n\n- Eternal Cylinder\n- Castlevania: Symphony of the Night\n- Mother 3\n\n- Stanley Parable: Ultra Deluxe\n- Skyrim\n- Spore\n\n\n## Replay\n- Terranigma\n- Chrono Trigger\n- Morrowind\n- Oblivion\n- Aquaria\n\n## Misc Owned\n\n### Steam\n- 2064: ROM\n- Achron\n- Age of Empires 2\n- Day of the Tentacle\n- Deus Ex\n- Divinity Original Sin 2\n- Fahrenheit\n- Finding Paradise\n- FTL\n- GTA 4\n- Guacamelee\n- Hyperlight Drifter\n- Invisible Inc\n- The Last Remnant\n- Mushroom 11\n- No time to Explain\n- OneShot\n- Psychonauts\n- Papo and Yo\n- Sproggiwood\n- Vanishing of Ethan Carter\n- Jupiter Hell\n- Jack Move\n\n### Epic\n- A Plague Tale\n- Adios\n- Alba\n- Aven Colony\n- Cities Skylines\n- City of Brass\n- City of Gangsters\n- Control\n- Crying Suns\n- Dandara\n- Death Stranding\n- Deponia\n- Dishonored\n- Duskers\n- Europa Universalis 4\n- Encased\n- Fallout\n- Filament\n- Galactic Civiliazations 3\n- Gamedec\n- Gloomhaven\n- Halcyon 6\n- Hitman\n- Idle Champions\n- Insurmountable\n- Into the Breach\n- Jotun\n- Jurassic World\n- Kerbal Space Program\n- Minit\n- Neon Abyss\n- Nioh\n- Pathfinder\n- Pine\n- Rebel Galaxy\n- Rise of the Tomb Raider\n- Rogue Legaxy\n- RPG in a Box\n- Sable\n- Salt and Sanctuary\n- Saints Row\n- Shadow Tactic\n- Shadow of the Tomb Raider\n- Shadowrun Hong Kong\n- Shadowrun Returns\n- Shadowrun Dragonfall\n- Sheltered\n- Shenmue 3\n- Spirit of the North\n- Star Wars Squadrons\n- Star Wars Battle Front\n- Submerged\n- Sunless Sea\n- Supraland\n- Surviving Mars\n- Tales of the Neon Sea\n- The Captain\n- The Escapists\n- The Fall\n- The First Tree\n- The Lion's Song\n- Sims 4\n- The Spectrum Retreat\n- Tomb Raider\n- Total War Wahrhammer\n- Warhammer Mechanicus\n- Windbound\n- Wonderboy\n- XCOM 2\n- Unrailed\n- Vampyr\n- Yooku's Island Express\n- Yooka Laylee\n- Rise of Industry\n- Call of the Sea\n- Gladius: Relics of War\n- Tunche\n- Shapez\n- Breathedge\n- Kao the Kangaroo\n- Dungeon of Naheulbeuk\n- Train Valley 2\n- Murder by numbers\n- The Elder Scrolls Online\n- Homeworld\n\n### Itch.io\n- Jimmy and the Pulsating Mass\n- A Morticians Tale\n- Shattered Planet\n- Superhot\n- Inmost\n- Wandersong\n- Backbone\n- Odd Realm\n- Figment (Ukraine Bundle)\n- Ynglet (Ukraine Bundle)\n- A Short Hike\n- Long GOne Days (Ukraine Bundle)\n- Lenna's Inception (Ukraine Bundle)\n- Pyre\n- Danger Crew\n- Gutwhale\n- Stardrop\n- Oxenfree\n- Night in the Woods\n- Overland\n- Stereogram by Daniel Linnsen\n- Tiny Talents: https://cilerba.itch.io/tiny-talents\n  > Tiny Talents is a small game focused on growing your pet's various skills by feeding it candy.\n\n## Knowledge Puzzle / Metroidbrainia / Outer Wilds-itch\n- The Forgotten City\n- Return of the Obra Dinn\n- The case of the golden idol\n- The Sinking City\n- Sherlock Holmes\n- Heaven's Vault\n- Her Story (owned)\n- Telling Lies\n- Sorcery!\n- Overboard!\n- FEZ\n- The Witness (owned)\n- Riven\n\n## Old games\n- Caesar 2-3\n- Deus Ex\n\n### GBA\n- Golden Sun 1+2\n- Minish Cap\n- Castlevania Circle of the Moon\n- Castlevania Harmony of Dissonance\n- Castlevania Aria of Sorrow\n- Advance Wars 1+2\n- Super Dodgeball Advance\n- Metroid Fusion\n- Metroid Zero Mission\n- Boktai 1-3\n- Mother 3\n- Fire Emblem: The Binding Blade\n- Fire Emblem: The Blazing Blade\n- Fire Emblem: The Sacred Stones\n- Kirby & Amazing Mirror\n- Megaman Battle Network\n- Wario Ware\n- Legacy of Goku 1-3\n-\n\n### Point-and-Click\n- Baphomets Fluch 1-2.5\n- The longest journey / Dreamfall\n- Beneath a Steel Sky / Beyond a Steel Sky\n- Bifi Action in Hollywood\n- Telekommando 2\n- Simon the Sorcerer 1/2\n\n### RTS\n- Command and Conquer\n- Starcraft, Starcraft 2, Starcraft: Mass Recall (sc2 remake of SC campaign)\n\n# Books\n\n## Gamedev\n- Art and Fear (not directly gamedev but art)\n- The Art of Game Design: A Book of Lenses, Third Edition\n- Game Feel: A Game Designer's Guide to Virtual Sensation\n- Rules of Play: Game Design Fundamentals\n- [The Story Solution: 23 Actions All Great Heroes Must Take](https://www.goodreads.com/book/show/12493044-the-story-solution)\n\n## Other Dev\n- Working effectively with Legacy Code\n- Object Oriented Reengineering Patterns\n- xUnit Test patterns\n- A philosophy of software design\n- Agile estimating and planning\n\n## Theology / Christian\n- Gentle and Lowly: The Heart of Christ for Sinners and Sufferer\n- Rachel Held Evans\n- Jesus and John Wayne\n- The Making of Biblical Manhood and Womanhood\n- King Jesus Gospel\n- Paul the Biography (N.T. Wright)\n- Henri Nouwen\n- Arno Backhaus - Keine Panik, ehrliche Spiegel altern immer mit!: Meine Rück-Sicht auf Lust und Frust\n\n## Fiction\n- [The Licanius Trilogy by James Islington](https://www.goodreads.com/series/136308-the-licanius-trilogy)\n  - Time Travel, Magic, found on Joschuas Garden\n- Tomorrow, and Tomorrow, and Tomorrow\n  - Two friends, often in love, never lovers, come together as creative partners in the world of video game design\n- https://en.wikipedia.org/wiki/Graham_Greene\n- Wallace Stegner: Crossing to Safety\n- Ender's Game\n- Time Travel\n  - Replay - Ken Grimwood\n- Cosmere\n  - Warbreaker\n  - Words of Radiance\n  - Arcanum Unbounded: Stormlight parts\n  - Oathbringer\n  - Dawnshard\n  - Elantris (?)\n  - White Sand (?)\n  - Rhythm of War\n  - The Lost Metal (one more time)\n  - Tress of the Emerald Sea\n- Ray Bradbury\n  - The October Country: Stories\n  - The Illustrated Man\n\n## Non-Fiction\n- [Incerto Series by Nassim Nicholas Taleb](https://www.amazon.co.jp/dp/B07WZK6Z9N)\n  - Fooled by Randomness: The Hidden Role of Chance in Life and in the Markets\n  - The Black Swan: The Impact of the Highly Improbable\n  - Antifragile: Things That Gain from Disorder\n  - The Bed of Procrustes: Philosophical and Practical Aphorisms\n  - Skin in the Game: Hidden Asymmetries in Daily Life\n\n# TV Series\n- Star Trek Voyager\n- Star Trek Enterprise\n- Star Trek Discovery\n- Star Trek Picard\n- Star Trek: Strange New Worlds\n- Better Call Saul\n- Dexter\n- Quantum Leap\n  > Former scientist Sam Beckett finds himself trapped in time due to an experiment gone awry, leaping into the body of\n    a different person each week\n- The Expanse\n- Interview with A Vampire (2022)\n- Severance\n- The Time Traveler's Wife\n- The Adventures of Sherlock Holmes (1984 series) - Jeremy Brett\n- Star Trek: Strange New Worlds\n\n## Comedy / Sitcom\n- Parks and Rec\n- 30 Rock\n- Superstore\n- New Girl\n- Coupling (UK)\n- Resident Alien\n\n## Animation\n- Steven Universe\n- Adventure Time\n- Amphibia\n- Owl House\n\n## Anime\n- One Piece\n- Jujutsu Kaisen\n- Demon Slayer\n- Shaman King\n- Please Save My Earth\n\n# Articles\n- [Ink and Switch](https://www.inkandswitch.com/) projects\n  - Untangle: Solving problems with fuzzy constraints (2023)\n  - Inkbase: Programmable Ink (2022)\n  - Potluck: Dynamic documents as personal software (2022)\n  - Crosscut: Drawing dynamic models (2022)\n  - Peritext: A CRDT for Rich-Text Collaboration (2021)\n  - Backchannel: A relationship-based digital identity system (2021)\n  - Cambria: Translate your data with lenses (2020)\n  - Pushpin: Towards Production-Quality Peer-to-Peer Collaboration (2020)\n  - Local-first software: You own your data, in spite of the cloud (2019)\n  - End-user programming: Empowered computing (2019)\n  - Muse: Designing a studio for ideas (2019)\n  - Pixelpusher: Real-time peer-to-peer collaboration with React (2018)\n  - Capstone: A tablet for thinking (2018)\n  - Slow software: Observations on latency (2018)\n\n# Videos\n- [Metroid the movie](https://www.youtube.com/watch?v=efKq8n5bM-I) on Youtube (1 hour)\n- [Portfolio of Small Bets](https://vimeo.com/757823828/d6052d8b85) & [Q & A](https://vimeo.com/757832263/c35eb0679e)\n- Psychonauts 2 Documentary\n\n# Movies\n- Primer\n\n# Lectures, Courses\n- Writing Course by Brandon Sanderson\n- Math. Analysis: On [![Youtube Icon](assets/youtube-icon.svg){height: 1rem} YouTube](https://www.youtube.com/watch?v=PiaPIleRhgQ&ab_channel=UniversityofNottingham)\n- [Design Fundamentals Course](https://www.designacademy.io/courses/design-fundamentals/)\n- Debunking Handbook\n- edX: Making Sense of Climate Science Denial\n\n## Math for Machine Learning\n- [Distill](https://distill.pub/)\n  > Visual Tutorials about Machine Learning\n- [Seeing Theory](https://seeing-theory.brown.edu/)\n  > An interactive website that takes you through some of the most critical probabilities and statistics concepts\n- [Statistics 110: Probability](https://youtube.com/playlist?list=PL2SOU6wwxB0uwwH80KTQ6ht66KWxbzTIo)\n  > If you are looking to get a more advanced overview of Probabilities and Statistics, this course from Harvard\n    University is an excellent introduction to probability as a language and a set of tools for understanding\n    statistics, science, risk, and randomness.\n- [Essence of Linear Algebra](https://youtube.com/playlist?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab)\n  > a refresher in Linear Algebra\n- [Linear Algebra](https://ocw.mit.edu/courses/mathematics/18-06-linear-algebra-spring-2010/)\n  > This is MIT Course 18.06, taught by Profesor Gilbert Strang. Definitely one of the best linear algebra courses that\n    you’ll ever find. Prof. Gilbert makes the subject ridiculously simple and engaging.\n- [Essence of Calculus](https://youtube.com/playlist?list=PLZHQObOWTQDMsr9K-rj53DwVRMYO3t5Yr)\n  > A series of videos that are informative and make calculus feel like something you could have discovered yourself.\n- [Multivariate Calculus](https://coursera.org/learn/multivariate-calculus-machine-learning)\n  > This is a free, beginner-friendly introductory course to building your confidence and introduce you to the\n    multivariate calculus required to build many common machine learning techniques.\n\n# Music\n- https://www.pornophonique.de/\n\n# Learning / New Hobbies\n- Piano\n\n# Tools to try out\n- Commit GPT: https://github.com/RomanHotsiy/commitgpt\n  Generate commit messages\n- Brainstorming tool: https://github.com/SolarLune/masterplan\n- UI Lib for Ruby: https://github.com/scarpe-team\n\n# Webcomic\n- https://www.peppercarrot.com/\n","n":0.027}}},{"i":423,"$":{"0":{"v":"Project ideas","n":0.707},"1":{"v":"# Project ideas\n\n## New\n- Translate the DR Book into Japanese\n- Start Game Dev Streaming in Japanese\n  - Clone a simple game people would be interested in\n- Nakama Multiplayer server library https://heroiclabs.com/opensource/\n- NEAT Algorithm (Genetic Algorithm) ([Paper](http://nn.cs.utexas.edu/downloads/papers/stanley.ec02.pdf))\n- Desktop app with mruby (DR for serious apps)\n- UI Lib\n  - Inspirations\n    - HTML\n    - https://github.com/scarpe-team\n    - Flutter Layout\n\n## Game ideas\n- Quantum Roguelike - Go up/down in scale almost indefinitely\n  - Katamary Damacy, Antman Quantumania\n- Conway's Game of Life Top down shooter\n  - Your environment is morphing like Game of Life\n- Made in Abyss RL\n\n## Pick up again\n- Fighting Fantasy\n- Evil Forest Roguelike\n-\n","n":0.101}}},{"i":424,"$":{"0":{"v":"Scratch","n":1}}},{"i":425,"$":{"0":{"v":"Now","n":1},"1":{"v":"\n# Now\n\nMedia I'm currently engaged with...\n\n## Currently reading\n- Brandon J. O'Brien, E. Randolph Richards - Misreading Scripture with Western Eyes: Removing Cultural Blinders to\n  Better Understand the Bible\n## Paused\n- Design Patterns: Elements of Reusable Object-Oriented Software (\"The Gang of Four\")\n- [[reference.literature-notes.kent-beck-cynthia-andres-extreme-programming-explained]]\n- [[reference.literature-notes.austin-kleon-steal-like-an-artist]]\n- [[reference.literature-notes.david-allen-getting-things-done]] (Re-read)\n- Donald E. Knuth - The Art of Computer Programming Volume 1\n- Nassim Nicholas Taleb - Fooled by randomness: the hidden role of chance in life and in the markets\n\n## Currently watching\n- Ranman\n- Pokemon\n\n### Paused\n- DS9\n- Scrubs\n- One Day at a Time\n- Urusei Yatsura (2022)\n\n## Currently playing\n- Lufia 2\n- Golden Sun\n- FF14\n- Fortnite\n- Yakuza Kiwami\n\n### On and off\n- Stellaris\n- Cogmind\n- Nuclear Throne\n- Dwarf Fortress\n\n### Paused\n- Earthbound\n- Steins;Gate Elite\n- Chaos Head: Noah replay\n- Super Mario Galaxy\n- Stardew Valley\n- Robotics;Notes Elite\n- Dragon Quest 11\n- Breath of the Wild\n- Breath of Fire 3\n- Terraria\n- Ni no Kuni\n- It takes two\n- Shenzhen IO\n\n## Currently listening to\n- The Way of Kings (Brandon Sanderson)\n","n":0.081}}},{"i":426,"$":{"0":{"v":"Ideas, Thoughts & Beliefs","n":0.5},"1":{"v":"# Ideas, Thoughts & Beliefs\n\nThis hierarchy contains ideas and beliefs that I personally hold. The notes in here are probably close to\n[[concepts.pkm.evergreen-notes]] in the sense that they are about one thing or one facet/thought about a thing thing.\n","n":0.162}}},{"i":427,"$":{"0":{"v":"Theology","n":1}}},{"i":428,"$":{"0":{"v":"The universe shows God's greatness","n":0.447},"1":{"v":"\n# The universe shows God's greatness\n\n> (3) When I look at your heavens, the work of your fingers,<br/>\n> the moon and the stars, which you have set in place,<br/>\n> (4) what is man that you are mindful of him,<br/>\n> and the son of man that you care for him?\n\n[Psalm 8:3-4](https://www.biblegateway.com/passage/?search=psalm+8%3A3-4&version=ESV) ([[reference.bible.psalms.008]])\n\nLooking at the whole huge universe (the size of which we probably don't even begin to grasp), how great and powerful\nmust the being that made all of this be?\n\n---\n\n- **Epistemic Status:** One of my personal convictions as a Christian, contentwise yet a work in progress. Greatness\n  is also maybe not the best word, but I need to understand the often used term \"glory\" better before I can use it with\n  confidence.\n\n","n":0.091}}},{"i":429,"$":{"0":{"v":"Humans have authority over creation","n":0.447},"1":{"v":"\n# Humans have authority over creation\n\n> (5) Yet you have made him a little lower than the heavenly beings<br/>\n> and crowned him with glory and honor.<br/>\n> (6) You have given him dominion over the works of your hands;<br/>\n> you have put all things under his feet,\n\n[Psalm 8:5-6](https://www.biblegateway.com/passage/?search=Psalm+8%3A5-6&version=ESV) ([[reference.bible.psalms.008]])\n\nGod gave us authority over everything in this world. We are basically second in command, directly instituted by God.\n\nThat authority also comes with a responsibility to take good care of the earth, a job which once could say we haven't\ndone all too well anymore during the last 100 years or so considering issues like environmental pollution, extinction of\nanimals, global warming etc.\n\n---\n\n- **Epistemic Status:** One of my personal convictions as a Christian, contentwise yet a work in progress. Probably\n  needs a spinoff note on the authority of humans once I think/write more on that. Also more hard data about global\n  warming and the other issues might be appropriate.\n","n":0.081}}},{"i":430,"$":{"0":{"v":"God is the one who changes hearts","n":0.378},"1":{"v":"\n# God is the one who changes hearts\n\n> Create in me a clean heart, O God,<br/>\n> and renew a right spirit within me.\n\n[Psalm 51:10](https://www.biblegateway.com/passage/?search=psalm+51%3A10&version=ESV) ([[Psalm 51|reference.bible.psalms.051]])\n\nDavid wrote this as part of the psalm he wrote after one of the biggest mistakes he ever made in his life. He knew\nthat he himself cannot produce a right heart attitude that is pleasing to God.\n\n---\n\n- **Epistemic Status:** One of my personal convictions as a Christian, contentwise yet a work in progress\n","n":0.113}}},{"i":431,"$":{"0":{"v":"God Is a Worker","n":0.5},"1":{"v":"# God is a worker\n\nIf we look at Genesis 1 we see God creating all things and calling them good and very good.\n","n":0.209}}},{"i":432,"$":{"0":{"v":"God Cares about the Material World","n":0.408},"1":{"v":"# God Cares about the Material World\n\n- We never see God create anything spiritual like a soul in Genesis.\n- God wants us to physically care for creation.\n- We will have physical resurrection bodies.\n- Heaven will be a New Earth\n\n","n":0.16}}},{"i":433,"$":{"0":{"v":"Software Development","n":0.707}}},{"i":434,"$":{"0":{"v":"Illegal states should be unrepresentable","n":0.447},"1":{"v":"# Illegal states should be unrepresentable\n\nWhen designing properties for an object, only use separate properties if those properties are actually orthogonal to\neach other.\n\n## Example [^1]\nA Component can only have a tooltip when it also has a label:\n\nInstead of defining a type like:\n```ts\ntype Props = {\n  label?: string;\n  labelTooltip?: string;\n\n  /* ... */\n}\n```\nwhich would allow for a tooltip without a label.\n\nUse something like this:\n```ts\ntype Props = {\n  label?: string | { text: string; tooltip?: string };\n}\n```\n\n[^1] [Gabe's blog - Notes on maintaining an internal React component library](https://www.gabe.pizza/notes-on-component-libraries/)\n","n":0.108}}},{"i":435,"$":{"0":{"v":"Good design should make it easy to do The Right Thing","n":0.302},"1":{"v":"# Good design should make it easy to do The Right Thing\n\nMake sure users of your framework / library / classes fall into the [[concepts.it.pit-of-success]].\n","n":0.2}}},{"i":436,"$":{"0":{"v":"Good software libraries should be easy to upgrade","n":0.354},"1":{"v":"# Good software libraries should be easy to upgrade\n\nUse [[concepts.it.semantic-versioning]] and give early deprecations warnings.\nOnce the new interface is decided (at the latest with the last version before the major version bump) then you should\ngive the option to scan the user's source code and provide [[idempotent|concepts.it.idempotency]] codemods for\nautomatic conversions if possible.\n","n":0.14}}},{"i":437,"$":{"0":{"v":"Contact Me","n":0.707},"1":{"v":"# Contact Me\n\n- ![Twitter Icon](assets/twitter-icon.svg){height: 1rem} **Twitter:** [@kfischer_okarin](https://twitter.com/kfischer_okarin)\n- ![GitHub Icon](assets/github-icon.svg){height: 1rem} **GitHub:** [kfischer-okarin](https://github.com/kfischer-okarin)\n- ![Discord Icon](assets/discord-icon.svg){height: 1rem} **Discord:** `kfischer_okarin#2663`\n","n":0.236}}},{"i":438,"$":{"0":{"v":"Concepts","n":1},"1":{"v":"# Concepts\n\nThis hierarchy contains definitions or descriptions of concepts and things.\n\nThe notes in it summarize for myself the answer to the question\n\n> What is X?\n","n":0.2}}},{"i":439,"$":{"0":{"v":"Theology","n":1}}},{"i":440,"$":{"0":{"v":"The Story of the Bible","n":0.447},"1":{"v":"# The Story of the Bible\n\nPossible source: https://www.thegospelcoalition.org/essay/the-story-and-message-of-the-bible/\n\n## Creation\n- God is the creator of all things and all things he created are good\n- He created humans and gave them\n  [[authority over creation|ideas-thoughts-beliefs.theologyhumans-have-authority-over-creation]]\n\n## Fall\n- Total Depravity\n  - Not: You are not as bad as you can be\n  - If sin was blue, you would be blue all over, it affects all of your life\n\n## Redemption\n\n## Restoration\n\n---\n\n- **Epistemic Status:** Seems like an useful way to summarize the Bible - contentwise clearly just a placeholder.\n","n":0.11}}},{"i":441,"$":{"0":{"v":"Statistics","n":1}}},{"i":442,"$":{"0":{"v":"Chi Square Test","n":0.577},"1":{"v":"# $$\\chi^2$$ Test\n\nSource: https://www.scribbr.com/statistics/chi-square-goodness-of-fit/\n\n$$\n\\chi^2=\\sum{\\frac{(O-E)^2}{E}}\n$$\n\nWhere:\n\n- $\\chi^2$ is the chi-square test statistic\n- O is the observed frequency\n- E is the expected frequency\n\n## Goodness of Fit Test\nYou want to know if a sample of data which is a histogram of counts (independent variable is categorical, dependent\nvariable is quantitative) conforms to an expected distribution of counts.\n\n$H_0$: The counts conform to the expectation\n\n$H_1$: The counts are statistically different\n\n1. Calculate the $\\chi^2$ value as above\n2. Determine the degrees of freedom: number of groups/bins - 1\n3. Check the table below to see the probability that $$H_0$$ must be rejected\n\n## Table of Significant values\n|Degrees of<br/> freeddom|.99|.975|0.95|.9|.1|.05|.025|.01|\n|-|-|-|-|-|-|-|-|-|\n|1|---|0.001|0.004|0.016|2.706|3.841|5.024|6.635|\n|2|0.020|0.051|0.103|0.211|4.605|5.991|7.378|9.210|\n|3|0.115|0.216|0.352|0.584|6.251|7.815|9.348|11.345|\n|4|0.297|0.484|0.711|1.064|7.779|9.488|11.143|13.277|\n|5|0.554|0.831|1.145|1.610|9.236|11.070|12.833|15.086|\n|6|0.872|1.237|1.635|2.204|10.645|12.592|14.449|16.812|\n|7|1.239|1.690|2.167|2.833|12.017|14.067|16.013|18.475|\n|8|1.646|2.180|2.733|3.490|13.362|15.507|17.535|20.090|\n|9|2.088|2.700|3.325|4.168|14.684|16.919|19.023|21.666|\n|10|2.558|3.247|3.940|4.865|15.987|18.307|20.483|23.209|\n","n":0.101}}},{"i":443,"$":{"0":{"v":"Misc","n":1}}},{"i":444,"$":{"0":{"v":"Second-Order Thinking","n":0.707},"1":{"v":"# Second-Order Thinking\n\nNot only considering the consequences of a decision but also the consequences of those consequences.\n","n":0.243}}},{"i":445,"$":{"0":{"v":"Play According to Callois","n":0.5},"1":{"v":"# Play According to Callois\n\nPlay is:\n- voluntary\n- separate from daily life and activities\n- uncertain, the outcome depends on luck/player actions\n- not generating economic benefit\n- has rules that override players ordinary behaviours\n- involved with some imagined reality\n\nPlay combines one or more of four elements\n- Competition\n- Chance\n- Roleplaying/Simulation\n- Vertigo: Experiencing strong emotions or sensations as part of play\n\nIt can also be arranged on an axis between\n- Paidia: Uncontrolled fantasy, spontaneous play and improvisation\n- Ludus: Needs effort, patience, skill or ingenuity. The game was designed before playing\n\n## Examples\n- Sports: Competition + Ludus\n- Chess: Competition + Ludus\n- Slot Machines: Change + Ludus\n- Table Top RPG: Roleplaying + Both Ludus & Paidia (depending on system & playstyle)\n\n","n":0.094}}},{"i":446,"$":{"0":{"v":"Knowns and Unknowns","n":0.577},"1":{"v":"\n# Knowns and Unknowns\n\nA framework to classify knowledge and your awareness about that knowledge - based on a phrase by Donald Rumsfeld.\n\n|             | Not Understood   | Understood     |\n|-------------|------------------|----------------|\n| **Unaware** | Unknown Unknowns | Unknown Knowns |\n| **Aware**   | Known Unknowns   | Known Knowns   |\n","n":0.151}}},{"i":447,"$":{"0":{"v":"Earned Value Management (EVM)","n":0.5},"1":{"v":"# Earned Value Management (EVM)\n\nA tool to know the current state of a project's progress with regard to its planned budget and schedule.\n\n## Budget at Completion (BAC)\nThe total budget available to the project, which is interpreted as the total value the completion of the project will\nprovide.\n\n## Planned Value\nThe amount of provided value that is supposed to be completed at this point in time.\n\n$\nPV = (planned\\ completion\\ \\%)\\ *\\ BAC\n$\n\n## Earned Value (EV)\nThe actual amount of value provided.\n\n$\nEV = (actual\\ completion\\ \\%)\\ *\\ BAC\n$\n\n- You need to define when and how much of the value is earned when a tasks changes completion status.\n\n## Actual Cost (AC)\nThe total cost actually incurred up to this time. There is no official formula for this but that number should be\nreadily available to your business. It's usually made up from:\n- Actual labor costs (e.g. $(hourly\\ rate) * (actual\\ hours\\ spent)$)\n- Other expenses\n\n## Schedule Performance Index (SPI)\nShows how close the project is to completion.\n\n$\nSPI = \\frac{EV}{PV}\n$\n\nHigher values are better. 1 means the project is right on schedule.\n\n## Cost Performance Index (CPI)\nShows how budget-efficient the project is.\n\n$\nCPI = \\frac{EV}{AC}\n$\n\nHigher values are better. 1 means the project is right on budget.\n","n":0.072}}},{"i":448,"$":{"0":{"v":"Chesterton's Fence","n":0.707},"1":{"v":"# Chesterton's Fence\n\nAn example by [[reference.authors.g-k-chesterton]] about practicing [[concepts.misc.second-order-thinking]].\n\nDo not remove a fence until you know why it was put up in the first place. Otherwise you might cause unintended\nside-effects.\n\n## The original quote\n> There exists in such a case a certain institution or law; let us say for the sake of simplicity, a fence or gate\n  erected across a road. The more modern type of reformer goes gaily up to it and says, \"I don't see the use of this;\n  let us clear it away.\" To which the more intelligent type of reformer will do well to answer: \"If you don't see the\n  use of it, I certainly won't let you clear it away. Go away and think. Then, when you can come back and tell me that\n  you do see the use of it, I may allow you to destroy it.\n\nThe Thing\n","n":0.084}}},{"i":449,"$":{"0":{"v":"Machine Learning","n":0.707}}},{"i":450,"$":{"0":{"v":"True Positive Rate","n":0.577},"1":{"v":"# True Positive Rate\n\nSee [[concepts.machine-learning.recall]]\n","n":0.447}}},{"i":451,"$":{"0":{"v":"ROC Curve","n":0.707},"1":{"v":"# ROC Curve\n- Receiver Operating characteristic curve\n- It assumes you have a classification model with some kind of \"threshold\" you can adjust\n  - You can nudge it towards classifying data more easily as positive - which in turn also increases false positives\n    or the other way round\n- Plots [[concepts.machine-learning.false-positive-rate]] (x) vs\n  [[True Positive Rate|concepts.machine-learning.recall]] (y)\n\n![](assets/images/roc-curve.png)\n\n(Image by cmglee, MartinThoma, [CC BY-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0), via\n[Wikimedia Commons](https://commons.wikimedia.org/wiki/File:Roc_curve.svg))\n","n":0.126}}},{"i":452,"$":{"0":{"v":"Regularization","n":1},"1":{"v":"\n# Regularization\n\nA method to deal with ![[concepts.machine-learning.overfitting]].\n\nIntuition: Penalize high values of model parameters $\\theta_j$, to get a \"simpler model\"\n\nAdd a regularization term $\\lambda \\sum_{i=1}^{n} \\theta_j^2$ to the cost function\n\nNew cost function will be:\n\n$\nJ(\\theta) = \\frac{1}{2m} [ \\sum_{i=1}^{m}(h_\\theta(x^{(i)}) - y^{(i)})^{2} + \\lambda \\sum_{i=1}^{n} \\theta_j^2 ]\n$\n\n- $\\lambda$ is the **regularization parameter**\n  - Too high value will result in underfitting, since it will just eliminate all featurs and try to fit to a horizontal line.\n\nNote: $\\theta_0$ is not penalized traditionally but even if it were it would not make much of a difference\n","n":0.105}}},{"i":453,"$":{"0":{"v":"Recall","n":1},"1":{"v":"# Recall\n\nRecall is a synonym for \"True Positive Rate\" and is calculated via\n\n$\nTPR = \\frac{TP}{TP + FN}\n$\n\nIt tells us how many of the total actual positive values the model classifies as positive.\n","n":0.177}}},{"i":454,"$":{"0":{"v":"Overfitting","n":1},"1":{"v":"\n# Overfitting\n\nThe model fits the training set too perfectly and therefore has poor performance on unknown data.\n\nPossible causes:\n- The chosen model is much more complex than the relationship between independent and dependent variables. Thus the\n  model tries to learn to fit for example random fluctuations of an originally mostly linear dataset.\n  - Fitting a high order polynomial to linear data\n- The training set and the validation set / real-world data come from a different distribution (for instance too much\n  time passed since the collection of the training data)\n  - You can use [[concepts.machine-learning.adversarial-validation]] to test whether you can easily distinguish between\n    training and test data\n","n":0.098}}},{"i":455,"$":{"0":{"v":"Normal Equation","n":0.707},"1":{"v":"\n# Normal Equation\n\nAnalytic solution for [[concepts.machine-learning.linear-regression]]\n\nAssuming you have these training data points:\n\n|$x_1$|$x_2$|$x_3$|$x_4$|$y$|\n|-----|-----|----|-----|----|\n|2104|5|1|45|460|\n|1416|3|2|40|232|\n|1534|3|2|30|315|\n|852|2|1|36|178|\n\nAdd an additional column $x_0$ with value 1 and turn the examples into a matrix, and the results into a vector\n\n$\nX = \\begin{bmatrix}\n1 & 2104 & 5 & 1 & 45 \\\\\n1 & 1406 & 3 & 2 & 40 \\\\\n1 & 1534 & 3 & 2 & 30 \\\\\n1 & 852 & 2 & 1 & 36\n\\end{bmatrix}\ny = \\begin{bmatrix}\n460 \\\\ 232 \\\\ 315 \\\\ 178\n\\end{bmatrix}\n$\n\nThen you can calculate $\\theta$\n\n$\n\\theta = (X^TX)^{-1}X^Ty\n$\n\nIn Octave\n```octave\npinv(X'*X)*X'*y\n```\n(use pseudo-inverse to avoid non-invertibility problems with $X^TX$)\n- Could happen because of redundant (linear dependent) features or too many features for too few data points\n","n":0.096}}},{"i":456,"$":{"0":{"v":"Multiclass Classification","n":0.707},"1":{"v":"\n# Multiclass Classification (one-vs-all / one-vs-rest)\n\nIf we have several classes we can just treat it as several two class classification problems:\n\n![Multiclass Classification](assets/images/multiclass-classification.png)\n\n- Train a logistic regression classifier $h_\\theta^{(i)}(x) = P(y=1|x;\\theta)$ for each class.\n- To make a prediction on a new class pick the class $i$ that maximizes $h_\\theta^{(i)}(x)$\n","n":0.144}}},{"i":457,"$":{"0":{"v":"Logistic Regression","n":0.707},"1":{"v":"\n# Logistic Regression\n\nDesprite the name it's a **classification** algorithm\n\n## Model function (Hypothesis)\nWe want a model function that is $0 \\leq h_\\theta(x) \\leq 1$\n\n$\nh_\\theta(x) = g(\\theta^Tx) = \\frac{1}{1 + e^{-\\theta^Tx}}\n$\n\n- g is the Sigmoid function or Logistic function\n\n  $\n  g(z) = \\frac{1}{1+e^{-z}}\n  $\n\n  ![Sigmoid Function](assets/images/sigmoid-function.png)\n- This value is the estimated probablity that $y = 1$ on the given x\n\n  $\n  h_\\theta(x) = P(y = 1|x;\\theta)\n  $\n    - \"The probability that $y = 1$, given x, parametrized by $\\theta$\"\n\n- We say y=1 when $h_\\theta(x) \\geq 0.5$, i.e. $z = \\theta^Tx \\geq 0$\n  - This basically defines a dividing line/plane/hyperplane between the two classes - The Decision Boundary\n\n   ![Decision Boundary](assets/images/logistic-regression-decision-boundary.png)\n\n\n## Cost Function\nWe cannot use the same cost function as with Linear regression, since it will not be convex (i.e. it will have local minima)\n\nSo we use:\n\n$\nJ(\\theta) = \\frac{1}{m} \\sum_{i=1}^{m} Cost(h_\\theta(x^{(i)}), y^{(i)})\n$\n\nWith:\n- $Cost(h_\\theta(x), y) = -log(h_\\theta(x))$ if y = 1\n\n  ![Logistic Regression Cost Function](assets/images/logistic-regression-cost-function.png)\n- $Cost(h_\\theta(x), y) = -log(1 - h_\\theta(x))$ if y = 0\n\n  ![Logistic Regression Cost Function](assets/images/logistic-regression-cost-function2.png)\n\nCombined into one function that is:\n\n$\nCost(h_\\theta(x), y) = -y * log(h_\\theta(x)) - (1 - y) * log(1 - h_\\theta(x))\n$\n\nThis becomes:\n\n$\nJ(\\theta) = - \\frac{1}{m} \\sum_{i=1}^{m} (y^{(i)} * log(h_\\theta(x^{(i)})) + (1 - y^{(i)}) * log(1 - h_\\theta(x^{(i)})))\n$\n\n\n## (Batch) Gradient Descent Algorithm\n\n$\n\\theta_j := \\theta_j  - \\alpha \\frac{1}{m}\\sum_{i=1}^{m}(h_\\theta(x^{(i)})  - y^{(i)}) * x^{(i)}_j\n$\n\nSo\n\n$\n\\frac{\\partial}{\\partial\\theta_j}J(\\theta) = \\frac{1}{m}\\sum_{i=1}^{m}(h_\\theta(x^{(i)})  - y^{(i)}) * x^{(i)}_j\n$\n","n":0.068}}},{"i":458,"$":{"0":{"v":"Linear Regression","n":0.707},"1":{"v":"\n# Linear Regression\n\n- Predict a continuous dependent variable with one or more independent variables\n- Their relationship must be linear (i.e. multiplying the variable directly with a factor)\n  - But you can add derive additional features and still use linear regression in the end\n- Image: fit a line through a set of points\n\n## Model function (Hypothesis)\n$\nh_\\theta(x) = \\theta_0 + \\theta_1x\n$\n\n### Trick for quickly computing several predicted values for one or several hypotheses\nGiven house sizes: 2104, 1416, 1534, 852\n\nGiven hypotheses:\n\n$\nh_\\theta(x) = -40 + 0.25x \\\\\nh_\\theta(x) = 200 + 0.1x \\\\\nh_\\theta(x) = -150 + 0.4x\n$\n\nCalc results via:\n\n$\n\\begin{bmatrix}\n1 & 2104 \\\\\n1 & 1416 \\\\\n1 & 1534 \\\\\n1 & 852\n\\end{bmatrix}\n\\times\n\\begin{bmatrix}\n-40 & 200 & -150 \\\\\n0.25 & 0.1 & 0.4\n\\end{bmatrix}\n$\n\n## Cost Function\nMinimize by $\\theta_0$ and $\\theta_1$\n\n$\nJ(\\theta) = \\frac{1}{2m} \\sum_{i=1}^{m}(h_\\theta(x^{(i)}) - y^{(i)})^{2}\n$\n\n- Squared error function\n- Mean squared error\n\n## (Batch) Gradient Descent Algorithm\n\n$\n\\theta_0 := \\theta_0  - \\alpha \\frac{1}{m}\\sum_{i=1}^{m}(h_\\theta(x^{(i)})  - y^{(i)})\n$\n\n$\n\\theta_1 := \\theta_1  - \\alpha \\frac{1}{m}\\sum_{i=1}^{m}(h_\\theta(x^{(i)})  - y^{(i)}) * x^{(i)}\n$\n\n- The Cost function is a convex function (bowl shaped) so it will only ever have one minimum\n- It uses all training samples in every step\n\n## Resources\n- [Machine Learning Mastery - Linear Regression for Machine Learning](https://machinelearningmastery.com/linear-regression-for-machine-learning/)\n","n":0.073}}},{"i":459,"$":{"0":{"v":"KNN","n":1},"1":{"v":"# KNN (k-Nearest Neighbors)\n\nClassifies a new data point by finding a fixed number (`k`) of nearest neighboring data points from the training set.\n- For classification the majority label is used as the class\n- For regression the average of the values is used as the value\n","n":0.149}}},{"i":460,"$":{"0":{"v":"Gradient Descent","n":0.707},"1":{"v":"\n# Gradient Descent\n\nWe have a function we want to minimize (the cost function).\n\n# Algorithm:\n- Start with some start parameter\n- Change parameter to reduce the function value until we hopefully end up at a minimum\n\nBasically go down a hill\n\n![Gradient Descent Visualization](assets/images/gradient-descent.png)\n\nRepeat until convergence\n\n$\n\\theta_j := \\theta_j - \\alpha \\frac{\\partial}{\\partial\\theta_j}J(\\theta_0, \\theta_1)\n$\n\n- $\\alpha$ is learning rate\n\nThe need to update simultaneously:\n```rb\nnew_theta_0 = calc_new_theta_0(theta_0, theta_1)\nnew_theta_1 = calc_new_theta_1(theta_0, theta_1)\ntheta_0 = new_theta_0\ntheta_1 = new_theta_1\n```\n","n":0.123}}},{"i":461,"$":{"0":{"v":"General Advanced Optimization Functions","n":0.5},"1":{"v":"\n# General Advanced Optimization Functions\n\nFor example\n- Conjugate Gradient\n- BFGS\n- L-BFGS\n\n# Using them in Octave\n\n```octave\nfunction [jVal, gradient] = costFunction(theta)\n  jVal = [...code to compute J(theta)...];\n  n = length(theta)\n  gradient = zeroes(n, 1)\n  gradient(1) = [...code to compute partial derivative of J(theta) by theta(1)...];\n  ...\n  gradient(n + 1) = [...code to compute partial derivative of J(theta) by theta(n + 1)...];\nend\n\noptions = optimset('GradObj', 'on', 'MaxIter', 100);\ninitialTheta = zeros(2,1);\n[optTheta, functionVal, exitFlag] = fminunc(@costFunction, initialTheta, options);\n```\n","n":0.119}}},{"i":462,"$":{"0":{"v":"False Positive Rate","n":0.577},"1":{"v":"# False Positive Rate\n$\nFPR = \\frac{FP}{FP + TN}\n$\n\nIt tells us how many of the total actual negative values the model classifies as positive.\n","n":0.209}}},{"i":463,"$":{"0":{"v":"Autoencoder","n":1},"1":{"v":"# Autoencoder\n- A neural network that tries to reproduce the training data exactly (i.e. learn the identity function)\n- It has one hidden layer (called the Bottleneck) with less neurons than the input layer\n  - This will be the representation of the data's characteristics - by using fewer neurons than the original data\n    dimension the network is forced to learn the relevant characteristics\n- The data itself are the label - thus it is not a classic supervised learning approach but a self-supervised learning\n  approach\n\n## Applications\n- Anomaly Detection\n  - Train with lots of good, normal data\n  - Feeding the network an irregular broken data point should result in an irregularly high error\n- Noise Reduction\n  - Train a certain type of data by adding random noise to it and using the original clean data as label\n- Other uses:\n  - information retrieval, imputation, feature extraction, and dimensionality reduction problems\n    - TODO: Expand on those\n\n## Resources\n- [Autoencoders on bnomial](https://articles.bnomial.com/autoencoders)\n","n":0.081}}},{"i":464,"$":{"0":{"v":"AUC","n":1},"1":{"v":"# AUC: Area under the ROC Curve\n\n- Area below the [[concepts.machine-learning.roc-curve]]\n- It expresses the quality of the model's predictions\n- Valued between 0 and 1 (A classifier that's 100% correct has an AUC of 1.0)\n\n- Scale-invariant: It just measures how well predictions are made irrespective of what kind of value/probability was\n  predicted\n  - This is often a good property but sometimes the values of the probability output are very important but AUC will not\n    help with that\n- Classification-threshold-invariant: It measure's the model's quality irrespective of the threshold\n  - So in a sense it gives a measure of how well the model itself does in general\n  - But depending on the domain false negative costs and false positive costs are vastly different - which means AUC\n    would not be a useful metric to specifically minimize one of them\n\n","n":0.086}}},{"i":465,"$":{"0":{"v":"Adversarial Validation","n":0.707},"1":{"v":"# Adversarial Validation\n\nA method to find out whether training and test data come from the same distribution.\n\n1. Mix your training and test data and replace the label with a binary label that shows from which set the data point\n   comes\n2. Fit a model to the new labeled data\n3. Check the [[concepts.machine-learning.auc]] - if the data come from the same distribution the value should be around\n   0.5, i.e. the two types of samples cannot really be distinguished\n","n":0.115}}},{"i":466,"$":{"0":{"v":"Rough Consensus","n":0.707},"1":{"v":"# Rough Consensus\n\n## Real consensus\n- It's not about full agreement\n- Ask: \"Can anyone not live with Option A?\"\n  - If somebody comes up follow up with: \"What are the reasons you object to choice A?\"\n    - Either the work group can be convinced that this is really not a good idea and changes path\n    - Or the objecting person can be convinced that this is just unappealing and that they are actually able to\n      live with it\n- States of affairs that are actually not consensus\n  - Apathy towards the proposed solution - the people working on it must engage actively and support it eventually\n  - People agree that a solution is sufficient and have no objection to it, but don't actively think it's a good and\n    correct outcome\n  - A group with a real objection loses energy to argue and enters a \"Do what you want\" stance\n  - Two parties with objections to each other's proposals make a \"horse-trade\" and agree to stop objecting to each other\n    so that both can be included\n\n## Rough Consensus\n- The group has considered and acknowledged a the real objection of a person but the vast majority still thinks that it\n  is a good idea to go on with the current solution even if it means a tradeoff and the objector is not happy\n- This relies a lot on the chair of the group who has the right to call rough consensus\n  - They must make sure to have properly and fully weighed the objection and its technical ramifications and that the\n    group has made sure that leaving this objection unaccomodated will not result in failure to meet the specifications\n    of the solution\n- This call can be appealed\n- The chair can also decide in hindsight if the group dismissed an objection right away that the group must reconsider\n  it properly\n- This methodology allows minority views to be also heard\n","n":0.056}}},{"i":467,"$":{"0":{"v":"Personal Knowledge Management (PKM)","n":0.5}}},{"i":468,"$":{"0":{"v":"Evergreen Notes","n":0.707},"1":{"v":"# Evergreen Notes\n\n\n\n## Resources\n- [Evergreen Notes by Andy Matuschak](https://notes.andymatuschak.org/z4SDCZQeRo4xFEQ8H4qrSqd68ucpgE6LU155C)\n- [Evergreen Notes on LYT Kit](https://notes.linkingyourthinking.com/Cards/Evergreen+notes)\n\n---\n\n- **Epistemic Status:** #to-write\n","n":0.243}}},{"i":469,"$":{"0":{"v":"IT","n":1}}},{"i":470,"$":{"0":{"v":"Zero Trust Security Model","n":0.5},"1":{"v":"\n# Zero Trust Security Model\n\n![NIST Zero Trust Framework](assets/images/nist-zero-trust-framework.png){ height: 400px; }\n\n> Never trust, always verify\n\n## No machine/user is automatically trusted\nAlways verify access for all resources - as compared to the \"castle-and-moat\" security model, where once you enter the\nprivate network you can access many/all resources.\n\n## Least-privileged access\nOnly give the minimal permissions that are necessary for executing the request to limit the damage radius in case a\nmalicious request was made successfully.\n\n\n## References:\n- [NIST Special Publication 800-207 - Zero Trust Architecture](https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-207.pdf)\n\n---\n\n- **Epistemic Status:** Very rough summary - recently read an article in a magazine about it. Will probably stay like\n  this until I actually need to study about this more (if ever).\n","n":0.096}}},{"i":471,"$":{"0":{"v":"Semantic Versioning","n":0.707},"1":{"v":"# Semantic Versioning\n\nA version number `MAJOR.MINOR.PATCH` is increased when:\n- Major: When you make incompatible API changes\n- Minor: When you add new features in a backwards compatible way\n- Patch: When you make backwards compatible bugfixes\n","n":0.171}}},{"i":472,"$":{"0":{"v":"Pit of Success","n":0.577},"1":{"v":"# Pit of Success\n\nA well designed system makes it easy to do the right things and annoying (but not impossible) to do the wrong things.\n\nInterface design matters!\n\n**Source:**\n[Coding Horror - Falling Into The Pit of Success](https://blog.codinghorror.com/falling-into-the-pit-of-success/)\n","n":0.169}}},{"i":473,"$":{"0":{"v":"Metrics","n":1},"1":{"v":"# Metrics\n\nA statistical value that is collected at regular time intervals.\n\nIntervals could be 1 seconds, 1 minute, 1 day.\n\nThe statistic could be average, maximum, minimum, total.\n\nTypically expressed as tuple of:\n- `name`\n- `value`\n- `dimensions`\n\nDimensions are additional meta-information about the value like Hostname, Region, Deployment Stage, which allow more\ndetailed filtering.\n","n":0.144}}},{"i":474,"$":{"0":{"v":"Law of Demeter","n":0.577},"1":{"v":"# Law of Demeter\nDon't call methods on objects returned by methods. It will cause to close coupling to the internal structure of the\nobject you're working with.\n\nA related principle is \"Tell, don't ask\" - Tell an object what to do... Don't ask for it's internal objects and do it\nyourself.\n","n":0.144}}},{"i":475,"$":{"0":{"v":"Idempotency","n":1},"1":{"v":"# Idempotency\n\nA operation is idempotent if you can apply it several times and the result will be the same.\n\nAdding a new member to a project is not idempotent - changing their name to `\"Bob\"` is idempotent.\n\nIdempotent operations are especially important in following areas:\n- **Distributed systems:** When sending commands in a message queue over network they might be received several times\n  because of how the message service works. Making the actions idempotent makes sure the system will not enter an\n  unintended or even illegal state.\n- **Automatic code updates:** Using a codemod on a source code file should not change it if the change was already\n  applied before.\n","n":0.097}}},{"i":476,"$":{"0":{"v":"Domain Model","n":0.707},"1":{"v":"\n# Domain Model\n\n- Selective Simplification\n  - Ignore details irrelevant to the problem at hand\n    - The main goal is to solve domain-related problems for the user\n  - The goal is not to be as realistic as possible\n- Consciously structured knowledge\n  - It is distilled knowledge formed over time\n- It evolves over time\n  - Once concepts don't prove useful anymore they are dropped\n    - If it was tied to another needed concept, remodeling to separate those concepts must happen first\n- It is collaboratively developed by developers and domain experts\n  - A brainstorming and experimentation attitude is needed\n  - It should not just be done by one party and then handed down in a waterfall fashion to the developers\n- It contains not just a data schema but also behaviour and enforced rules\n\n\nIt is closely connected to:\n- A common ubiquitous language between all project members\n  - The ease or awkwardsness of the chosen model can be determined by actually using it when speaking about the project\n- The actual implementation, which makes it easier to maintain the corresponding source code\n\n","n":0.075}}},{"i":477,"$":{"0":{"v":"Composite Pattern","n":0.707},"1":{"v":"# Composite Pattern\n\n- Objects arranged in tree-like hierarchies\n- Individual objects and compositions have a common interface\n- The official Gang of Four Pattern also explicitly includes the collection management methods (`add` / `remove` /\n  `children`) methods for composites\n  - I personally think that's just another dimension/interface\n\n```rb\n# Component - common interface\nclass Item\n  def weight\n    raise NotImplementedError\n  end\nend\n\n# Leaf\nclass SolidItem < Item\n  attr_reader :weight\n\n  # ...\nend\n\n# Leaf\nclass LiquidContainer < Item\n  # ...\n\n  def weight\n    @volume * @density * @filled_percentage + @container_weight\n  end\nend\n\n# Composite\nclass ItemContainer < Item\n  attr_reader :items\n\n  def weight\n    @items.sum(&:weight)\n  end\nend\n```\n\n---\n\n- **Epistemic Status:** Rough but probably complete (for my purposes) with some slight modifications I'd make from my\n  experience.\n","n":0.097}}},{"i":478,"$":{"0":{"v":"Areas","n":1},"1":{"v":"\n# Areas\n\nAreas of responsibility and ongoing commitments\n","n":0.378}}},{"i":479,"$":{"0":{"v":"Machine Learning","n":0.707}}},{"i":480,"$":{"0":{"v":"Evaluation Methods","n":0.707},"1":{"v":"# Evaluation Methods\n\n- [[concepts.machine-learning.roc-curve]]\n- [[concepts.machine-learning.auc]]\n","n":0.447}}},{"i":481,"$":{"0":{"v":"Coursera Machine Learning Course","n":0.5},"1":{"v":"\n# Coursera Machine Learning Course\n\n- [Octave Reference Manual PDF](https://octave.org/octave.pdf)\n\nStart the new version of the course:\nhttps://www.coursera.org/learn/machine-learning?specialization=machine-learning-introduction\n","n":0.258}}},{"i":482,"$":{"0":{"v":"Amazon SageMaker","n":0.707},"1":{"v":"\n# Amazon SageMaker\n\n## Types of Model Deployment\n\n- Real-time\n- Serverless\n- Async\n\nServerless is like Real-Time but automatically scaled/provided. It doesn't support GPU yet (as of June 2022)\n","n":0.2}}},{"i":483,"$":{"0":{"v":"Software Development","n":0.707},"1":{"v":"\n# Software Development\n\n## How to stay in Flow\nWhen you are about to be interrupted, dump your working memory as quick as possible... Write down what you are about to\ndo next (next and next etc) - this way you know where to pick up when continuing to work\n\n> When you are going good, stop writing.\n\nErnest Hemingway\n\nSource: ![Twitter Icon](assets/twitter-icon.svg){height: 1rem}[Interruptible Workflow Thread by Wisen Tanasa](https://twitter.com/ceilfors/status/1583397713357307904) ([Clipped Article (Private Joplin)](joplin://x-callback-url/openNote?id=002c453dbd69478e9f6974dfe787a2d6))\n\n## Several Solutions\nCome up with three ways of solving a problem before committing to a solution.\n\n## When being interrupted\nTalk about following points before just doing what you're being told:\n- What is the impact of the work you're asking for? Can't do it if the impact is unclear\n- Do you have a spec that is agreed with stakeholders?\n- Make clear that you have to do your own estimate first\n- Explain clearly what the cost and consequences of dropping your current work are\n\n[[areas.software-development.how-to-know-what-to-build]]\n\n## Documentation\n- [[areas.software-development.four-types-of-documentation]]\n\n## Toolbox\n\n### Frontend\n- [[React Component Composition|reference.dev.react.component-composition]]\n- Use Storybook!\n- Use Typescript!\n\n## Try out\n### Frontend\n- Testing with Storybook\n  - https://storybook.js.org/blog/test-component-interactions-with-storybook/\n- Data Fetching libraries\n  - React: React Query, RTK Query, SWR, Apollo\n- Web Components\n\n### Other\n- Matrix - An open network for secure, decentralized communication\n  - https://matrix.org/\n\n\n## Software Design\n- Build a Ubiquitous Language (共通言語)\n- Separate **WHAT** from **HOW**\n- Public interfaces are important!\n  - They should communicate **WHAT** not how - in their name\n- Single responsibility\n  - If you cannot properly name it it probably has more than one responsibility\n  - One class - one thing\n  - One method - one thing\n\n## Testing principles\n- Does Test Driven Design lead to good design? No - but it steers you away from bad design - when you feel how annoying\n  it is to write tests\n\n### BDD\n- Use the domain language (The Ubiquitous Language)\n- Drive Development with Executable Specifications\n- Focus ond WHAT not HOW\n  - Say nothing about HOW it does those things\n  - Only on WHAT it does\n- Make the code simple, easily readable!\n- Test ONE thing\n- Start tests with \"Should do this thing\"\n  - The thing you are testing is the subject\n\n### Acceptance Tests / Executable Specifications\nSources:\n- [![Youtube Icon](assets/youtube-icon.svg){height: 1rem} Continuous Delivery - How To Write Acceptance Tests](https://www.youtube.com/watch?v=JDD5EEJgpHU)\n- [![Youtube Icon](assets/youtube-icon.svg){height: 1rem} Continuous Delivery - Acceptance Testing with Executable Specifications](https://www.youtube.com/watch?v=knB4jBafR_M)\n\n- Properties\n  - Life-like scenarios\n  - In Production like Test environments\n\n- Executable Specifications\n  - Write them beforehand from the User Story\n  - It should be from the perspective of an external user of the system\n    - Use the Ubiquitous language!\n  - Separate What the system does from how it does it\n    - Imagine replacing the system with something else that fulfills the same function - the test should still make\n      sense!\n  - Write them so clear that even the least technical person can understand it!\n  - Focus on what the user wants - link them to user stories\n    - Find an underlying need, what the user wants to achieve\n    - Why are you making this change? Find that and focus on that in the acceptance test\n  - Have at least one test for each acceptance criteria of your user stories\n\n- Implementation: [[areas.software-development.acceptance-test-four-layer-architecture]]\n\n## Articles to read regularly\n- [Professional Programming: The First 10 Years](https://thorstenball.com/blog/2022/05/17/professional-programming-the-first-10-years/)\n\n## Events - The Real world\n- Model your application as a stream of events - to decouple it\n  - External:\n    - User actions\n    - An external data source publishes new data\n  - Internal:\n    - Calculation is finished\n- How to deal with events\n  - Finite State Machines\n    - Initial state\n    - Change state when receiving event, maybe execute code on state enter/exit or particular transition\n    - Can be expressed as data\n  - Observer pattern\n  - Pub / Sub\n  - Event Streams\n    - There are nice libraries (https://reactivex.io/) which treat event streams like collections and allow all\n      conveniences of Enumerables like filtering, zipping, mapping\n    - Time is not something that needs to be managed anymore - you do.. as it happens\n","n":0.04}}},{"i":484,"$":{"0":{"v":"Learn Something New","n":0.577}}},{"i":485,"$":{"0":{"v":"From Nand to Tetris","n":0.5},"1":{"v":"# From Nand to Tetris\n\nhttps://www.nand2tetris.org/\n\n> The site contains all the project materials and tools necessary for building a general-purpose computer system and a modern software hierarchy from the ground up.\n>\n> The materials are aimed at students, instructors, and self-learners. Everything is free and open-source, as long as you operate in a non-profit, educational setting.\n","n":0.136}}},{"i":486,"$":{"0":{"v":"Crafting Interpreters","n":0.707},"1":{"v":"# Crafting Interpreters\n\nhttp://craftinginterpreters.com/\n\nOnline book about building interpreters\n","n":0.378}}},{"i":487,"$":{"0":{"v":"Automatic Programming","n":0.707},"1":{"v":"# Automatic Programming\n\nhttps://en.wikipedia.org/wiki/Automatic_programming\n\n\nhttps://www.cs.utexas.edu/users/novak/cs394p.html\n","n":0.577}}},{"i":488,"$":{"0":{"v":"Inbox","n":1}}},{"i":489,"$":{"0":{"v":"Setting Up Shell with zsh and Autosuggestions","n":0.378},"1":{"v":"\n\nhttps://aboutmonica.com/blog/setting-up-zsh-with-autosuggestions/\n","n":1}}},{"i":490,"$":{"0":{"v":"The GDS Way","n":0.577},"1":{"v":"\n# The GDS Way\n\nhttps://gds-way.cloudapps.digital/\n\nBest/current practices of the GDS team\n","n":0.333}}},{"i":491,"$":{"0":{"v":"Team Topologies","n":0.707},"1":{"v":"# Team Topologies\n\nhttps://teamtopologies.com/\n\n- Types of teams\n- Sizes etc\n","n":0.354}}},{"i":492,"$":{"0":{"v":"人類よ！これが最近のE2Eテスト自動化だ！ 開発スピードと品質を両立するアジャイルテスティングの旅","n":0.707},"1":{"v":"\n# 人類よ！これが最近のE2Eテスト自動化だ！ 開発スピードと品質を両立するアジャイルテスティングの旅\n\nAuthor: 藤原 大 (Dai Fujihara)\n\nhttps://nickel-bougon-a08.notion.site/2-E2E-31489fbc16c3404ba071782b0d6c19be\n\n- Types of testing\n- Testing strategies\n","n":0.289}}},{"i":493,"$":{"0":{"v":"達人プログラマー輪読会をはじめた話","n":1},"1":{"v":"\nhttps://isshi-hasegawa.hatenablog.com/entry/2021/12/09/073236\n","n":1}}},{"i":494,"$":{"0":{"v":"A new standard of testing for GOV.UK","n":0.378},"1":{"v":"\n# A new standard of testing for GOV.UK\n\nhttps://technology.blog.gov.uk/2021/10/08/a-new-standard-of-testing-for-gov-uk/\n\n- Testing strategies of UK Government development team (Government Digital Service)\n","n":0.236}}},{"i":495,"$":{"0":{"v":"My Software Estimation Technique","n":0.5},"1":{"v":"\n# My Software Estimation Technique\n\nAuthor: Jacon Kaplan-Moss\n\nhttps://jacobian.org/2021/may/25/my-estimation-technique/\n\n- Estimating with clearly defined units + uncertainty\n","n":0.267}}},{"i":496,"$":{"0":{"v":"Luke Carrier's Digital Garden","n":0.5},"1":{"v":"\nhttps://luke.carrier.im/\n","n":1}}},{"i":497,"$":{"0":{"v":"Kevin Cunningham's Digital Garden","n":0.5},"1":{"v":"\nhttps://garden.kevincunningham.co.uk/\n","n":1}}},{"i":498,"$":{"0":{"v":"Josh Branchaud's TIL Repository","n":0.5},"1":{"v":"\nhttps://github.com/jbranchaud/til/\n\nAccumulated markdown notes about **everything**\n","n":0.447}}},{"i":499,"$":{"0":{"v":"Ian Jones' Digital Garden","n":0.5},"1":{"v":"\nhttps://garden.ianjones.us/\n","n":1}}},{"i":500,"$":{"0":{"v":"How to Win at CORS","n":0.447},"1":{"v":"\nhttps://jakearchibald.com/2021/cors/\n","n":1}}},{"i":501,"$":{"0":{"v":"GOV.UK Service Manual","n":0.577},"1":{"v":"\nhttps://www.gov.uk/service-manual\n\n- Manual of how to build public services\n","n":0.354}}},{"i":502,"$":{"0":{"v":"Digital Garden Kyle Tycholiz","n":0.5},"1":{"v":"\nhttps://tech.kyletycholiz.com/\n\n- Focus on Development terms and reference\n","n":0.378}}},{"i":503,"$":{"0":{"v":"The Checklist","n":0.707},"1":{"v":"# The Checklist\n- [ ] Write an Acceptance Test for the new Feature\n  - [ ] Is it from the perspective of the user?\n  - [ ] Does it use the Ubiquitous Language?\n  - [ ] Does it describe WHAT the system does (and not HOW)?\n- [ ] Modeling the feature\n  - [ ] Does it make sense to model it with events?\n  - [ ] Can you come up with 3 different solutions?\n","n":0.116}}},{"i":504,"$":{"0":{"v":"Teaching Programming","n":0.707},"1":{"v":"# Teaching Programming\n\n- Technologia School of Magic: https://www.technologia-schoolofmagic.jp/\n  - Programming learn materials by Disney (Japanese only)\n  - Lesson titles can be checked - as inspiration for a curriculum\n","n":0.189}}},{"i":505,"$":{"0":{"v":"Project Ideas","n":0.707},"1":{"v":"# Project Ideas\n\n## Rails Migration Validation\nUse some property based testing (Quickcheck) to generate all kinds of data and run migrations and their rollbakcs\n- Try out https://github.com/Qqwy/ruby-prop_check\n- Write rails wrapper schreiben that reads schema and builds generators\n- Run migrations automatically step by step and revert them again\n  - Do they run with all kinds of data?\n  - Are the data after migrate + rollback exactly the same again?\n  - other Migration specific assertions?\n","n":0.118}}},{"i":506,"$":{"0":{"v":"Patterns","n":1},"1":{"v":"# Patterns\n\n## Injection: Context menu rendering\n\n### Problem:\nYou want to render a context menu deep in your UI but:\n- you don't want to pass down all the listeners/handlers all the way down to the actual thing with a context menu\n- you don't want the top level component that knows how to **do** the actions know how to **render** the menu (the\n  low level UI component will know that)\n\n### Elements\n- `MenuItemRenderer`: Knows how to render menu items & related elements\n- `MenuGenerator`: Knows what kind of menu items a particular component needs. Receives data of the Component needing an\n  context menu and a `MenuItemRenderer` and then renders the actual menu\n- `UIController`: Something at the top building a `MenuGenerator` and providing it to the UI components below it\n- `Component`: This is the thing in need of a context menu. It receives the provided `MenuGenerator` it builds or has\n  access to a `MenuItemRenderer` and its own data. It calls the `MenuGenerator` with those.\n\n```rb\nclass MenuItemRenderer\n  def render_item(label, on_click)\n    # ...\n  end\nend\n\nclass MenuGenerator\n  def render_menu(item_data, render_context)\n    # if item_data ....\n    render_context.render_item('Item A', -> { do_something })\n    render_context.render_item('Item B', -> { do_something })\n  end\nend\n\n# Menu renderer is somehow passed down here - Injection?\nclass ItemWithMenu\n  def render\n    render_context = RenderContextForItem.new\n    menu_generator = MenuGeneratorContext.get\n    @items.each do |item|\n      menu_generator.render_menu(item, render_context)\n    end\n  end\nend\n```\n\n## Constraint-based layout\nFlutter's layout algorith. See\n[Understanding constraints (Flutter Docs)](https://docs.flutter.dev/development/ui/layout/constraints)\n\n> Constraints go down. Sizes go up. Parent sets position\n\n1. Parent asks child component how big it wants to be given dimension constraints (min/max width/height)\n2. Child returns size inside constraints\n3. Parent places child inside itself\n\n```rb\ndef layout_children\n  children.each do |child|\n    # calc constraints for child\n    child.update_dimensions(min_w:, max_w:, min_h:, max_h:)\n    child.x = ...\n    child.y = ...\n    child.layout_children\n  end\nend\n","n":0.06}}},{"i":507,"$":{"0":{"v":"Japanese Terms","n":0.707},"1":{"v":"# Japanese Terms\n\n## Logged time - 実績\nActual spent time on a task\n\n## Estimated time - 予定工数\nTime estimated for the completion of a task\n","n":0.209}}},{"i":508,"$":{"0":{"v":"How to know what to build","n":0.408},"1":{"v":"# How to know what to build\n\n## About User Stories\nSource: ![Youtube Icon](assets/youtube-icon.svg){height: 1rem} [YOW! 2014 Jeff Patton - User Story Mapping: Discover The Whole Story](https://www.youtube.com/watch?v=AzBuohuOU6g)\n\n- User Stories are not extensive complete documentation artifacts\n- They are conversation starters\n  - Write down the short idea of the feature and then go and have a conversation with the involved parties\n  - Have a collaborative visual workspace where you can build and document a common understanding (Whiteboard / Miro)\n  - It's like a holiday photo - you look at them and if you were there that's enough to remember all kinds of things\n    from the vacation - whereas it doesn't mean a lot to someone who wasn't there\n- For big stories map them out step by step from the user's point of view\n\n## Four questions to find out what to build\n\nSource: ![Youtube Icon](assets/youtube-icon.svg){height: 1rem}\n[Agile Adria 2013 keynote / Gojko Adzic: Make Impacts Not Software](https://www.youtube.com/watch?v=GnK_n9Udhhs)\n\n![](assets/images/four-questions-for-planning.png){ height: 200px }\n- Those questions map to certain elements of planning\n  - Why: Big Picture, your end goal\n  - Who: Who to address\n  - What: What kind of behaviour/change you want to achieve\n  - How: Project Scope\n- Answering one question helps answering the neighboring ones\n- The Big Picture is your Goal in your Navigation system\n- You can try out many different Who/What/Hows once you know the why\n  - The why will give you a way to measure success\n- Each connection uphill is an assumption\n  - Who could help me achieve my goal?\n  - What kind of behaviour in those people might help to achieve that goal?\n  - How to achieve that behaviour change?\n\n### Example: Adding levels & achievements to a Facebook game\n(C)ustomer & (M)anager\n\n- C: We want to have levels and achievements for our game.\n- M: This is a what - How does this change somebody's behavior.\n- C: I don't understand\n- M: Imagine we spend 9 months on this and nothing changes in the user's behaviour... have we wasted time?\n- C: Yes.\n- M: Ok, let's not do that. So give me an example of how the users will behave differently.\n- C: They will post to Facebook.\n- M: They do that already... what's the change?\n- C: They will post a lot more.\n  ```mermaid\n    flowchart LR\n      Players --- pm(Post More)\n      pm --- la(Levels and Achievements)\n  ```\n- M: Ok, so if we deliver 10 % of the above and people don't post more we should stop this - if they do we know we're\n  doing something right. So why is it important for people to post more?\n- C: If they post more other people might read about our games.\n- M: That's another behavior change not a big picture. Why is it important that they read about the games?\n- C: If they read about it they will come and play the games more.\n- M: That's another behavior change. Why is that important?\n- C: That's a stupid question\n  - When you hear something like that you're onto something good\n- M: So you want more players... How many more? Would it be a waste of time if after 9 months you had 5 more players?\n- C: No, no, no we need 1 million more players\n  ```mermaid\n    flowchart LR\n      1m(1M Players) --- Players\n      Players --- pm(Post More)\n      pm --- la(Levels and Achievements)\n  ```\n  - He actually had a problem but came with a solution instead, we just had a structured conversation to unpack the\n    problem\n- M: So this is our destination... and these are some of the roads we could take... Let's not take a tunnel for 9 months\n  but let's try out if this is actually a good idea. Something simple we could quickly do would be allowing people to\n  post about tournament wins... so we can test the hypothesis about players posting more.\n  ```mermaid\n    flowchart LR\n      1m(1M Players) --- Players\n      Players --- pm(Post More)\n      pm --- la(Levels and Achievements)\n      pm --- tw(Tournament Winners)\n  ```\n\nThey tried out tournament winners and after three days no one shared their wins anymore because they didn't want to\nspam their friends. So making players post more about a stupid Facebook game doesn't seem to work.\n\n- M: We could try to make people invite others\n- C: So here we asked our marketing department and they gave us this:\n  ```mermaid\n    flowchart LR\n      1m(1M Players) --- Players\n      Players --- pm(Post More)\n      pm --- la(Levels and Achievements)\n      pm --- tw(Tournament Winners)\n      Players --- i(Invite more friends)\n      i --- Automated\n  ```\n- M: No you're doing this again... let's first see if this even makes sense... maybe with something manual\n  ```mermaid\n    flowchart LR\n      1m(1M Players) --- Players\n      Players --- pm(Post More)\n      pm --- la(Levels and Achievements)\n      pm --- tw(Tournament Winners)\n      Players --- i(Invite more friends)\n      i --- Automated\n      i --- Manual\n  ```\n\nIt didn't work at first, but when they changed the mail template to make the invite button more visible and it actually\nhelped\n\n## Questions to ask the customer:\nSource: ![Twitter Icon](assets/twitter-icon.svg){height: 1rem} [Twitter thread by Brian O'Connor](https://mobile.twitter.com/BrianFOConnor/status/1547910093143826434)\n\n- What's the hardest thing about doing this?\n  - Part of the problem that's frequent or painful enough to be worth solving\n  - Find out the current workflow\n- Tell me about the last time you encountered this problem\n  - Understand more about the context when this problem occurs\n- Why was that hard?\n  - Understand the why of the solution\n- What, if anything, have you done to solve this problem?\n  - Find out if it's worth solving\n  - What are the tools/processes the new solution will be compared with?\n  - If they haven't even tried solving it, then maybe the pain is not big enough in the first place?\n- What do you dislike about the solutions you have tried?\n  - Understand what kind of features might better solve the problem\n","n":0.033}}},{"i":509,"$":{"0":{"v":"Good Git Commit Messages","n":0.5},"1":{"v":"# Good Git Commit Messages\n\nSources:\n- [Write joyous git commit messages by Joshua Tauberer](https://joshuatauberer.medium.com/write-joyous-git-commit-messages-2f98891114c4)\n- [How to Write a Git Commit Message](https://cbea.ms/git-commit)\n\n## Why?\n- Some serious projects require accountability - it's very important to know what code change caused a problem, why the\n  change was made\n- To share the creative process behind a solved problem\n- Putting it into a git commit message is good because it's right attached to the source code\n\n## When?\n- When committing a complete logical change - not for little intermediate commits\n\n## Template\n\nUse Markdown to format your messages.\n\n### Feature\n\n```\nThe summary line\n    ----one blank line-----\n[POV User - What problem is being solved?]\n\n[POV User - What kind of user is benefitting from this feature?]\n\n[POV Manager - Why this solution? What alternatives you considered? Explain your thought process]\n\n[POV Manager - Risks? Tech Debt?]\n\n[POV Code - Explain non-obvious code changes, bullet points per file]\n\n[POV Code - Give evidence that the commit works.]\n\n[POV Git - Mention issues, external discussions related]\n```\n\n### Bugs\n\n```\nThe summary line\n    ----one blank line-----\n[POV User - What problem is being solved?]\n\n[POV User - how was it found/is it reproduced]\n\n[POV Manager - What was the problem in the code?]\n\n[POV Manager - Why this solution? What alternatives you considered? Explain your thought process]\n\n[POV Manager - Risks? Tech Debt?]\n\n[POV Code - Explain non-obvious code changes, bullet points per file]\n\n[POV Code - Give evidence that the commit works.]\n\n[POV Git - Mention commit that introduced the bug]\n\n[POV Git - Mention issues, external discussions related]\n```\n\n## The Summary Line\n- 50-72 character slong\n- describes **all** the changes briefly - might be the only thing a reader reads\n- Starts with a capital - no period at the end\n- \"After this commit, the application will... (summary line)\"\n  - For changes where that doesn't fit: \"In this commit, I will... (summary line)\"\n- consider using a `[category]` prefix like (`[documentation]`)\n\n## What problem is being solved?\n- Bug, feature or improvement.\n- What change would a user see in the software?\n- Past tense for bugs and present tense for new features.\n- Examples:\n  - The program crashed when ____.\n  - Users were not able to install the application.\n  - The application can now output verbose information.\n  - Pages were loading too slowly (>150ms).\n\n## What was the mistake?\n- Act like a detective?\n- If the root cause is hard to find ask 5 times Why?\n\n## Why this kind of change and not another?\n- Explain your reasoning? The architecture of the change.\n- Write as much as you can\n- Show off your thought process\n\n## Risks? Tech debt?\n- Is something else not at reisk of breaking\n- Are there new TODOS? New tech debt?\n- Will a user lose a feature they relied on?\n- Can it be easily undone?\n\n## Give evidence that the commit works\n- Did you write test? How did you validate it?\n","n":0.047}}},{"i":510,"$":{"0":{"v":"Four Types of Documentation","n":0.5},"1":{"v":"\n# Four Types of Documentation\n\nSource: https://documentation.divio.com/\n\n> It doesn't matter how good your product is, because **if it's documentation is not good enough, people will not use\n  it**\n\n## Overview over the four types of documentation\n\n![](assets/images/four-types-of-documentation.png){ height: 400px }\n\n- Tutorial\n  - oriented to learning\n  - must allow the newcomer to get started\n  - presented as a lesson\n  - like teaching a small child how to cook\n- How-to guide\n  - oriented to achieving a goal\n  - must show how to solve a specific problem\n  - presented as a series of steps\n  - like a recipe in a cookery book\n- Reference\n  - oriented to information\n  - must describe the machinery\n  - presented as a dry description\n  - like a reference encyclopedia article\n- Explanation\n  - oriented to understanding\n  - must explain the why, backgrounds etc\n  - presented as a discursive explanation\n  - like an article on culinary social history\n\nFollowing this distinction will help both the author (they will know what and how to write) and the reader.\n\n## Tutorials\n- You are the teacher and responsible for leading the student through a series of steps to achieve some end\n- Must be achievable and meaningful\n- Once the tutorial is finished the learner can make sense of the software and the rest of the documentation\n- **What** to teach is less important than that the learner\n  - finds it enjoyable\n  - gains confidence\n  - wants to do it again\n- Through the tutorial the learner will learn some important things about the software, how it is to use the software\n  day by day\n- You decide what the learner will learn and in which order - the goal is basic familiarity with the software!\n\n### Principles for writing them\n- Let the user learn by doing\n- It's ok to have hand-held baby steps at first, what they do doesn't have to be best practice just needs to get them\n  started\n- Make sure the tutorial works!\n  - You cannot help the learner if something fails, make sure it works!!!\n- Each step should do something small and comprehensible, it should be visible\n  - Don't let them do random, complicated things for 2 pages before seeing any feedback\n- It must be repeatable for people with many different environments\n- Focus on concrete steps, particular actions and outcomes\n- Only give the minimum necessary explanation - link to refeerence/explanation elsewhere\n  - Don't introduce other unneeded options\n\n## How-to guides\n- Presents steps required to solve a real-world problem\n  - The question asked could only be posed by someone with some experience\n- You wouldn't explain basics that normally experienced people know already or discuss concepts\n\n### Principles for writing them\n- Provide a series of steps to achieve the goal\n  - No need to start from the beginning or go to the very end, just include the main important part\n- Focus only on the goal\n- Link to explanations if they are important to the steps\n- Be flexible enough to allow for variations of the problem you describe\n- Name them as a complete \"How to\"-sentence\n\n## Reference\n- Technical description of a machinery\n- Can include basic description of how to use something and what to pay attention to when using\n  - But does not contain steps to achieve a particular goal! That's job of the How-to guides\n- You want pure information in a systematic presentation\n\n### Principles for writing them\n- Structure the reference around the code\n- Use consistent structure, format, tone\n- Do nothing but describe!\n- It must be exact and up-to-date\n\n## Explanation\n- Background, Other notes, Key Topics\n- Discusses and explains concepts\n- Examples:\n  - Explain why we do things they way we do the\n    - Design decisions, historical reasons, technical constraints\n  - Describe bad ways or obscure alternatives\n- The user doesn't need to know these things\n- The user could also read this for leasure away from the computer\n","n":0.04}}},{"i":511,"$":{"0":{"v":"Coding Competitions","n":0.707},"1":{"v":"# Coding Competitions\n\n## Advent of Code\nhttps://adventofcode.com/\n\n25 riddles with two parts every year during December\n\n## Codeforces\nhttps://codeforces.com/\n\n## Others\n- Hackerrank\n- https://leetcode.com/\n- https://www.hackerearth.com/\n- https://www.codechef.com/\n- https://www.topcoder.com/\n","n":0.218}}},{"i":512,"$":{"0":{"v":"Career Paths","n":0.707},"1":{"v":"# Career Paths\n\nExamples of Software Engineer Career Levels together with the respective skills/requirements. Not necessarily interested\nin climbing that career ladder but maybe good as inspiration for growth\n\n- Monzo Engineering Progression Framework ([PDF](https://monzo.com/documents/engineering-progression-framework-v2-0.pdf))\n- Dropbox Engineering Career Framework (https://dropbox.github.io/dbx-career-framework/)\n","n":0.164}}},{"i":513,"$":{"0":{"v":"Acceptance Test Four Layer Architecture","n":0.447},"1":{"v":"# Acceptance Test Four Layer Architecture\n\n## Test Case (Executable Specification)\n- Uses the DSL to describe an usage example and assertions about it\n- Created from User Stories\n\n### Example\n- Go to the Store\n- Search for a Book with Title \"X\"\n- Put the Book in your shopping basket\n- Go to the checkout\n- Pay for the book\n- Now you own the book\n\n```rb\nscenario 'should buy a book' do\n  go_to_store\n  search_for_book title: 'X'\n  select_book author: 'Mr. Y'\n  add_selected_item_to_shopping_basket\n  check_out item: 'X'\n  assert_item_purchased item: 'X'\nend\n```\n\n## DSL (Domain Specific Language)\n- Shared between test cases\n- Simple to read & uses the words of the domain\n- Has lots of optional parameters so you can describe at the level of detail (or lack of thereof) you need in a\n  particular case\n\n### Example\n```rb\ndef check_out(item: nil, card: nil)\n  driver.check_out(\n    item: item || default_item,\n    card: card || default_card\n  )\nend\n```\n\n## Protocol Driver\n- Translate Domain Language into actual interactions with system under test\n- Only layer that actually understands **HOW** to do things\n- This is where capybara, selenium, etc is used\n- Can be pluggable to support different types of interactions\n  - API\n  - UI\n  - Local Stub\n  - Plug in a spec printer which prints out the steps in natural language / in a foreign language\n\n### Example\n```rb\nclass ExampleDriver\n  def check_out(item:, card:)\n    checkbox = find_all_checkboxes.find { |box| box.label == item }\n    checkbox.check\n\n    select card, from: '#card_selection'\n\n    find('#submit').click\n  end\nend\n```\n","n":0.067}}},{"i":514,"$":{"0":{"v":"Personal Knowledge Management (PKM)","n":0.5},"1":{"v":"\n# Personal Knowledge Management (PKM)\n\nAt the moment I am still figuring out my personal process to organize my own personal knowledge.\n\nThis digital garden is basically my [open garage](https://notes.andymatuschak.org/Work_with_the_garage_door_up).\n## My guiding principles (so far)\n### Never google something twice\nDuring my work (and hobby activities) as a software developer I often google many things related to the tools/languages\nI use. Often times I find myself looking for the same things many times over and again (as my browser history tells me).\nThis seems to be a bit of wasted effort, so it would be nice if I can collect snippets of things and methods I can refer\nto later (probably similar to [[areas.software-development.inbox.jbranchaud-til]]).\n\n### Don't be a burden\nI'm a person prone to re-ordering my note taking system regularly and I want to find something that sticks and is\npracticable for myself in the long run.\n\n[[reference.dendron]] is already a step into the right direction with its great built-in refactoring capabilities,\nwhich takes away a bit of the stress in case I go on one of my re-organization sprees again.\n\n\n## My methods/workflows\n\n## Always extract \"How To\" notes from actual work\nEvery time I create something during my work or hobby development that could be described in more general terms I\nquickly create a \"How To\" note from it in the respective development reference hierarchy. That way my memory of how I\ndid this is still fresh and I can leave it behind for future reference.\n\n### Project journal notes referenced from daily journal notes\nOngoing projects have a chronological journal with a header per day I worked on that project. Then in my daily work\njournals I use [[Dendron Note References|reference.dendron.how-to.create-note-references]] to embed the respective parts\nof the project journal in that day's journal, too.\n\n\n## Other people's methods that I find interesting and am evaluating\n- Learning in Public[^1]\n- Linking Your Thinking[^2]\n- Evergreen notes[^3]\n- Incremental Learning [^4]\n- PARA [^5]\n\n\n[^1] [Learn In Public by swyx](https://www.swyx.io/learn-in-public/)\n\n[^2] [LYT Kit by Nick Milo](https://notes.linkingyourthinking.com/_Start+Here)\n\n[^3] [Evergreen Notes by Andy Matuschak](https://notes.andymatuschak.org/z4SDCZQeRo4xFEQ8H4qrSqd68ucpgE6LU155C)\n\n[^4] [Incremental Learning (SuperMemo 16)](http://super-memory.com/help/il_full.htm#General_outline_of_incremental_learning)\n\n[^5] [The PARA Method: A Universal System for Organizing Digital Information by Tiago Forte](https://fortelabs.co/blog/para/)\n","n":0.055}}},{"i":515,"$":{"0":{"v":"Game Development","n":0.707},"1":{"v":"\n# Game Development\n\n## My Motivation\n![[areas.gamedev.my-motivation#^main-line]]\n\n## Articles/Texts about Game Development I like\n- [Amir Rajan - 7 lessons from 7 years of game development](https://www.producthunt.com/stories/7-lessons-from-7-years-of-game-development)\n- [Stuffed Wombat - The Small Game](http://stuffedwomb.at/the_small_game)\n\n## Dream Game Elements / Inspirations\n\nIndependent and not necessarily related or having to be used together\n\n- \"Real\" Dynamic Time Travel mechanic - simulate the changes in the past and reconstruct the world (Steins;Gate)\n- A hub where characters gather, a place/city/area they call home (DS9, Future Gadget Lab)\n- Random bizarre craziness (Rick and Morty's dimensions)\n- \"Floating\" islands on pillars (**that** project)\n- Kirby RPG\n- The extraordinary hidden in plain sight / parallel magic/fantasy society (Harry Potter and others)\n- Intelligent agents, AI, especially symbolic AI\n\n## Game seeds/ideas\n\n- [[areas.gamedev.the-perfect-time-travel-game]]\n- [[areas.gamedev.massive-multiplayer-relaxed-ai-game]]\n\n## Narrative Tropes\n- Start the story in medias res - specifically having only a little bit left of a bigger project (the penultimate task\n  or only few more tasks)\n  - Example: Just having found the third of four magic crystals you need to find to save the world\n- A character was away from the main action for an extended amount of time and brings an unique perspective / hope on\n  a situation\n  - Example: Ant Man in Avengers: Endgame\n\n## Topics\n- [[areas.gamedev.juice-and-polish]]\n- [[areas.gamedev.boss-design]]\n- [[areas.gamedev.narrative-generation]]\n- [[areas.gamedev.platformer-physics]]\n- [[areas.gamedev.types-of-popular-games]]\n- [[areas.gamedev.platformer-feel-tricks]]\n- [[areas.gamedev.tileset-structures]]\n\n## Used Engines & Tools\n- [[areas.gamedev.dragonruby]]\n","n":0.07}}},{"i":516,"$":{"0":{"v":"Resources","n":1}}},{"i":517,"$":{"0":{"v":"The Itch Game Page Image Guide & Templates","n":0.354},"1":{"v":"\n# The Itch Game Page Image Guide & Templates\n\nThis free Itch project helps you create great pages to promote your work on itch.io. It includes a guide to the various\nimage assets Itch supports on its game pages, including an explanation and examples of each image type as it displays\non a page.\n\nhttps://starwest.itch.io/itch-page-image-templates\n","n":0.14}}},{"i":518,"$":{"0":{"v":"Books about Cities","n":0.577},"1":{"v":"# Books about Cities\n\n## 'The City Shaped' by Spiro Kostof\n![](https://pbs.twimg.com/media/FiQrG_3WAAAUs-2?format=jpg&name=small){ height: 300px }\n\nExplains why cities look and are structured the way they are. Also, an impressive treaty on the many qualities and\niterations of the grid.\n\n## 'The Image of the City' by Kevin Lynch\n![](https://pbs.twimg.com/media/FiQs_8jXEAI6eBj?format=jpg&name=small){ height: 300px }\n\nThis is where you'll find out about the character and image of the city. The book also teaches the fundamentals of\nurban maps; of how landmarks, edges, paths, etc combine to create easy to navigate spaces.\n\n## 'A Burglar's Guide to the City' by Geoff Manaugh\n![](https://pbs.twimg.com/media/FiQtanpXgAQeYdq?format=jpg&name=small){ height: 300px }\n\nA crucial insight into how different people of differing interests (in this case, well, burglars) look at urban space\nand architecture.\n\n## 'A Pattern Language: Towns, Buildings, Construction' by Christopher Alexander, Sara Ishikawa, and Murray Silverstein\n![](https://pbs.twimg.com/media/FiQu5FUXoAAXZtL?format=jpg&name=small){ height: 300px }\n\nIt's huge, and impressive, and most probably guided how the World of Warcraft world was designed.\n\n## 'The Spotter's Guide to Urban Engineering' by Claire Baratt & Ian Whitelaw\n![](https://pbs.twimg.com/media/FiQv86IWYAI8vYi?format=jpg&name=small){ height: 300px }\n\nCovers everything from transport systems, sewers, and aqueducts, to bridges, wrecking yards, and manholes. Always remember that infrastructure is a city's skeleton.\n\n## 'An Architectural Approach to Level Design' by Christopher W. Totten\n![](https://m.media-amazon.com/images/P/1466585412.01._SCLZZZZZZZ_SX500_.jpg) { height: 300px }\n","n":0.072}}},{"i":519,"$":{"0":{"v":"Book List","n":0.707},"1":{"v":"# Book List\n\n## Paidiasophia Book List\n> an attempt toward a cartography of my research into the nature of Play and its metaphysical, social, technological, & theological character.\n\nhttps://meinong.notion.site/Books-9e20ddab0ffb451c9032749fcde7bff8\n","n":0.192}}},{"i":520,"$":{"0":{"v":"Types of Popular Games","n":0.5},"1":{"v":"# Types of Popular Games\n\nSource: ![Twitter Icon](assets/twitter-icon.svg){height: 1rem}[Twitter Thread by AdventureMtn](https://twitter.com/AdventureMtn/status/1598421419528187909)\n\n## Beautiful Graphics\n\nExamples:\n- Ori and the Blind Forest\n- Tunic\n- Sable\n- Webbed\n- Backbone\n\n## High Concept Game - i.e. the really good idea\n\nExamples:\n- Superhot\n- Boyfriend Dungeon\n- Untitled Goose Game\n- Crypt of the NecroDancer\n\n## Amazingly addictive Gameplay\n\nExamples:\n- Vampire Survivors\n- Dome Keeper\n- Loop Hero\n\n## Infinitely deep gameplay\n\nExamples:\n- Noita\n- Minecraft\n- Rim World\n- Dwarf Fortress\n\n## Serving an underserved audience\n\nExamples:\n- Stardew Valley gave a fresh Harvest Moon to a hungry audience\n- Yooka-Laylee for the N64 Style 3D platformer audience\n\n## Hilarious sandbox\n\nExamples:\n- Gary's Mod\n- TABS\n- Squirrel with a Gun\n- Goat Simulator\n","n":0.104}}},{"i":521,"$":{"0":{"v":"Tips from an Producer","n":0.5},"1":{"v":"\n# Tips from an producer\n\n## Pick a deadline\n\nNothing motivates you more than time running out.\n\nIndie dev is HARD & a million variables will try stop you from progressing. Set a date you think is realistic & do your\nbest to reach it.\n\nYou can always adjust, but you need to keep moving forward to a goal\n\n## Share your work\n\nSometimes the endorphins you get from posting your work and people liking it is what will get you to the next milestone.\n\nYou can build a community before you launch, test your ideas, potentially go viral & get support.\n\nNo one is going to steal your idea\n\n## Know your audience\n\nThe harsh reality is that marketing is 50% of the job. Picking a genre and understanding the kinds of games your\nplayers like is key. Know the competitors and what is currently trending.\n\nYour game can be great but timing & positioning is really important\n\n## Failure is the process\n\nYour first game might not be a hit, but your fourth might be a remix of a system you made in your second and be the\nsame genre as your first. As long as you're learning, the time is not wasted.\n\nMake sure to publish/record your unfinished work too\n\n## Keep it simple\n\nAll it takes is an interesting game mechanic, and clear game loop to succeed. Players don't need anything complex, and\nin most cases the simpler the concept the better and easier it is to communicate.\n\nMake sure the title, branding & tutorial is cohesive\n\n## Write it down\n\nGet into the habit of writing down your thoughts and ideas when you're out and about, as solutions might pop up at any\ntime.\n\nTasking is also important to break down complex systems into actionable chunks, use sticky notes and focus on one task\nat a time\n\n## Be different\n\nIs your game something that has been done before? What sets it apart? What makes it interesting? Are you using emerging\ntechnology, or combining 2 genres in a new way?\n\nKnow what sets you apart and what will help to sell your game to new people that stumble on it\n\n## Have fun\n\nAt the end of the day your passion and curiosity is what will get you through & make an impact. Make sure you are\nenjoying the process and letting your heart guide your decisions.\n\nIt will be hard at times, but making a game that someone enjoys will bring immense joy\n\n## Bonus Tip: Take care of yourself\n\n- Sleeping an adequate amount of time\n- As well as eating healthily\n- exercising regularly 👌\n","n":0.05}}},{"i":522,"$":{"0":{"v":"Tileset Structures","n":0.707},"1":{"v":"# Tileset Structures\n\nhttps://twitter.com/OskSta/status/1448248658865049605?s=20\n","n":0.577}}},{"i":523,"$":{"0":{"v":"The \"perfect\" time travel game","n":0.447},"1":{"v":"\n# The \"perfect\" time travel game\n\nA game with a free form time-travel/manipulation system (think for example D-Mails in Steins;Gate) which you have to\nexploit to continue with the story but also work as a sandbox. You could change anything and the chances of you ending\nup in a hopeless timeline are not insignificant.\n\nRequirement for that would be a somewhat complete model of causal relationships, so you could calculate the effects of\nyour time travel.\n\nIn order for a story to happen you would also need a model of the main story that is being told and the types of\nstories that could occur, the potential dramatic conflicts that build up and might occur - so alternative timelines\ncould be constructed believably.\n\nIt would be maybe something like an AI Dungeon Master with enough knowledge to adjust the world in reaction to the time\nmanipulation.\n\nThere would also need to be a good setting and likeable characters you care about in the first place\n\n---\n\n- **Epistemic Status:** This note tries to formulate and give shape to the hazy idea of my dream game I would want to\n  create - it's a work in progress.\n","n":0.074}}},{"i":524,"$":{"0":{"v":"Procgen","n":1},"1":{"v":"# Procgen\n- Whittaker Biome diagram - Temperature + Precipitation = biome type\n\n## Interesting Resources\n- Roguelike Celebration Youtube Channel: https://www.youtube.com/channel/UCKv_QzXft4mD6TXmQBZtzIA/videos\n- Sigil of Kings Devlog: https://byte-arcane.github.io/sigil-of-kings-website/\n","n":0.204}}},{"i":525,"$":{"0":{"v":"Practicing an Art","n":0.577},"1":{"v":"\n# Practicing an Art\n\nIt's all about exercising, intentionally.\n\nInspired by [5 Practical Exercises to Learn UI Design (For Free)](https://learnui.design/blog/5-practical-exercises-learn-ui-design-free.html)\n\n## Find great examples and articulate what you like about them\n\n## Copy excellent works\n\n[Copy If You Can: Improving Your UI Design Skills With Copywork](https://www.smashingmagazine.com/2017/02/improving-ui-design-skills-copywork/)\n","n":0.156}}},{"i":526,"$":{"0":{"v":"Platformer Physics","n":0.707},"1":{"v":"## Platformer Physics\n\nhttps://maddythorson.medium.com/celeste-and-towerfall-physics-d24bd2ae0fc5\n\nArticle from creator of Celeste & Towerfall\n","n":0.333}}},{"i":527,"$":{"0":{"v":"Platformer Feel Tricks","n":0.577},"1":{"v":"# Platformer Feel tricks\n\n## Player FX\n\n![Twitter Icon](assets/twitter-icon.svg){height: 1rem} [Tweet with GIF by Case Portman](https://twitter.com/Case_Portman/status/1603514165238308866)\n\nImplementing Dust FX\n\n## Coyote Time\n\nAllowing jumping for a few frames after falling\n\n![Twitter Icon](assets/twitter-icon.svg){height: 1rem} [Tweet with GIF by Case Portman](https://twitter.com/Case_Portman/status/1613316769912946688)\n\n## Input Buffering\n\nRemember inputs (like jumps) for a few frames so it can still be used to trigger the action even when you're a bit too early\n\n\n![Twitter Icon](assets/twitter-icon.svg){height: 1rem} [Tweet with GIF by Case Portman](https://twitter.com/Case_Portman/status/1610941144950611969)\n\n## Hitboxes\n\n- Keep unfavorable hitboxes inside (!) the sprite and let favorable hitboxes surround the sprite - so collecting stuff doesn't feel like a chore\n\n![Twitter Icon](assets/twitter-icon.svg){height: 1rem} [Tweet with GIF by Case Portman](https://twitter.com/Case_Portman/status/1599762235156414464)\n\n","n":0.101}}},{"i":528,"$":{"0":{"v":"Narrative Generation","n":0.707},"1":{"v":"# Narrative Generation\n- [Scripting the Game](https://rtalsoriangames.com/wp-content/uploads/2020/05/RTG-ScriptingtheGamev1.2.pdf)\n  - Generating a Beat Chart\n\n- [[areas.gamedev.narrative-design]]\n","n":0.289}}},{"i":529,"$":{"0":{"v":"Narrative Design","n":0.707},"1":{"v":"# Narrative Design\n\nSources:\n- ![Twitter Icon](assets/twitter-icon.svg){height: 1rem} [Twitter thread by Kat Lewis](https://mobile.twitter.com/katjolewis/status/1566738681464889345)\n- ![Youtube Icon](assets/youtube-icon.svg){height: 1rem} [How to Find Your Character's MISBELIEF (or Fatal Flaw)](https://www.youtube.com/watch?v=Ij39HSbLCXo)\n\n## External Conflict - what's happening to the character\n- Internal Conflict & external conflict need each other\n- What does the main character want? -> External conflict\n  - Main categories for concrete goals:\n    - Win\n    - Stop\n    - Escape\n    - Retrieve\n\n## Internal conflict - The main character's misbelief\n- What is your core theme?\n  - The story's truth\n  - What change would you like to see in the world?\n  - What is the truth that you want to scream from the rooftops?\n  - This drives your whole story... this is why you care about the story\n- Turn the theme into the opposite - into a lie... this is the core misbelief\n- What could have happened in the character's past to make them believe such a thing?\n  - Can be a traumatic event... Can be a slow dripping continuous impact that makes a hole into the sone\n  - Children until 7 years old believe almost everything - their brain is still forming\n- Write that pivotal scene! It will help you understand that character's thought process... internal workings...\n  - This is the motive driving the goal of the character\n- Write more other scenes that cement the character's misbelief\n  - Situations where they were challenged and had the chance to step out and discover the truth - but instead chose the\n    lie - and cemented their belief\n- How is my character dissatisfied with their life today because of their firm belief into that lie?\n- What does my character think will make them happy? (based on their misbelief?)\n  - This is their goal that will drive he plot\n- What steps could my character take now to actively pursue this goal?\n  - This becomes the plot - driven by the character!\n\n\n","n":0.057}}},{"i":530,"$":{"0":{"v":"My Style","n":0.707},"1":{"v":"# My Style\n\n- Do it for the sake of creating not for the money\n- Marketing = Connecting with like-minded people\n- If even one person plays and really likes the game, that's a success\n","n":0.174}}},{"i":531,"$":{"0":{"v":"My Motivation","n":0.707},"1":{"v":"\n# My Motivation\n\nI like building things and I like people using things I made and enjoying using them. ^main-line\n\nI am convinced that creating and others enjoying our creations is one of the most fundamental and natural joys we can\nexperience. (This is probably since we humans are made in the image of a creator).\n\nI once made a longer game for a research project during my first exchange study here in Japan in 2013. It was an RPG\nMaker game with a little bit of Machine Learning added to select one of two final scenarios based on the players\npreferences which were derived from data collected throughout gameplay.\n\nMaking the game was also fun but also hard - for the final part I had quite some help from my brother.\nAnd  in the end the science employed during the game had more than just a few holes conceptually. But the thing that\nmade the biggest impression on me was actually conducting the user studies and watching people (half of them my\ninternational student friends... the other half random people from campus) play the game I had made.\nSeeing their reactions - joy, frustration, satisfaction when overcoming a challenge...\nThat made a very deep impression on me...\n\nI would like to make games that deeply resonate with people (at least some people)...\nI don't know, that probably why anyone makes games....\n\nMaybe to capture that magic spark that I myself experienced when I played my first video games as a child\n(Secret of Mana & Breath of Fire 2 come to mind as exampels that made a profound impression)... Or even later in life\nwhen you play a wildly innovative games like Outer Wilds.\n\nI want to grow my own little branch on my creative genealogy (to use Austin Kleon's words).\n\nI partly want to make games because I wish such a game would exist.\n\nGetting any money for that and possibly even be able to live from that would be a big bonus -\nthough I have to say that I despise the idea of having to work my creative motor and my games as a business and/or\nfocused on surviving from that....\n\nSo unless I'm blessed with a wild success either career-wise or with one of my games I guess want to aim for a living\nsituation that is well-paying and not too time-consuming (for example an established freelancer) while having lots of\ntime to hack on games......\n","n":0.051}}},{"i":532,"$":{"0":{"v":"Music","n":1},"1":{"v":"# Music\n\n## Learning to Make Music\n\n### Books\n- Music Theory For Dummies\n- Music Composition for a Dummies\n- Hook Theory I & II\n  - Very, very concise and a great reference, though it moves fast.\n- Composition for Computer Musicians\n  - a great analysis of the different components of music and common patterns theri\n\n### Youtubers\n- Ben Levin\n  - has a good and enjoyable series on core music theory\n- Adam Neely\n  - just fun and covers a lot of topics\n- 12 Tone\n  - pretty intense but does very detailed analysis\n- 8-bit Music Theory\n  - video game oriented, mostly doing deep analysis of famous game compositions and a bit intense for a beginner, but\n    very enjoyable\n\n### Other\n- SonicPi\n","n":0.094}}},{"i":533,"$":{"0":{"v":"Massive Multiplayer Relaxed AI Game","n":0.447},"1":{"v":"# Massive Multiplayer Relaxed AI Game\n- Something where you can take a little bit influence\n- You cannot really lose\n- You maybe login once a day and check in on your \"tribe\"\n-\n","n":0.18}}},{"i":534,"$":{"0":{"v":"Juice and Polish","n":0.577},"1":{"v":"# Juice and Polish\n- Main Principle: The game should react to the players actions - it should feel good\n\n## Ways to spice things up action games\n- Add sounds and animations\n- Decrease enemy HP\n- Increase shooting rate / add more enemies\n- Bigger bullets\n- Muzzle flash (cheap way: first frame of a bullet is a circle)\n- Faster bullets\n- Impact effects\n- Hit animations (so you know the enemy was hit)\n- Enemy knockback\n- Permanence (leave traces of combats in the stage)\n  - Destructible environment/props\n  - Dead bodies... shells\n  - Smoke fading away\n- Camera lerp (lag behind the player)\n- Camera position (show what's in front of the player/what's important)\n- Screenshake\n- Camera kick (moving back the camera when shooting)\n- Player knockback (when shooting you are pushed back)\n- Pause time on impact (even if it's just a frame)\n- More bass in the sound effects\n- Random (big!) explosions\n- Death animation (slow fall and speed up again when on the floor)\n\n\nFor Roguelike turns specifically [[areas.gamedev.juice-and-polish.roguelikes]]\n\n## References\n- ![Youtube Icon](assets/youtube-icon.svg){height: 1rem}[Vlambeer - The Art of Screenshake](https://www.youtube.com/watch?v=AJdEqssNZ-U)\n- ![Youtube Icon](assets/youtube-icon.svg){height: 1rem}[Juicing your Cameras with Math](https://www.youtube.com/watch?v=tu-Qe66AvtY)\n\n### More References\n- [Designing Game Feel. A Survey](https://arxiv.org/pdf/2011.09201.pdf) (Clipped in Joplin)\n","n":0.074}}},{"i":535,"$":{"0":{"v":"Juice for Roguelikes","n":0.577},"1":{"v":"# Juice for Roguelikes\n\n- Basic rule: Do not block the player\n  - Double speed for each queud animation so the player can play as fast as they like\n- Use a nice color palette\n- You can rotate the screen a tiny bit\n- Let character slide or jump when moving\n- Camera movement: Move with character or better lerp towards target position\n- Some silly movement modes:\n  - Bouncing or hopping when moving\n  - Squash before jumping (anticipation) and the jump\n  - Lean into the direction\n- Bump attack\n- Screen shakes:\n  - Random or directional\n  - Rotate and displace the screen everytime you are hit\n- Flash white when hit\n- Damage numbers\n- Permanent corpses\n- Animate projectiles\n- Flying corpses\n- Blood spray\n- Sound effects & Music\n- Other effects (use with caution):\n  - Walls/tiles being repelled from you\n  - Bouncing tiles\n\n## References\n- ![Youtube Icon](assets/youtube-icon.svg){height: 1rem}[Jeremiah Reid - Juice your turns](https://www.youtube.com/watch?v=xSYVQc7cH-4)\n","n":0.084}}},{"i":536,"$":{"0":{"v":"Embedded Language","n":0.707},"1":{"v":"# Embedded Language\n- Wren: https://wren.io\n  ```wren\n  System.print(\"Hello, world!\")\n\n  class Wren {\n    flyTo(city) {\n      System.print(\"Flying to %(city)\")\n    }\n  }\n\n  var adjectives = Fiber.new {\n    [\"small\", \"clean\", \"fast\"].each {|word| Fiber.yield(word) }\n  }\n\n  while (!adjectives.isDone) System.print(adjectives.call())\n  ```\n","n":0.171}}},{"i":537,"$":{"0":{"v":"DragonRuby","n":1},"1":{"v":"# DragonRuby\n","n":0.707}}},{"i":538,"$":{"0":{"v":"How To","n":0.707}}},{"i":539,"$":{"0":{"v":"Make a Sprite flash","n":0.5},"1":{"v":"# Make a Sprite flash\n\n![](assets/images/dr-flash-sprite-before.png){ height: 256px }&nbsp; &nbsp; &nbsp; &nbsp;\n![](assets/images/dr-flash-sprite-after.png){ height: 256px }\n\nYou achieve a flashing effect by drawing a colored solid over your sprite while using additive blending\n(`blendmode_enum` 2). The background behind the sprite must be transparent though when you render the white rectangle\non top - so you need to render it first on a separate render target otherwise the rectangle would also blend with your\nstage etc.\n\n```rb\ndef white_sprite(outputs, sprite, render_target_name)\n  # Prepare render target in sprite size\n  render_target = outputs[render_target_name]\n  render_target.width = sprite[:w]\n  render_target.height = sprite[:h]\n\n  # Render sprite at bottom left of render target\n  render_target.primitives << sprite.merge(x: 0, y: 0)\n  # Additive overlay with white rectangle to create a white sprite\n  render_target.primitives << sprite.to_solid(x: 0, y: 0, r: 255, g: 255, b: 255, blendmode_enum: 2)\n\n  # Return render target as sprite\n  { x: sprite[:x], y: sprite[:y], w: sprite[:w], h: sprite[:h], path: render_target_name }.sprite!\nend\n\nsprite = { x: player.position.x, y: player.position.y, w: 16:, h: 24, path: 'player.png' }.sprite!\nargs.outputs.primitives << white_sprite(args.outputs, sprite, :flashing_player)\n```\n\n\n","n":0.078}}},{"i":540,"$":{"0":{"v":"Execute Windows console commands","n":0.5},"1":{"v":"\n# Execute Windows console commands\n\nIf you try executing commands like `dir` or `md` directly via `$gtk.system` it will fail with an \"Command not found\"\nerror.\n\nYou have to use `cmd /c`\n\nFor example:\n\n```bat\ncmd /c md new_directory\n```\n","n":0.174}}},{"i":541,"$":{"0":{"v":"Execute Code on Hotload","n":0.5},"1":{"v":"# Execute Code on Hotload\n\n```rb\nmodule HotloadExtension\n  def on_load_succeeded(file)\n    super\n    puts \"RELOADED #{file}\" # Replace this with your cool logic\n  end\nend\n\nGTK::Runtime.prepend HotloadExtension\n```\n","n":0.218}}},{"i":542,"$":{"0":{"v":"Patterns","n":1},"1":{"v":"# Patterns to use in DragonRuby\n\n## [[Input Actions|areas.gamedev.dragonruby.patterns.input-actions]]\n![[areas.gamedev.dragonruby.patterns.input-actions#input-actions,1:#background--principles]]\n","n":0.354}}},{"i":543,"$":{"0":{"v":"Input Actions","n":0.707},"1":{"v":"# Input Actions\n\nInstead of using `args.inputs` directly you parse it into an input actions objects, which is then used instead to\ncontrol your game.\n\n![Input Actions](./assets/images/input_actions.png)\n\n## When is it useful?\nSome scenarios when this pattern can be useful:\n- Having several different kinds of inputs with the same effect\n- Configurable controls\n- Letting an AI player control your game (character)\n- Multiplayer\n\nIn general I think it results in cleaner, better organized code but YMMV of course.\n\n## Background & Principles\nWhen developing complex pieces of software it often pays off to divide your program into separate independent small\npieces that have clear-cut responsibilities and can live independently from each other.\n\nProcessing raw player inputs provided by `args.inputs` and converting them into a more abstract object describing\nactions the player takes in one distinct step at the beginning of your tick will allow you to tinker with your control\nscheme without having to track down your input code all over the place.\n\nOne natural way to approach this pattern would be to imagine that your game controls could be configured in your game's\noption menu (even if you are in fact still very far away from actually having any menus). Each of the controls that\ncould be re-assigned to a different button would be one type of input event that can be returned by your processing\nfunction.\n\nAbstracting controls away to these kind of input action objects, gives you also the advantage that your remaining game\nlogic can now be called with them instead of having to pass `args.inputs` directly.\n\nIf you have enemy characters that are gameplay-wise similar to your player character you could re-use your player\nupdate functions with AI produced input events.\n\n## Implementation Example\n```rb\ndef tick(args)\n  input_actions = process_inputs(args.inputs)\n\n  if input_actions[:movement]\n    args.state.player.x += input_actions[:movement][:x]\n  end\n\n  if input_actions[:jump]\n    # Jumping logic\n  end\nend\n\ndef process_inputs(inputs)\n  input_actions = {}\n\n  if inputs.keyboard.key_down.space || inputs.keyboard.key_down.up || inputs.keyboard.key_down.w\n    input_actions[:jump] = true\n  end\n\n  if inputs.keyboard.key_held.left || inputs.keyboard.key_held.a\n    input_actions[:movement] = { x: -1 }\n  elsif inputs.keyboard.key_held.right || inputs.keyboard.key_held.d\n    input_actions[:movement] = { x: 1 }\n  end\n\n  input_actions\nend\n```\n\n## Caveats & Thoughts for more complex scenarios\n- You will probably have more than one set of possible actions (gameplay and inside a menu would be classic examples)\n  which means that you will need several kinds of `process_inputs` functions for different situations (or use\n  `if`/`case` statements to make the distinguishment inside one functions)\n- You might need some kind of state in addition to the inputs if you need to process inputs that take longer than 1\n  tick, like distinguishing long button presses from short ones\n","n":0.05}}},{"i":544,"$":{"0":{"v":"Cvars","n":1},"1":{"v":"\n# Cvars\n\nVariables you can set via the command line:\n\n```sh\n./dragonruby game_folder --set veriable.name value\n```\n\n## Accessing Cvars\n```rb\nargs.cvars['variable.name']\n```\n\nAvailable methods:\n- `name`\n- `value`\n- `value=` (only for non-locked variables)\n- `type`\n- `description`\n- `locked`: Variable can only be set on application start via the `--set` flag, not during runtime\n\n## Register Cvars\n```rb\n$gtk.register_cvar varname, description, type, default_value\n```\n- type: `:string`, `:int`, `:uint`, `:bool`\n\n## Default Cvars\n\n```rb\n$args.cvars.each do |name, var|\n  puts \"#{name}: #{var.value} (#{var.description}. Type: #{var.type}. Locked? #{var.locked})\"\nend\n```\n\n```\nlog.stdout_color: true (True if we should colorize logs sent to stdout)\nlog.subsystem: true (True if we should include the subsystem name in the log output)\nlog.level_char: true (True if we should include the logging level character in the log output)\nlog.timing: true (True if we should include the timing in the log output)\nlog.stdout: true (True if we should write logs to stdout)\nlog.filter_subsystems: '' (Comma-separated list of subsystems to ignore logging for [LOCKED])\nlog.level: 'debug' (One of [spam, debug, info, warn, error, unfiltered, nothing]. Filter out everything less than. [LOCKED])\nlog.filename: '(gameid).log' (filename to write log data to [LOCKED])\nrenderstream.filename: '' (Filename to save render stream to. If empty, no stream is saved. [LOCKED])\ncontroller.config_ui: 0 (Use the controller config UI? 0==for unknown joysticks, 1==for all joysticks, -1==for no joysticks )\ngame_metadata.vrmode: 0 (VR mode [LOCKED])\ngame_metadata.packageid: 'org.(devid).(gameid)' (Package ID in reverse-domain format [LOCKED])\ngame_metadata.compile_ruby: false (True if production builds cook Ruby source code [LOCKED])\ngame_metadata.deployment: false (True if this is a production build [LOCKED])\ngame_metadata.icon: 'metadata/icon.png' (Game's icon filename [LOCKED])\ngame_metadata.version: '1.0.0' (Game's version number [LOCKED])\ngame_metadata.gametitle: 'Game Title' (Actual game name [LOCKED])\ngame_metadata.gameid: 'game-id' (Game ID (simple identifier) [LOCKED])\ngame_metadata.devtitle: 'Full Name' (Actual developer name [LOCKED])\ngame_metadata.devid: 'devid' (Developer ID (simple identifier) [LOCKED])\nrenderer.vsync: true (True if we should sync-to-vblank when presenting)\nrenderer.start_headless: false (True if we shouldn't show a window at startup)\nrenderer.fullscreen: false (True if we should use the whole display)\n```\n","n":0.06}}},{"i":545,"$":{"0":{"v":"Boss Design","n":0.707},"1":{"v":"\n# Boss Design\n\nhttps://www.youtube.com/watch?v=ywshx1HPZU4\n\n\n\n- Telegraphing attacks\n  - The more difficult/powerful the attack the longer the telegraph should be\n  - One way to increase difficulty is to shorten the telegraph\n\n- Serve as an exam of game mechanics learned so far\n  - Sometimes have unique new game mechanics\n\n- Phases that change attack patterns\n  - Dramatic Arc\n\n    ![Dramatic Arc](assets/images/dramatic-arc.png)\n  - Give variety\n  - Escalate stakes\n  - Gives player many victories throughout the fight\n    - Even if they die, they will be happy if they\n","n":0.112}}},{"i":546,"$":{"0":{"v":"Artificial Life","n":0.707},"1":{"v":"# Artificial Life\n\nhttps://thelifeengine.net/\n\n\n![[inbox.videos.artificial-life-simulation]]\n","n":0.577}}}]}
